<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20213.21.1018.0949                               -->
<workbook source-build='2021.3.3 (20213.21.1018.0949)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='NBA_Analysis_Project_Story' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Size' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.3'>
        <calculation class='tableau' formula='0.3' />
        <range max='1.0' min='0.0' />
      </column>
    </datasource>
    <datasource caption='nba_shots_stats_master_cleaned' inline='true' name='federated.1b1haxu0qu83q01ecfupu0ut27li' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='nba_shots_stats_master_cleaned' name='textscan.1rfe7iq1ds4m1k1e6gpdx1tgj98n'>
            <connection class='textscan' directory='C:/Users/shami/OneDrive/Documents/Juno College Data Analytics Bootcamp/Tableau/Project/Data' filename='nba_shots_stats_master_cleaned.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1rfe7iq1ds4m1k1e6gpdx1tgj98n' name='nba_shots_stats_master_cleaned.csv' table='[nba_shots_stats_master_cleaned#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='GAME_ID' ordinal='0' />
            <column datatype='integer' name='GAME_EVENT_ID' ordinal='1' />
            <column datatype='integer' name='PLAYER_ID' ordinal='2' />
            <column datatype='string' name='PLAYER_NAME' ordinal='3' />
            <column datatype='integer' name='TEAM_ID' ordinal='4' />
            <column datatype='string' name='TEAM_NAME' ordinal='5' />
            <column datatype='integer' name='PERIOD' ordinal='6' />
            <column datatype='integer' name='MINUTES_REMAINING' ordinal='7' />
            <column datatype='integer' name='SECONDS_REMAINING' ordinal='8' />
            <column datatype='string' name='EVENT_TYPE' ordinal='9' />
            <column datatype='string' name='ACTION_TYPE' ordinal='10' />
            <column datatype='string' name='SHOT_TYPE' ordinal='11' />
            <column datatype='string' name='SHOT_ZONE_BASIC' ordinal='12' />
            <column datatype='string' name='SHOT_ZONE_AREA' ordinal='13' />
            <column datatype='string' name='SHOT_ZONE_RANGE' ordinal='14' />
            <column datatype='integer' name='SHOT_DISTANCE' ordinal='15' />
            <column datatype='integer' name='LOC_X' ordinal='16' />
            <column datatype='integer' name='LOC_Y' ordinal='17' />
            <column datatype='integer' name='SHOT_ATTEMPTED_FLAG' ordinal='18' />
            <column datatype='integer' name='SHOT_MADE_FLAG' ordinal='19' />
            <column datatype='date' name='GAME_DATE' ordinal='20' />
            <column datatype='string' name='HTM' ordinal='21' />
            <column datatype='string' name='VTM' ordinal='22' />
            <column datatype='integer' name='Rk' ordinal='23' />
            <column datatype='string' name='Player' ordinal='24' />
            <column datatype='string' name='Pos' ordinal='25' />
            <column datatype='integer' name='Age' ordinal='26' />
            <column datatype='integer' name='G' ordinal='27' />
            <column datatype='integer' name='GS' ordinal='28' />
            <column datatype='integer' name='MP' ordinal='29' />
            <column datatype='integer' name='FG' ordinal='30' />
            <column datatype='integer' name='FGA' ordinal='31' />
            <column datatype='real' name='FG%' ordinal='32' />
            <column datatype='integer' name='3P' ordinal='33' />
            <column datatype='integer' name='3PA' ordinal='34' />
            <column datatype='real' name='3P%' ordinal='35' />
            <column datatype='integer' name='2P' ordinal='36' />
            <column datatype='integer' name='2PA' ordinal='37' />
            <column datatype='real' name='2P%' ordinal='38' />
            <column datatype='real' name='eFG%' ordinal='39' />
            <column datatype='integer' name='FT' ordinal='40' />
            <column datatype='integer' name='FTA' ordinal='41' />
            <column datatype='real' name='FT%' ordinal='42' />
            <column datatype='integer' name='ORB' ordinal='43' />
            <column datatype='integer' name='DRB' ordinal='44' />
            <column datatype='integer' name='TRB' ordinal='45' />
            <column datatype='integer' name='AST' ordinal='46' />
            <column datatype='integer' name='STL' ordinal='47' />
            <column datatype='integer' name='BLK' ordinal='48' />
            <column datatype='integer' name='TOV' ordinal='49' />
            <column datatype='integer' name='PF' ordinal='50' />
            <column datatype='integer' name='PTS' ordinal='51' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1rfe7iq1ds4m1k1e6gpdx1tgj98n' name='nba_shots_stats_master_cleaned.csv' table='[nba_shots_stats_master_cleaned#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='GAME_ID' ordinal='0' />
            <column datatype='integer' name='GAME_EVENT_ID' ordinal='1' />
            <column datatype='integer' name='PLAYER_ID' ordinal='2' />
            <column datatype='string' name='PLAYER_NAME' ordinal='3' />
            <column datatype='integer' name='TEAM_ID' ordinal='4' />
            <column datatype='string' name='TEAM_NAME' ordinal='5' />
            <column datatype='integer' name='PERIOD' ordinal='6' />
            <column datatype='integer' name='MINUTES_REMAINING' ordinal='7' />
            <column datatype='integer' name='SECONDS_REMAINING' ordinal='8' />
            <column datatype='string' name='EVENT_TYPE' ordinal='9' />
            <column datatype='string' name='ACTION_TYPE' ordinal='10' />
            <column datatype='string' name='SHOT_TYPE' ordinal='11' />
            <column datatype='string' name='SHOT_ZONE_BASIC' ordinal='12' />
            <column datatype='string' name='SHOT_ZONE_AREA' ordinal='13' />
            <column datatype='string' name='SHOT_ZONE_RANGE' ordinal='14' />
            <column datatype='integer' name='SHOT_DISTANCE' ordinal='15' />
            <column datatype='integer' name='LOC_X' ordinal='16' />
            <column datatype='integer' name='LOC_Y' ordinal='17' />
            <column datatype='integer' name='SHOT_ATTEMPTED_FLAG' ordinal='18' />
            <column datatype='integer' name='SHOT_MADE_FLAG' ordinal='19' />
            <column datatype='date' name='GAME_DATE' ordinal='20' />
            <column datatype='string' name='HTM' ordinal='21' />
            <column datatype='string' name='VTM' ordinal='22' />
            <column datatype='integer' name='Rk' ordinal='23' />
            <column datatype='string' name='Player' ordinal='24' />
            <column datatype='string' name='Pos' ordinal='25' />
            <column datatype='integer' name='Age' ordinal='26' />
            <column datatype='integer' name='G' ordinal='27' />
            <column datatype='integer' name='GS' ordinal='28' />
            <column datatype='integer' name='MP' ordinal='29' />
            <column datatype='integer' name='FG' ordinal='30' />
            <column datatype='integer' name='FGA' ordinal='31' />
            <column datatype='real' name='FG%' ordinal='32' />
            <column datatype='integer' name='3P' ordinal='33' />
            <column datatype='integer' name='3PA' ordinal='34' />
            <column datatype='real' name='3P%' ordinal='35' />
            <column datatype='integer' name='2P' ordinal='36' />
            <column datatype='integer' name='2PA' ordinal='37' />
            <column datatype='real' name='2P%' ordinal='38' />
            <column datatype='real' name='eFG%' ordinal='39' />
            <column datatype='integer' name='FT' ordinal='40' />
            <column datatype='integer' name='FTA' ordinal='41' />
            <column datatype='real' name='FT%' ordinal='42' />
            <column datatype='integer' name='ORB' ordinal='43' />
            <column datatype='integer' name='DRB' ordinal='44' />
            <column datatype='integer' name='TRB' ordinal='45' />
            <column datatype='integer' name='AST' ordinal='46' />
            <column datatype='integer' name='STL' ordinal='47' />
            <column datatype='integer' name='BLK' ordinal='48' />
            <column datatype='integer' name='TOV' ordinal='49' />
            <column datatype='integer' name='PF' ordinal='50' />
            <column datatype='integer' name='PTS' ordinal='51' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GAME_ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GAME_ID]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>GAME_ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GAME_EVENT_ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GAME_EVENT_ID]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>GAME_EVENT_ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PLAYER_ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PLAYER_ID]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>PLAYER_ID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PLAYER_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PLAYER_NAME]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>PLAYER_NAME</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TEAM_ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TEAM_ID]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>TEAM_ID</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TEAM_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TEAM_NAME]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>TEAM_NAME</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PERIOD</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PERIOD]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>PERIOD</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MINUTES_REMAINING</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MINUTES_REMAINING]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>MINUTES_REMAINING</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SECONDS_REMAINING</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SECONDS_REMAINING]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>SECONDS_REMAINING</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EVENT_TYPE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[EVENT_TYPE]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>EVENT_TYPE</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ACTION_TYPE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ACTION_TYPE]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>ACTION_TYPE</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SHOT_TYPE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SHOT_TYPE]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>SHOT_TYPE</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SHOT_ZONE_BASIC</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SHOT_ZONE_BASIC]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>SHOT_ZONE_BASIC</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SHOT_ZONE_AREA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SHOT_ZONE_AREA]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>SHOT_ZONE_AREA</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SHOT_ZONE_RANGE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SHOT_ZONE_RANGE]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>SHOT_ZONE_RANGE</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SHOT_DISTANCE</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SHOT_DISTANCE]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>SHOT_DISTANCE</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LOC_X</remote-name>
            <remote-type>20</remote-type>
            <local-name>[LOC_X]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>LOC_X</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LOC_Y</remote-name>
            <remote-type>20</remote-type>
            <local-name>[LOC_Y]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>LOC_Y</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SHOT_ATTEMPTED_FLAG</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SHOT_ATTEMPTED_FLAG]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>SHOT_ATTEMPTED_FLAG</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SHOT_MADE_FLAG</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SHOT_MADE_FLAG]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>SHOT_MADE_FLAG</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GAME_DATE</remote-name>
            <remote-type>133</remote-type>
            <local-name>[GAME_DATE]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>GAME_DATE</remote-alias>
            <ordinal>20</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HTM</remote-name>
            <remote-type>129</remote-type>
            <local-name>[HTM]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>HTM</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VTM</remote-name>
            <remote-type>129</remote-type>
            <local-name>[VTM]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>VTM</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rk</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rk]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>Rk</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Player</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Player]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>Player</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pos</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Pos]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>Pos</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Age]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>Age</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>G</remote-name>
            <remote-type>20</remote-type>
            <local-name>[G]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>G</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GS]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>GS</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MP]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>MP</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FG</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FG]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>FG</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FGA</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FGA]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>FGA</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FG%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[FG%]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>FG%</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3P</remote-name>
            <remote-type>20</remote-type>
            <local-name>[3P]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>3P</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3PA</remote-name>
            <remote-type>20</remote-type>
            <local-name>[3PA]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>3PA</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3P%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[3P%]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>3P%</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2P</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2P]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>2P</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2PA</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2PA]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>2PA</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2P%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2P%]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>2P%</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>eFG%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[eFG%]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>eFG%</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FT</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FT]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>FT</remote-alias>
            <ordinal>40</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FTA</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FTA]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>FTA</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FT%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[FT%]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>FT%</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ORB</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ORB]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>ORB</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DRB</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DRB]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>DRB</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TRB</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TRB]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>TRB</remote-alias>
            <ordinal>45</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AST</remote-name>
            <remote-type>20</remote-type>
            <local-name>[AST]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>AST</remote-alias>
            <ordinal>46</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STL</remote-name>
            <remote-type>20</remote-type>
            <local-name>[STL]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>STL</remote-alias>
            <ordinal>47</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BLK</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BLK]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>BLK</remote-alias>
            <ordinal>48</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TOV</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TOV]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>TOV</remote-alias>
            <ordinal>49</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PF</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PF]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>PF</remote-alias>
            <ordinal>50</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PTS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PTS]</local-name>
            <parent-name>[nba_shots_stats_master_cleaned.csv]</parent-name>
            <remote-alias>PTS</remote-alias>
            <ordinal>51</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[2P%]' role='measure' type='quantitative' />
      <column datatype='integer' name='[2PA]' role='measure' type='quantitative' />
      <column datatype='integer' name='[2P]' role='measure' type='quantitative' />
      <column datatype='real' name='[3P%]' role='measure' type='quantitative' />
      <column datatype='integer' name='[3PA]' role='measure' type='quantitative' />
      <column datatype='integer' name='[3P]' role='measure' type='quantitative' />
      <column caption='Action Type' datatype='string' name='[ACTION_TYPE]' role='dimension' type='nominal' />
      <column datatype='integer' name='[AST]' role='measure' type='quantitative' />
      <column aggregation='None' caption='Age Groups' datatype='integer' name='[Age (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[Age]' peg='0' size='3' />
      </column>
      <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
      <column datatype='integer' name='[BLK]' role='measure' type='quantitative' />
      <column caption='Rebounds Per Game' datatype='real' name='[Calculation_1112952094544662528]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MAX([TRB])/MAX([G])' />
      </column>
      <column caption='Total Rebounds' datatype='integer' name='[Calculation_1112952094558171137]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MAX([DRB]) + MAX([ORB])' />
      </column>
      <column caption='Defensive Rebounds' datatype='integer' name='[Calculation_1112952094558478338]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MAX([DRB])' />
      </column>
      <column caption='Offensive Rebounds' datatype='integer' name='[Calculation_1112952094560137219]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MAX([ORB])' />
      </column>
      <column caption='3 points' datatype='integer' name='[Calculation_1112952094569717764]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MAX([3P]) * 3' />
      </column>
      <column caption='2 Points' datatype='integer' name='[Calculation_1112952094569906181]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MAX([2P]) * 2' />
      </column>
      <column aggregation='Sum' caption='Hexbin X' datatype='real' name='[Calculation_1112952094575124486]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='-HEXBINX([LOC_X] * [Parameters].[Parameter 1], [LOC_Y]* [Parameters].[Parameter 1])/[Parameters].[Parameter 1]' />
      </column>
      <column aggregation='Sum' caption='Hexbin Y' datatype='real' name='[Calculation_1112952094575284231]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='HEXBINY([LOC_X] * [Parameters].[Parameter 1], [LOC_Y] * [Parameters].[Parameter 1])/ [Parameters].[Parameter 1]' />
      </column>
      <column caption='Shot Zone' datatype='string' name='[Calculation_1112952094579003400]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[SHOT_ZONE_BASIC] + &apos; - &apos; + [SHOT_ZONE_AREA]' />
      </column>
      <column caption='Fixed_ShotZone_FG%' datatype='real' name='[Calculation_1397804771031994368]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [Calculation_1112952094579003400]: MAX([FG%])}' />
      </column>
      <column caption='FG%' datatype='real' name='[Calculation_1397804771042365441]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([SHOT_MADE_FLAG]) / SUM([SHOT_ATTEMPTED_FLAG])' />
      </column>
      <column caption='Team_FG%' datatype='real' name='[Calculation_1397804771044945922]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [TEAM_NAME]: [Calculation_1397804771042365441]}' />
      </column>
      <column caption='League Average Rebounds' datatype='real' name='[Calculation_1397804771153735686]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([TRB])' />
      </column>
      <column caption='Fixed_FG%_LOD' datatype='real' name='[Calculation_1397804771155599367]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Calculation_1112952094579003400], [PLAYER_ID]: [Calculation_1397804771042365441] }' />
      </column>
      <column caption='FG% by shot zone per team' datatype='real' name='[Calculation_1397804771162169354]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Calculation_1112952094579003400], [TEAM_ID]: [Calculation_1397804771042365441] }' />
      </column>
      <column caption='Team_FT%' datatype='real' name='[Calculation_1397804771222761485]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [TEAM_NAME]: MAX([FT%])}' />
      </column>
      <column caption='Steals per game' datatype='real' name='[Calculation_1397804771228319759]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MAX([STL])/ MAX([G])' />
      </column>
      <column caption='Assists per Game' datatype='real' name='[Calculation_1397804771232346128]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MAX([AST])/ MAX([G])' />
      </column>
      <column caption='Blocks Per Game' datatype='real' name='[Calculation_1397804771236954129]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MAX([BLK])/ MAX([G])' />
      </column>
      <column caption='Points per Game' datatype='real' name='[Calculation_1397804771238596626]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MAX([PTS])/MAX([G])' />
      </column>
      <column caption='ShotZone_FG%' datatype='real' name='[Calculation_1397804771259252755]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [Calculation_1112952094579003400]: [Calculation_1397804771042365441]}' />
      </column>
      <column caption='Fixed_Team_FG%' datatype='real' name='[Calculation_1397804771267108884]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [TEAM_NAME]: [Calculation_1397804771042365441]}' />
      </column>
      <column caption='Fixed_ShotZone_FG%_Pos' datatype='real' name='[Calculation_1397804771274670101]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Calculation_1112952094579003400], [Pos]: [Calculation_1397804771042365441]}' />
      </column>
      <column datatype='integer' name='[DRB]' role='measure' type='quantitative' />
      <column caption='Event Type' datatype='string' name='[EVENT_TYPE]' role='dimension' type='nominal' />
      <column caption='Year_end_FG%' datatype='real' name='[FG%]' role='measure' type='quantitative' />
      <column caption='Year_end_FGA' datatype='integer' name='[FGA]' role='measure' type='quantitative' />
      <column caption='Year_end_FGM' datatype='integer' name='[FG]' role='measure' type='quantitative' />
      <column datatype='real' name='[FT%]' role='measure' type='quantitative' />
      <column datatype='integer' name='[FTA]' role='measure' type='quantitative' />
      <column datatype='integer' name='[FT]' role='measure' type='quantitative' />
      <column caption='Game Date' datatype='date' name='[GAME_DATE]' role='dimension' type='ordinal' />
      <column caption='Game Event Id' datatype='integer' name='[GAME_EVENT_ID]' role='dimension' type='ordinal' />
      <column caption='Game Id' datatype='integer' name='[GAME_ID]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[GS]' role='measure' type='quantitative' />
      <column datatype='integer' name='[G]' role='measure' type='quantitative' />
      <column caption='Home Team' datatype='string' name='[HTM]' role='dimension' type='nominal' />
      <column caption='Loc X' datatype='integer' name='[LOC_X]' role='measure' type='quantitative' />
      <column caption='Loc Y' datatype='integer' name='[LOC_Y]' role='measure' type='quantitative' />
      <column caption='Minutes Remaining' datatype='integer' name='[MINUTES_REMAINING]' role='measure' type='quantitative' />
      <column datatype='integer' name='[MP]' role='measure' type='quantitative' />
      <column datatype='integer' name='[ORB]' role='measure' type='quantitative' />
      <column caption='Period' datatype='integer' name='[PERIOD]' role='measure' type='quantitative' />
      <column datatype='integer' name='[PF]' role='measure' type='quantitative' />
      <column caption='Player Id' datatype='integer' name='[PLAYER_ID]' role='dimension' type='ordinal' />
      <column caption='Player Name' datatype='string' name='[PLAYER_NAME]' role='dimension' type='nominal' />
      <column datatype='integer' name='[PTS]' role='measure' type='quantitative' />
      <column datatype='string' name='[Player]' role='dimension' type='nominal' />
      <column datatype='string' name='[Pos]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Rk]' role='measure' type='quantitative' />
      <column caption='Seconds Remaining' datatype='integer' name='[SECONDS_REMAINING]' role='measure' type='quantitative' />
      <column caption='FGA' datatype='integer' name='[SHOT_ATTEMPTED_FLAG]' role='measure' type='quantitative' />
      <column caption='Shot Distance' datatype='integer' name='[SHOT_DISTANCE]' role='measure' type='quantitative' />
      <column caption='FGM' datatype='integer' name='[SHOT_MADE_FLAG]' role='measure' type='quantitative' />
      <column caption='Shot Type' datatype='string' name='[SHOT_TYPE]' role='dimension' type='nominal' />
      <column caption='Shot Zone Area' datatype='string' name='[SHOT_ZONE_AREA]' role='dimension' type='nominal' />
      <column caption='Shot Zone Basic' datatype='string' name='[SHOT_ZONE_BASIC]' role='dimension' type='nominal' />
      <column caption='Shot Zone Range' datatype='string' name='[SHOT_ZONE_RANGE]' role='dimension' type='nominal' />
      <column datatype='integer' name='[STL]' role='measure' type='quantitative' />
      <column caption='Team Id' datatype='integer' name='[TEAM_ID]' role='dimension' type='ordinal' />
      <column caption='Team Name' datatype='string' name='[TEAM_NAME]' role='dimension' type='nominal' />
      <column datatype='integer' name='[TOV]' role='measure' type='quantitative' />
      <column datatype='integer' name='[TRB]' role='measure' type='quantitative' />
      <column caption='Visiting Team' datatype='string' name='[VTM]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='nba_shots_stats_master_cleaned.csv' datatype='table' name='[__tableau_internal_object_id__].[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]' role='measure' type='quantitative' />
      <column datatype='real' name='[eFG%]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2P%]' derivation='Attribute' name='[attr:2P%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[3P%]' derivation='Attribute' name='[attr:3P%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BLK]' derivation='Attribute' name='[attr:BLK:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1112952094544662528]' derivation='Attribute' name='[attr:Calculation_1112952094544662528:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1397804771031994368]' derivation='Attribute' name='[attr:Calculation_1397804771031994368:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1397804771222761485]' derivation='Attribute' name='[attr:Calculation_1397804771222761485:qk]' pivot='key' type='quantitative' />
      <column-instance column='[FT%]' derivation='Attribute' name='[attr:FT%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[PLAYER_NAME]' derivation='Attribute' name='[attr:PLAYER_NAME:nk]' pivot='key' type='nominal' />
      <column-instance column='[PTS]' derivation='Attribute' name='[attr:PTS:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Player]' derivation='Attribute' name='[attr:Player:nk]' pivot='key' type='nominal' />
      <column-instance column='[SHOT_MADE_FLAG]' derivation='Attribute' name='[attr:SHOT_MADE_FLAG:ok]' pivot='key' type='ordinal' />
      <column-instance column='[eFG%]' derivation='Attribute' name='[attr:eFG%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2P%]' derivation='Avg' name='[avg:2P%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[3P%]' derivation='Avg' name='[avg:3P%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1397804771222761485]' derivation='Avg' name='[avg:Calculation_1397804771222761485:qk]' pivot='key' type='quantitative' />
      <column-instance column='[FT%]' derivation='Avg' name='[avg:FT%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LOC_X]' derivation='Avg' name='[avg:LOC_X:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1397804771044945922]' derivation='Count' name='[cnt:Calculation_1397804771044945922:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ORB]' derivation='Count' name='[cnt:ORB:qk]' pivot='key' type='quantitative' />
      <column-instance column='[3P%]' derivation='CountD' name='[ctd:3P%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2P%]' derivation='Max' name='[max:2P%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[3P%]' derivation='Max' name='[max:3P%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BLK]' derivation='Max' name='[max:BLK:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1397804771031994368]' derivation='Max' name='[max:Calculation_1397804771031994368:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1397804771044945922]' derivation='Max' name='[max:Calculation_1397804771044945922:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1397804771162169354]' derivation='Max' name='[max:Calculation_1397804771162169354:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1397804771222761485]' derivation='Max' name='[max:Calculation_1397804771222761485:qk]' pivot='key' type='quantitative' />
      <column-instance column='[FT%]' derivation='Max' name='[max:FT%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[FT]' derivation='Max' name='[max:FT:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ORB]' derivation='Max' name='[max:ORB:qk]' pivot='key' type='quantitative' />
      <column-instance column='[eFG%]' derivation='Max' name='[max:eFG%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1397804771044945922]' derivation='Min' name='[min:Calculation_1397804771044945922:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Player]' derivation='Min' name='[min:Player:nk]' pivot='key' type='nominal' />
      <column-instance column='[2P%]' derivation='None' name='[none:2P%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[3P%]' derivation='None' name='[none:3P%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BLK]' derivation='None' name='[none:BLK:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1112952094544662528]' derivation='None' name='[none:Calculation_1112952094544662528:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1112952094579003400]' derivation='None' name='[none:Calculation_1112952094579003400:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1397804771031994368]' derivation='None' name='[none:Calculation_1397804771031994368:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1397804771155599367]' derivation='None' name='[none:Calculation_1397804771155599367:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1397804771162169354]' derivation='None' name='[none:Calculation_1397804771162169354:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1397804771162169354]' derivation='None' name='[none:Calculation_1397804771162169354:qk]' pivot='key' type='quantitative' />
      <column-instance column='[FG%]' derivation='None' name='[none:FG%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[FGA]' derivation='None' name='[none:FGA:qk]' pivot='key' type='quantitative' />
      <column-instance column='[FT%]' derivation='None' name='[none:FT%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[PLAYER_NAME]' derivation='None' name='[none:PLAYER_NAME:nk]' pivot='key' type='nominal' />
      <column-instance column='[Player]' derivation='None' name='[none:Player:nk]' pivot='key' type='nominal' />
      <column-instance column='[Pos]' derivation='None' name='[none:Pos:nk]' pivot='key' type='nominal' />
      <column-instance column='[SHOT_ATTEMPTED_FLAG]' derivation='None' name='[none:SHOT_ATTEMPTED_FLAG:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SHOT_MADE_FLAG]' derivation='None' name='[none:SHOT_MADE_FLAG:ok]' pivot='key' type='ordinal' />
      <column-instance column='[TEAM_NAME]' derivation='None' name='[none:TEAM_NAME:nk]' pivot='key' type='nominal' />
      <column-instance column='[eFG%]' derivation='None' name='[none:eFG%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1112952094558478338]' derivation='User' name='[pcto:usr:Calculation_1112952094558478338:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1112952094558478338]' derivation='User' name='[pcto:usr:Calculation_1112952094558478338:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1112952094560137219]' derivation='User' name='[pcto:usr:Calculation_1112952094560137219:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1112952094560137219]' derivation='User' name='[pcto:usr:Calculation_1112952094560137219:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1112952094558171137]' derivation='User' name='[rank:usr:Calculation_1112952094558171137:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Calculation_1112952094558478338]' derivation='User' name='[rank:usr:Calculation_1112952094558478338:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[2P%]' derivation='Sum' name='[sum:2P%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2P]' derivation='Sum' name='[sum:2P:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2PA]' derivation='Sum' name='[sum:2PA:qk]' pivot='key' type='quantitative' />
      <column-instance column='[3P%]' derivation='Sum' name='[sum:3P%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[3P]' derivation='Sum' name='[sum:3P:qk]' pivot='key' type='quantitative' />
      <column-instance column='[3PA]' derivation='Sum' name='[sum:3PA:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AST]' derivation='Sum' name='[sum:AST:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Age]' derivation='Sum' name='[sum:Age:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BLK]' derivation='Sum' name='[sum:BLK:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1112952094544662528]' derivation='Sum' name='[sum:Calculation_1112952094544662528:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1397804771031994368]' derivation='Sum' name='[sum:Calculation_1397804771031994368:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1397804771044945922]' derivation='Sum' name='[sum:Calculation_1397804771044945922:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1397804771155599367]' derivation='Sum' name='[sum:Calculation_1397804771155599367:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1397804771162169354]' derivation='Sum' name='[sum:Calculation_1397804771162169354:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1397804771222761485]' derivation='Sum' name='[sum:Calculation_1397804771222761485:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DRB]' derivation='Sum' name='[sum:DRB:qk]' pivot='key' type='quantitative' />
      <column-instance column='[FG%]' derivation='Sum' name='[sum:FG%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[FG]' derivation='Sum' name='[sum:FG:qk]' pivot='key' type='quantitative' />
      <column-instance column='[FGA]' derivation='Sum' name='[sum:FGA:qk]' pivot='key' type='quantitative' />
      <column-instance column='[FT%]' derivation='Sum' name='[sum:FT%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[FT]' derivation='Sum' name='[sum:FT:qk]' pivot='key' type='quantitative' />
      <column-instance column='[FTA]' derivation='Sum' name='[sum:FTA:qk]' pivot='key' type='quantitative' />
      <column-instance column='[G]' derivation='Sum' name='[sum:G:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GS]' derivation='Sum' name='[sum:GS:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LOC_X]' derivation='Sum' name='[sum:LOC_X:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LOC_Y]' derivation='Sum' name='[sum:LOC_Y:qk]' pivot='key' type='quantitative' />
      <column-instance column='[MINUTES_REMAINING]' derivation='Sum' name='[sum:MINUTES_REMAINING:qk]' pivot='key' type='quantitative' />
      <column-instance column='[MP]' derivation='Sum' name='[sum:MP:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ORB]' derivation='Sum' name='[sum:ORB:qk]' pivot='key' type='quantitative' />
      <column-instance column='[PERIOD]' derivation='Sum' name='[sum:PERIOD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[PF]' derivation='Sum' name='[sum:PF:qk]' pivot='key' type='quantitative' />
      <column-instance column='[PTS]' derivation='Sum' name='[sum:PTS:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Rk]' derivation='Sum' name='[sum:Rk:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SECONDS_REMAINING]' derivation='Sum' name='[sum:SECONDS_REMAINING:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SHOT_ATTEMPTED_FLAG]' derivation='Sum' name='[sum:SHOT_ATTEMPTED_FLAG:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SHOT_DISTANCE]' derivation='Sum' name='[sum:SHOT_DISTANCE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SHOT_MADE_FLAG]' derivation='Sum' name='[sum:SHOT_MADE_FLAG:ok]' pivot='key' type='ordinal' />
      <column-instance column='[SHOT_MADE_FLAG]' derivation='Sum' name='[sum:SHOT_MADE_FLAG:qk]' pivot='key' type='quantitative' />
      <column-instance column='[STL]' derivation='Sum' name='[sum:STL:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TOV]' derivation='Sum' name='[sum:TOV:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TRB]' derivation='Sum' name='[sum:TRB:qk]' pivot='key' type='quantitative' />
      <column-instance column='[eFG%]' derivation='Sum' name='[sum:eFG%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1112952094558171137]' derivation='User' name='[usr:Calculation_1112952094558171137:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1112952094558478338]' derivation='User' name='[usr:Calculation_1112952094558478338:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1112952094560137219]' derivation='User' name='[usr:Calculation_1112952094560137219:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1112952094569717764]' derivation='User' name='[usr:Calculation_1112952094569717764:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1112952094569906181]' derivation='User' name='[usr:Calculation_1112952094569906181:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1397804771042365441]' derivation='User' name='[usr:Calculation_1397804771042365441:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1397804771153735686]' derivation='User' name='[usr:Calculation_1397804771153735686:qk]' pivot='key' type='quantitative' />
      <mapped-images>
        <mapped-image caption='nba_court' expression='file:///C:/Users/shami/OneDrive/Documents/Juno College Data Analytics Bootcamp/Tableau/Project/nba_court.jpg' name='[MappedImage1]'>
          <mapping bottom='-52.0' left='-250.0' right='250.0' top='418.0' x='[Calculation_1112952094575124486]' y='[Calculation_1112952094575284231]' />
        </mapped-image>
      </mapped-images>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/shami/OneDrive/Documents/My Tableau Repository/Datasources/nba_shots_stats_master_cleaned.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='11/08/2021 04:50:58 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='nba_shots_stats_master_cleaned' increment-value='%null%' refresh-type='create' rows-inserted='259423' timestamp-start='2021-11-08 16:50:55.581' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>GAME_ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[GAME_ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GAME_ID</remote-alias>
              <ordinal>0</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6401</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GAME_EVENT_ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[GAME_EVENT_ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GAME_EVENT_ID</remote-alias>
              <ordinal>1</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3154</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PLAYER_ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[PLAYER_ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PLAYER_ID</remote-alias>
              <ordinal>2</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1197</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PLAYER_NAME</remote-name>
              <remote-type>129</remote-type>
              <local-name>[PLAYER_NAME]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PLAYER_NAME</remote-alias>
              <ordinal>3</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1197</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TEAM_ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TEAM_ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TEAM_ID</remote-alias>
              <ordinal>4</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>30</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TEAM_NAME</remote-name>
              <remote-type>129</remote-type>
              <local-name>[TEAM_NAME]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TEAM_NAME</remote-alias>
              <ordinal>5</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>30</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PERIOD</remote-name>
              <remote-type>20</remote-type>
              <local-name>[PERIOD]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PERIOD</remote-alias>
              <ordinal>6</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>MINUTES_REMAINING</remote-name>
              <remote-type>20</remote-type>
              <local-name>[MINUTES_REMAINING]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>MINUTES_REMAINING</remote-alias>
              <ordinal>7</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SECONDS_REMAINING</remote-name>
              <remote-type>20</remote-type>
              <local-name>[SECONDS_REMAINING]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SECONDS_REMAINING</remote-alias>
              <ordinal>8</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>60</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>EVENT_TYPE</remote-name>
              <remote-type>129</remote-type>
              <local-name>[EVENT_TYPE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>EVENT_TYPE</remote-alias>
              <ordinal>9</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ACTION_TYPE</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ACTION_TYPE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ACTION_TYPE</remote-alias>
              <ordinal>10</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>65</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SHOT_TYPE</remote-name>
              <remote-type>129</remote-type>
              <local-name>[SHOT_TYPE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SHOT_TYPE</remote-alias>
              <ordinal>11</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SHOT_ZONE_BASIC</remote-name>
              <remote-type>129</remote-type>
              <local-name>[SHOT_ZONE_BASIC]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SHOT_ZONE_BASIC</remote-alias>
              <ordinal>12</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SHOT_ZONE_AREA</remote-name>
              <remote-type>129</remote-type>
              <local-name>[SHOT_ZONE_AREA]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SHOT_ZONE_AREA</remote-alias>
              <ordinal>13</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SHOT_ZONE_RANGE</remote-name>
              <remote-type>129</remote-type>
              <local-name>[SHOT_ZONE_RANGE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SHOT_ZONE_RANGE</remote-alias>
              <ordinal>14</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SHOT_DISTANCE</remote-name>
              <remote-type>20</remote-type>
              <local-name>[SHOT_DISTANCE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SHOT_DISTANCE</remote-alias>
              <ordinal>15</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>86</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LOC_X</remote-name>
              <remote-type>20</remote-type>
              <local-name>[LOC_X]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LOC_X</remote-alias>
              <ordinal>16</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1965</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LOC_Y</remote-name>
              <remote-type>20</remote-type>
              <local-name>[LOC_Y]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LOC_Y</remote-alias>
              <ordinal>17</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>953</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SHOT_ATTEMPTED_FLAG</remote-name>
              <remote-type>20</remote-type>
              <local-name>[SHOT_ATTEMPTED_FLAG]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SHOT_ATTEMPTED_FLAG</remote-alias>
              <ordinal>18</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SHOT_MADE_FLAG</remote-name>
              <remote-type>20</remote-type>
              <local-name>[SHOT_MADE_FLAG]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SHOT_MADE_FLAG</remote-alias>
              <ordinal>19</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GAME_DATE</remote-name>
              <remote-type>133</remote-type>
              <local-name>[GAME_DATE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GAME_DATE</remote-alias>
              <ordinal>20</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>217</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HTM</remote-name>
              <remote-type>129</remote-type>
              <local-name>[HTM]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HTM</remote-alias>
              <ordinal>21</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>30</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>VTM</remote-name>
              <remote-type>129</remote-type>
              <local-name>[VTM]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>VTM</remote-alias>
              <ordinal>22</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>30</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Rk</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Rk]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Rk</remote-alias>
              <ordinal>23</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1197</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Player</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Player]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Player</remote-alias>
              <ordinal>24</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1197</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Pos</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Pos]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Pos</remote-alias>
              <ordinal>25</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Age</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Age]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Age</remote-alias>
              <ordinal>26</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>40</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>G</remote-name>
              <remote-type>20</remote-type>
              <local-name>[G]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>G</remote-alias>
              <ordinal>27</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>126</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GS</remote-name>
              <remote-type>20</remote-type>
              <local-name>[GS]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GS</remote-alias>
              <ordinal>28</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>78</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>MP</remote-name>
              <remote-type>20</remote-type>
              <local-name>[MP]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>MP</remote-alias>
              <ordinal>29</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1672</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>FG</remote-name>
              <remote-type>20</remote-type>
              <local-name>[FG]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>FG</remote-alias>
              <ordinal>30</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>713</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>FGA</remote-name>
              <remote-type>20</remote-type>
              <local-name>[FGA]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>FGA</remote-alias>
              <ordinal>31</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1280</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>FG%</remote-name>
              <remote-type>5</remote-type>
              <local-name>[FG%]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>FG%</remote-alias>
              <ordinal>32</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>577</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>3P</remote-name>
              <remote-type>20</remote-type>
              <local-name>[3P]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>3P</remote-alias>
              <ordinal>33</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>210</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>3PA</remote-name>
              <remote-type>20</remote-type>
              <local-name>[3PA]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>3PA</remote-alias>
              <ordinal>34</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>706</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>3P%</remote-name>
              <remote-type>5</remote-type>
              <local-name>[3P%]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>3P%</remote-alias>
              <ordinal>35</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>478</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2P</remote-name>
              <remote-type>20</remote-type>
              <local-name>[2P]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2P</remote-alias>
              <ordinal>36</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>609</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2PA</remote-name>
              <remote-type>20</remote-type>
              <local-name>[2PA]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2PA</remote-alias>
              <ordinal>37</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>870</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2P%</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2P%]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2P%</remote-alias>
              <ordinal>38</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>560</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>eFG%</remote-name>
              <remote-type>5</remote-type>
              <local-name>[eFG%]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>eFG%</remote-alias>
              <ordinal>39</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>513</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>FT</remote-name>
              <remote-type>20</remote-type>
              <local-name>[FT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>FT</remote-alias>
              <ordinal>40</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>324</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>FTA</remote-name>
              <remote-type>20</remote-type>
              <local-name>[FTA]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>FTA</remote-alias>
              <ordinal>41</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>379</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>FT%</remote-name>
              <remote-type>5</remote-type>
              <local-name>[FT%]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>FT%</remote-alias>
              <ordinal>42</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>580</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ORB</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ORB]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ORB</remote-alias>
              <ordinal>43</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>215</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DRB</remote-name>
              <remote-type>20</remote-type>
              <local-name>[DRB]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DRB</remote-alias>
              <ordinal>44</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>664</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TRB</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TRB]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TRB</remote-alias>
              <ordinal>45</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>795</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AST</remote-name>
              <remote-type>20</remote-type>
              <local-name>[AST]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AST</remote-alias>
              <ordinal>46</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>381</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>STL</remote-name>
              <remote-type>20</remote-type>
              <local-name>[STL]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>STL</remote-alias>
              <ordinal>47</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>157</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>BLK</remote-name>
              <remote-type>20</remote-type>
              <local-name>[BLK]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>BLK</remote-alias>
              <ordinal>48</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>126</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TOV</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TOV]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TOV</remote-alias>
              <ordinal>49</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>237</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PF</remote-name>
              <remote-type>20</remote-type>
              <local-name>[PF]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PF</remote-alias>
              <ordinal>50</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>390</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PTS</remote-name>
              <remote-type>20</remote-type>
              <local-name>[PTS]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PTS</remote-alias>
              <ordinal>51</ordinal>
              <family>nba_shots_stats_master_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1328</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Player:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Alex Len&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Avery Bradley&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;C.J. Williams&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Collin Sexton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;David Nwaba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Devin Booker&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dwayne Bacon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Frank Ntilikina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hassan Whiteside&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jacob Evans&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jarrett Allen&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Joakim Noah&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jordan McRae&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kelly Oubre Jr.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyle Lowry&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malcolm Miller&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Michael Beasley&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nik Stauskas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Quinn Cook&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Russell Westbrook&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stephen Curry&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tim Hardaway Jr.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tyler Johnson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yogi Ferrell&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aaron Gordon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Andrew Harrison&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brandon Ingram&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chimezie Metu&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Daniel Theis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Deng Adel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Donte Grantham&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Enes Kanter&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Glenn Robinson III&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Isaiah Hicks&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;James Nunnally&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jeremy Lamb&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jon Leuer&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Justin Patton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Khyri Thomas&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lorenzo Brown&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MarShon Brooks&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Montrezl Harrell&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Patrick Patterson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rodions Kurucs&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Shake Milton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Terry Rozier&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tristan Thompson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wayne Selden&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Al-Farouq Aminu&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Anthony Tolliver&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bruce Brown&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Christian Wood&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dante Exum&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Derrick Jones Jr.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Draymond Green&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Evan Fournier&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greg Monroe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ivica Zubac&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jarell Martin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jerryd Bayless&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jonathon Simmons&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Karl-Anthony Towns&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kris Dunn&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Luke Kornet&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Matthew Dellavedova&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nemanja Bjelica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Paul Millsap&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rondae Hollis-Jefferson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sindarius Thornwell&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thomas Bryant&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Troy Williams&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Will Barton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Allen Crabbe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Billy Garrett&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Caris LeVert&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;D.J. Augustin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Deandre Ayton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dewayne Dedmon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E&apos;Twaun Moore&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gary Clark&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ian Mahinmi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jake Layman&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jaylen Adams&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Joe Ingles&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Josh Okogie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kent Bazemore&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lance Stephenson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Marcin Gortat&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mike Conley&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Okaro White&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ray Spalding&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Salah Mejri&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T.J. McConnell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tony Snell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tyrone Wallace&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zach Lofton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Alex Poythress&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bam Adebayo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Caleb Swanigan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Corey Brewer&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Davon Reed&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Devin Harris&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dwight Howard&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fred VanVleet&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Haywood Highsmith&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jae Crowder&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jason Smith&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jodie Meeks&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jordan Sibert&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kemba Walker&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kyle O&apos;Quinn&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malik Beasley&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Michael Carter-Williams&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Noah Vonleh&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rajon Rondo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ryan Anderson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sterling Brown&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tobias Harris&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tyler Lydon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yuta Watanabe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Alan Williams&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antonio Blakeney&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bruno Caboclo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CJ McCollum&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Darius Miller&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Derrick Rose&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Drew Eubanks&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Evan Turner&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guerschon Yabusele&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;J.J. Barea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jaren Jackson Jr.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jevon Carter&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jordan Bell&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kawhi Leonard&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kyle Anderson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luol Deng&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Maurice Harkless&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nerlens Noel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PJ Dozier&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Royce O&apos;Neale&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Solomon Hill&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thomas Welsh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tyler Cavanaugh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Willie Cauley-Stein&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Andre Ingram&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bradley Beal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chasson Randle&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Damyean Dotson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DeMarre Carroll&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Donovan Mitchell&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Emanuel Terry&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gerald Green&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Isaiah Canaan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;James Harden&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jemerrio Jones&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Johnathan Motley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Justin Holiday&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Khem Birch&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LeBron James&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Markieff Morris&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mo Bamba&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Patrick Beverley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Robert Covington&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shabazz Napier&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Terrence Jones&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Trey Burke&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Walt Lemon Jr.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aaron Holiday&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Andrew Wiggins&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brandon Knight&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chris Boucher&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Danilo Gallinari&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dennis Smith Jr.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dorian Finney-Smith&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eric Bledsoe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gordon Hayward&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Isaiah Thomas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;JaMychal Green&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jeremy Lin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jonah Bolden&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Justise Winslow&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Klay Thompson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lou Williams&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marvin Bagley III&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Moritz Wagner&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Patty Mills&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rodney Hood&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Shaquille Harrison&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thabo Sefolosha&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Troy Brown Jr.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wendell Carter Jr.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Andre Drummond&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bonzie Colson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chandler Parsons&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Damian Lillard&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DeMar DeRozan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dirk Nowitzki&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Elfrid Payton&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;George Hill&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Isaac Humphries&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jamal Crawford&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jeff Green&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;John Jenkins&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Julius Randle&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kevin Love&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Larry Nance Jr.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mario Hezonja&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Miles Plumlee&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pascal Siakam&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Richaun Holmes&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Serge Ibaka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Taurean Prince&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Trevon Duval&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Victor Oladipo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Alec Burks&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Aron Baynes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bryn Forbes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Clint Capela&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Darren Collison&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Derrick White&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Duncan Robinson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Frank Jackson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hamidou Diallo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;J.P. Macura&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jaron Blossomgame&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jimmer Fredette&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jordan Clarkson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Keita Bates-Diop&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kyle Korver&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malachi Richardson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maxi Kleber&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nick Young&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Quincy Acy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rudy Gay&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spencer Dinwiddie&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thon Maker&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tyler Davis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wilson Chandler&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Allonzo Trier&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bismack Biyombo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Carmelo Anthony&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;D.J. Wilson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DeAndre Jordan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Deyonta Davis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ed Davis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gary Harris&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ike Anigbogu&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jakob Poeltl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jaylen Brown&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Joel Embiid&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Josh Richardson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kentavious Caldwell-Pope&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lance Thomas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marco Belinelli&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mike Muscala&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Omari Spellman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Raymond Felton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sam Dekker&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T.J. Warren&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Torrey Craig&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tyson Chandler&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zaza Pachulia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Amile Jefferson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Blake Griffin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cedi Osman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;D&apos;Angelo Russell&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DeAndre&apos; Bembry&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dillon Brooks&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Edmond Sumner&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gary Payton II&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iman Shumpert&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jalen Brunson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jaylen Morris&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;John Collins&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jrue Holiday&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kevin Durant&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Landry Shamet&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marcus Derrickson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mike Scott&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Omri Casspi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Reggie Bullock&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Scott Machado&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tahjere McCall&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Trae Young&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tyus Jones&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zhaire Smith&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Andre Iguodala&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brad Wanamaker&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Channing Frye&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Damion Lee&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DeMarcus Cousins&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Domantas Sabonis&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Elie Okobo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Georges Niang&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isaiah Briscoe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamal Murray&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jeff Teague&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;John Wall&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Justin Anderson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kevon Looney&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lauri Markkanen&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Markelle Fultz&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mitchell Robinson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pat Connaughton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ricky Rubio&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Seth Curry&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Terrance Ferguson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Trevor Ariza&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vince Carter&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Andrew Bogut&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brandon Goodwin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cheick Diallo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Daniel Hamilton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Demetrius Jackson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Donte DiVincenzo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Emmanuel Mudiay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Giannis Antetokounmpo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Isaiah Hartenstein&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;James Johnson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jerami Grant&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Johnathan Williams&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Justin Jackson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Khris Middleton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lonzo Ball&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Marquese Chriss&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Monte Morris&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Patrick McCaw&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Robin Lopez&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shai Gilgeous-Alexander&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Terrence Ross&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Trey Lyles&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wayne Ellington&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Alfonzo McKinnie&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ben McLemore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cameron Payne&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cory Joseph&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;De&apos;Aaron Fox&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Devin Robinson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dwight Powell&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Furkan Korkmaz&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Henry Ellenson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jahlil Okafor&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;JaVale McGee&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Joe Chealey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Josh Hart&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kenneth Faried&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kyrie Irving&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malik Monk&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Michael Kidd-Gilchrist&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Norman Powell&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Raul Neto&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ryan Arcidiacono&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Steven Adams&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tony Bradley&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tyler Zeller&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zach Collins&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Alex Caruso&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Austin Rivers&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Buddy Hield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cody Zeller&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Daryl Macon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DeVaughn Akoon-Purcell&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dusty Hannahs&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Frank Kaminsky&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Harrison Barnes&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jabari Parker&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jarred Vanderbilt&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jimmy Butler&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jordan Loyd&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kelly Olynyk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kyle Kuzma&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malcolm Brogdon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Meyers Leonard&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nicolas Batum&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Quincy Pondexter&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rudy Gobert&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stanley Johnson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tim Frazier&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tyler Dorsey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yante Maten&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Abdel Nader&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Anfernee Simons&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brandon Sampson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chris Chiozza&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Danny Green&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Deonte Burton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Doug McDermott&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eric Gordon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gorgui Dieng&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ish Smith&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jared Dudley&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jerian Grant&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jonas Jerebko&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kadeem Allen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kosta Koufos&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Luc Mbah a Moute&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Marvin Williams&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Myles Turner&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pau Gasol&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rodney McGruder&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Shaun Livingston&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thaddeus Young&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Troy Caupain&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wesley Johnson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Amir Johnson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bobby Portis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chandler Hutchison&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Damian Jones&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Delon Wright&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dion Waiters&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ekpe Udoh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gary Trent Jr.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Isaac Bonga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jalen Jones&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jayson Tatum&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;John Henson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Julian Washburn&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kevin Huerter&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Langston Galloway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Marcus Smart&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Miles Bridges&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;P.J. Tucker&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Reggie Jackson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Semi Ojeleye&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Taj Gibson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Treveon Graham&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Udonis Haslem&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Zhou Qi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Alize Johnson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ben Simmons&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cameron Reynolds&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Courtney Lee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;De&apos;Anthony Melton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Devonte&apos; Graham&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dwyane Wade&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Garrett Temple&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ian Clark&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;JaKarr Sampson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jawun Evans&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Joe Harris&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Josh Jackson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kenrich Williams&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LaMarcus Aldridge&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Marc Gasol&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mikal Bridges&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;OG Anunoby&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rawle Alkins&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ryan Broekhoff&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Svi Mykhailiuk&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tony Parker&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tyreke Evans&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zach LaVine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Al Horford&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Anthony Davis&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brook Lopez&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chris Paul&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dante Cunningham&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Derrick Favors&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dragan Bender&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eric Moreland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grayson Allen&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ivan Rabb&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jared Terrell&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jerome Robinson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jonathan Isaac&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kalin Lucas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kostas Antetokounmpo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Luke Kennard&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mason Plumlee&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Naz Mitrou-Long&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Paul George&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ron Baker&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Shelvin Mack&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Theo Pinson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Troy Daniels&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wesley Matthews&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[attr:SHOT_MADE_FLAG:ok]' palette=':default' type='shape'>
            <map to='KPI/09.png'>
              <bucket>0</bucket>
            </map>
            <map to='KPI/11.png'>
              <bucket>1</bucket>
            </map>
            <map to='asterisk'>
              <bucket>4</bucket>
            </map>
            <map to='asterisk'>
              <bucket>14</bucket>
            </map>
            <map to='asterisk'>
              <bucket>24</bucket>
            </map>
            <map to='asterisk'>
              <bucket>34</bucket>
            </map>
            <map to='asterisk'>
              <bucket>44</bucket>
            </map>
            <map to='asterisk'>
              <bucket>54</bucket>
            </map>
            <map to='asterisk'>
              <bucket>64</bucket>
            </map>
            <map to='asterisk'>
              <bucket>74</bucket>
            </map>
            <map to='asterisk'>
              <bucket>85</bucket>
            </map>
            <map to='asterisk'>
              <bucket>98</bucket>
            </map>
            <map to='asterisk'>
              <bucket>114</bucket>
            </map>
            <map to='asterisk'>
              <bucket>133</bucket>
            </map>
            <map to='asterisk'>
              <bucket>166</bucket>
            </map>
            <map to='asterisk'>
              <bucket>191</bucket>
            </map>
            <map to='asterisk'>
              <bucket>285</bucket>
            </map>
            <map to='asterisk'>
              <bucket>510</bucket>
            </map>
            <map to='asterisk'>
              <bucket>691</bucket>
            </map>
            <map to='asterisk'>
              <bucket>1317</bucket>
            </map>
            <map to='asterisk'>
              <bucket>2607</bucket>
            </map>
            <map to='circle'>
              <bucket>10</bucket>
            </map>
            <map to='circle'>
              <bucket>20</bucket>
            </map>
            <map to='circle'>
              <bucket>30</bucket>
            </map>
            <map to='circle'>
              <bucket>40</bucket>
            </map>
            <map to='circle'>
              <bucket>50</bucket>
            </map>
            <map to='circle'>
              <bucket>60</bucket>
            </map>
            <map to='circle'>
              <bucket>70</bucket>
            </map>
            <map to='circle'>
              <bucket>80</bucket>
            </map>
            <map to='circle'>
              <bucket>91</bucket>
            </map>
            <map to='circle'>
              <bucket>106</bucket>
            </map>
            <map to='circle'>
              <bucket>128</bucket>
            </map>
            <map to='circle'>
              <bucket>157</bucket>
            </map>
            <map to='circle'>
              <bucket>183</bucket>
            </map>
            <map to='circle'>
              <bucket>228</bucket>
            </map>
            <map to='circle'>
              <bucket>354</bucket>
            </map>
            <map to='circle'>
              <bucket>603</bucket>
            </map>
            <map to='circle'>
              <bucket>892</bucket>
            </map>
            <map to='circle'>
              <bucket>1753</bucket>
            </map>
            <map to='diamond'>
              <bucket>5</bucket>
            </map>
            <map to='diamond'>
              <bucket>15</bucket>
            </map>
            <map to='diamond'>
              <bucket>25</bucket>
            </map>
            <map to='diamond'>
              <bucket>35</bucket>
            </map>
            <map to='diamond'>
              <bucket>45</bucket>
            </map>
            <map to='diamond'>
              <bucket>55</bucket>
            </map>
            <map to='diamond'>
              <bucket>65</bucket>
            </map>
            <map to='diamond'>
              <bucket>75</bucket>
            </map>
            <map to='diamond'>
              <bucket>86</bucket>
            </map>
            <map to='diamond'>
              <bucket>99</bucket>
            </map>
            <map to='diamond'>
              <bucket>115</bucket>
            </map>
            <map to='diamond'>
              <bucket>138</bucket>
            </map>
            <map to='diamond'>
              <bucket>167</bucket>
            </map>
            <map to='diamond'>
              <bucket>192</bucket>
            </map>
            <map to='diamond'>
              <bucket>304</bucket>
            </map>
            <map to='diamond'>
              <bucket>517</bucket>
            </map>
            <map to='diamond'>
              <bucket>718</bucket>
            </map>
            <map to='diamond'>
              <bucket>1346</bucket>
            </map>
            <map to='diamond'>
              <bucket>2793</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>7</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>17</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>27</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>37</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>47</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>57</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>67</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>77</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>88</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>101</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>118</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>142</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>173</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>207</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>324</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>530</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>765</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>1502</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>8</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>18</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>28</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>38</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>48</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>58</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>68</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>78</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>89</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>102</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>122</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>147</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>177</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>212</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>330</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>595</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>789</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>1554</bucket>
            </map>
            <map to='plus'>
              <bucket>2</bucket>
            </map>
            <map to='plus'>
              <bucket>12</bucket>
            </map>
            <map to='plus'>
              <bucket>22</bucket>
            </map>
            <map to='plus'>
              <bucket>32</bucket>
            </map>
            <map to='plus'>
              <bucket>42</bucket>
            </map>
            <map to='plus'>
              <bucket>52</bucket>
            </map>
            <map to='plus'>
              <bucket>62</bucket>
            </map>
            <map to='plus'>
              <bucket>72</bucket>
            </map>
            <map to='plus'>
              <bucket>82</bucket>
            </map>
            <map to='plus'>
              <bucket>95</bucket>
            </map>
            <map to='plus'>
              <bucket>110</bucket>
            </map>
            <map to='plus'>
              <bucket>131</bucket>
            </map>
            <map to='plus'>
              <bucket>162</bucket>
            </map>
            <map to='plus'>
              <bucket>187</bucket>
            </map>
            <map to='plus'>
              <bucket>257</bucket>
            </map>
            <map to='plus'>
              <bucket>386</bucket>
            </map>
            <map to='plus'>
              <bucket>641</bucket>
            </map>
            <map to='plus'>
              <bucket>1239</bucket>
            </map>
            <map to='plus'>
              <bucket>1944</bucket>
            </map>
            <map to='plus'>
              <bucket>%many-values%</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>9</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>19</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>29</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>39</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>49</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>59</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>69</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>79</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>90</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>103</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>127</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>152</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>180</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>217</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>342</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>596</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>858</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>1588</bucket>
            </map>
            <map to='square'>
              <bucket>11</bucket>
            </map>
            <map to='square'>
              <bucket>21</bucket>
            </map>
            <map to='square'>
              <bucket>31</bucket>
            </map>
            <map to='square'>
              <bucket>41</bucket>
            </map>
            <map to='square'>
              <bucket>51</bucket>
            </map>
            <map to='square'>
              <bucket>61</bucket>
            </map>
            <map to='square'>
              <bucket>71</bucket>
            </map>
            <map to='square'>
              <bucket>81</bucket>
            </map>
            <map to='square'>
              <bucket>94</bucket>
            </map>
            <map to='square'>
              <bucket>107</bucket>
            </map>
            <map to='square'>
              <bucket>129</bucket>
            </map>
            <map to='square'>
              <bucket>158</bucket>
            </map>
            <map to='square'>
              <bucket>186</bucket>
            </map>
            <map to='square'>
              <bucket>247</bucket>
            </map>
            <map to='square'>
              <bucket>362</bucket>
            </map>
            <map to='square'>
              <bucket>634</bucket>
            </map>
            <map to='square'>
              <bucket>1053</bucket>
            </map>
            <map to='square'>
              <bucket>1879</bucket>
            </map>
            <map to='times'>
              <bucket>3</bucket>
            </map>
            <map to='times'>
              <bucket>13</bucket>
            </map>
            <map to='times'>
              <bucket>23</bucket>
            </map>
            <map to='times'>
              <bucket>33</bucket>
            </map>
            <map to='times'>
              <bucket>43</bucket>
            </map>
            <map to='times'>
              <bucket>53</bucket>
            </map>
            <map to='times'>
              <bucket>63</bucket>
            </map>
            <map to='times'>
              <bucket>73</bucket>
            </map>
            <map to='times'>
              <bucket>84</bucket>
            </map>
            <map to='times'>
              <bucket>96</bucket>
            </map>
            <map to='times'>
              <bucket>112</bucket>
            </map>
            <map to='times'>
              <bucket>132</bucket>
            </map>
            <map to='times'>
              <bucket>164</bucket>
            </map>
            <map to='times'>
              <bucket>188</bucket>
            </map>
            <map to='times'>
              <bucket>280</bucket>
            </map>
            <map to='times'>
              <bucket>436</bucket>
            </map>
            <map to='times'>
              <bucket>680</bucket>
            </map>
            <map to='times'>
              <bucket>1288</bucket>
            </map>
            <map to='times'>
              <bucket>2097</bucket>
            </map>
            <map to='triangle'>
              <bucket>6</bucket>
            </map>
            <map to='triangle'>
              <bucket>16</bucket>
            </map>
            <map to='triangle'>
              <bucket>26</bucket>
            </map>
            <map to='triangle'>
              <bucket>36</bucket>
            </map>
            <map to='triangle'>
              <bucket>46</bucket>
            </map>
            <map to='triangle'>
              <bucket>56</bucket>
            </map>
            <map to='triangle'>
              <bucket>66</bucket>
            </map>
            <map to='triangle'>
              <bucket>76</bucket>
            </map>
            <map to='triangle'>
              <bucket>87</bucket>
            </map>
            <map to='triangle'>
              <bucket>100</bucket>
            </map>
            <map to='triangle'>
              <bucket>116</bucket>
            </map>
            <map to='triangle'>
              <bucket>140</bucket>
            </map>
            <map to='triangle'>
              <bucket>171</bucket>
            </map>
            <map to='triangle'>
              <bucket>200</bucket>
            </map>
            <map to='triangle'>
              <bucket>306</bucket>
            </map>
            <map to='triangle'>
              <bucket>528</bucket>
            </map>
            <map to='triangle'>
              <bucket>732</bucket>
            </map>
            <map to='triangle'>
              <bucket>1354</bucket>
            </map>
            <map to='triangle'>
              <bucket>4486</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:Player:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Alex Len&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Avery Bradley&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;C.J. Williams&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Collin Sexton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;David Nwaba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Devin Booker&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dwayne Bacon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Frank Ntilikina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hassan Whiteside&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jacob Evans&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jarrett Allen&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Joakim Noah&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jordan McRae&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kelly Oubre Jr.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyle Lowry&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malcolm Miller&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Michael Beasley&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nik Stauskas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Quinn Cook&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Russell Westbrook&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stephen Curry&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tim Hardaway Jr.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tyler Johnson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yogi Ferrell&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aaron Gordon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Andrew Harrison&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brandon Ingram&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chimezie Metu&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Daniel Theis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Deng Adel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Donte Grantham&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Enes Kanter&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Glenn Robinson III&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Isaiah Hicks&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;James Nunnally&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jeremy Lamb&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jon Leuer&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Justin Patton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Khyri Thomas&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lorenzo Brown&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MarShon Brooks&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Montrezl Harrell&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Patrick Patterson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rodions Kurucs&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Shake Milton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Terry Rozier&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tristan Thompson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wayne Selden&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Al-Farouq Aminu&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Anthony Tolliver&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bruce Brown&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Christian Wood&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dante Exum&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Derrick Jones Jr.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Draymond Green&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Evan Fournier&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greg Monroe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ivica Zubac&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jarell Martin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jerryd Bayless&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jonathon Simmons&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Karl-Anthony Towns&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kris Dunn&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Luke Kornet&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Matthew Dellavedova&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nemanja Bjelica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Paul Millsap&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rondae Hollis-Jefferson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sindarius Thornwell&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thomas Bryant&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Troy Williams&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Will Barton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Allen Crabbe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Billy Garrett&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Caris LeVert&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;D.J. Augustin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Deandre Ayton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dewayne Dedmon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E&apos;Twaun Moore&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gary Clark&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ian Mahinmi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jake Layman&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jaylen Adams&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Joe Ingles&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Josh Okogie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kent Bazemore&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lance Stephenson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Marcin Gortat&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mike Conley&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Okaro White&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ray Spalding&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Salah Mejri&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T.J. McConnell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tony Snell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tyrone Wallace&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zach Lofton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Alex Poythress&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bam Adebayo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Caleb Swanigan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Corey Brewer&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Davon Reed&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Devin Harris&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dwight Howard&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fred VanVleet&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Haywood Highsmith&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jae Crowder&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jason Smith&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jodie Meeks&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jordan Sibert&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kemba Walker&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kyle O&apos;Quinn&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malik Beasley&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Michael Carter-Williams&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Noah Vonleh&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rajon Rondo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ryan Anderson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sterling Brown&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tobias Harris&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tyler Lydon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yuta Watanabe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Alan Williams&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antonio Blakeney&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bruno Caboclo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CJ McCollum&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Darius Miller&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Derrick Rose&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Drew Eubanks&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Evan Turner&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guerschon Yabusele&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;J.J. Barea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jaren Jackson Jr.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jevon Carter&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jordan Bell&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kawhi Leonard&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kyle Anderson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luol Deng&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Maurice Harkless&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nerlens Noel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PJ Dozier&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Royce O&apos;Neale&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Solomon Hill&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thomas Welsh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tyler Cavanaugh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Willie Cauley-Stein&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Andre Ingram&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bradley Beal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chasson Randle&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Damyean Dotson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DeMarre Carroll&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Donovan Mitchell&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Emanuel Terry&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gerald Green&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Isaiah Canaan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;James Harden&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jemerrio Jones&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Johnathan Motley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Justin Holiday&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Khem Birch&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LeBron James&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Markieff Morris&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mo Bamba&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Patrick Beverley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Robert Covington&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shabazz Napier&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Terrence Jones&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Trey Burke&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Walt Lemon Jr.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aaron Holiday&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Andrew Wiggins&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brandon Knight&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chris Boucher&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Danilo Gallinari&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dennis Smith Jr.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dorian Finney-Smith&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eric Bledsoe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gordon Hayward&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Isaiah Thomas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;JaMychal Green&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jeremy Lin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jonah Bolden&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Justise Winslow&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Klay Thompson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lou Williams&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marvin Bagley III&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Moritz Wagner&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Patty Mills&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rodney Hood&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Shaquille Harrison&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thabo Sefolosha&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Troy Brown Jr.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wendell Carter Jr.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Andre Drummond&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bonzie Colson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chandler Parsons&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Damian Lillard&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DeMar DeRozan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dirk Nowitzki&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Elfrid Payton&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;George Hill&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Isaac Humphries&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jamal Crawford&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jeff Green&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;John Jenkins&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Julius Randle&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kevin Love&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Larry Nance Jr.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mario Hezonja&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Miles Plumlee&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pascal Siakam&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Richaun Holmes&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Serge Ibaka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Taurean Prince&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Trevon Duval&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Victor Oladipo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Alec Burks&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Aron Baynes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bryn Forbes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Clint Capela&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Darren Collison&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Derrick White&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Duncan Robinson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Frank Jackson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hamidou Diallo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;J.P. Macura&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jaron Blossomgame&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jimmer Fredette&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jordan Clarkson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Keita Bates-Diop&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kyle Korver&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malachi Richardson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maxi Kleber&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nick Young&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Quincy Acy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rudy Gay&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spencer Dinwiddie&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thon Maker&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tyler Davis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wilson Chandler&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Allonzo Trier&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bismack Biyombo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Carmelo Anthony&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;D.J. Wilson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DeAndre Jordan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Deyonta Davis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ed Davis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gary Harris&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ike Anigbogu&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jakob Poeltl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jaylen Brown&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Joel Embiid&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Josh Richardson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kentavious Caldwell-Pope&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lance Thomas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marco Belinelli&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mike Muscala&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Omari Spellman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Raymond Felton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sam Dekker&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T.J. Warren&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Torrey Craig&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tyson Chandler&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zaza Pachulia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Amile Jefferson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Blake Griffin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cedi Osman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;D&apos;Angelo Russell&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DeAndre&apos; Bembry&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dillon Brooks&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Edmond Sumner&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gary Payton II&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iman Shumpert&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jalen Brunson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jaylen Morris&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;John Collins&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jrue Holiday&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kevin Durant&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Landry Shamet&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marcus Derrickson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mike Scott&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Omri Casspi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Reggie Bullock&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Scott Machado&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tahjere McCall&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Trae Young&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tyus Jones&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zhaire Smith&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Andre Iguodala&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brad Wanamaker&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Channing Frye&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Damion Lee&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DeMarcus Cousins&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Domantas Sabonis&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Elie Okobo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Georges Niang&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isaiah Briscoe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamal Murray&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jeff Teague&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;John Wall&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Justin Anderson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kevon Looney&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lauri Markkanen&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Markelle Fultz&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mitchell Robinson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pat Connaughton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ricky Rubio&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Seth Curry&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Terrance Ferguson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Trevor Ariza&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vince Carter&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Andrew Bogut&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brandon Goodwin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cheick Diallo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Daniel Hamilton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Demetrius Jackson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Donte DiVincenzo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Emmanuel Mudiay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Giannis Antetokounmpo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Isaiah Hartenstein&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;James Johnson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jerami Grant&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Johnathan Williams&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Justin Jackson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Khris Middleton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lonzo Ball&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Marquese Chriss&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Monte Morris&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Patrick McCaw&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Robin Lopez&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shai Gilgeous-Alexander&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Terrence Ross&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Trey Lyles&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wayne Ellington&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Alfonzo McKinnie&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ben McLemore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cameron Payne&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cory Joseph&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;De&apos;Aaron Fox&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Devin Robinson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dwight Powell&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Furkan Korkmaz&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Henry Ellenson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jahlil Okafor&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;JaVale McGee&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Joe Chealey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Josh Hart&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kenneth Faried&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kyrie Irving&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malik Monk&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Michael Kidd-Gilchrist&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Norman Powell&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Raul Neto&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ryan Arcidiacono&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Steven Adams&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tony Bradley&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tyler Zeller&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zach Collins&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Alex Caruso&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Austin Rivers&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Buddy Hield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cody Zeller&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Daryl Macon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DeVaughn Akoon-Purcell&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dusty Hannahs&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Frank Kaminsky&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Harrison Barnes&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jabari Parker&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jarred Vanderbilt&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jimmy Butler&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jordan Loyd&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kelly Olynyk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kyle Kuzma&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malcolm Brogdon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Meyers Leonard&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nicolas Batum&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Quincy Pondexter&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rudy Gobert&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stanley Johnson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tim Frazier&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tyler Dorsey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yante Maten&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Abdel Nader&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Anfernee Simons&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brandon Sampson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chris Chiozza&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Danny Green&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Deonte Burton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Doug McDermott&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eric Gordon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gorgui Dieng&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ish Smith&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jared Dudley&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jerian Grant&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jonas Jerebko&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kadeem Allen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kosta Koufos&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Luc Mbah a Moute&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Marvin Williams&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Myles Turner&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pau Gasol&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rodney McGruder&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Shaun Livingston&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thaddeus Young&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Troy Caupain&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wesley Johnson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Amir Johnson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bobby Portis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chandler Hutchison&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Damian Jones&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Delon Wright&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dion Waiters&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ekpe Udoh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gary Trent Jr.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Isaac Bonga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jalen Jones&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jayson Tatum&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;John Henson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Julian Washburn&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kevin Huerter&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Langston Galloway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Marcus Smart&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Miles Bridges&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;P.J. Tucker&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Reggie Jackson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Semi Ojeleye&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Taj Gibson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Treveon Graham&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Udonis Haslem&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Zhou Qi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Alize Johnson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ben Simmons&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cameron Reynolds&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Courtney Lee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;De&apos;Anthony Melton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Devonte&apos; Graham&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dwyane Wade&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Garrett Temple&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ian Clark&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;JaKarr Sampson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jawun Evans&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Joe Harris&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Josh Jackson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kenrich Williams&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LaMarcus Aldridge&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Marc Gasol&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mikal Bridges&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;OG Anunoby&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rawle Alkins&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ryan Broekhoff&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Svi Mykhailiuk&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tony Parker&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tyreke Evans&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zach LaVine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Al Horford&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Anthony Davis&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brook Lopez&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chris Paul&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dante Cunningham&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Derrick Favors&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dragan Bender&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eric Moreland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grayson Allen&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ivan Rabb&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jared Terrell&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jerome Robinson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jonathan Isaac&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kalin Lucas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kostas Antetokounmpo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Luke Kennard&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mason Plumlee&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Naz Mitrou-Long&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Paul George&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ron Baker&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Shelvin Mack&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Theo Pinson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Troy Daniels&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wesley Matthews&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[min:Player:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Alex Len&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Avery Bradley&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;C.J. Williams&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Collin Sexton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;David Nwaba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Devin Booker&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dwayne Bacon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Frank Ntilikina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hassan Whiteside&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jacob Evans&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jarrett Allen&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Joakim Noah&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jordan McRae&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kelly Oubre Jr.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyle Lowry&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malcolm Miller&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Michael Beasley&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nik Stauskas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Quinn Cook&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Russell Westbrook&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stephen Curry&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tim Hardaway Jr.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tyler Johnson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yogi Ferrell&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aaron Gordon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Andrew Harrison&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brandon Ingram&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chimezie Metu&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Daniel Theis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Deng Adel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Donte Grantham&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Enes Kanter&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Glenn Robinson III&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Isaiah Hicks&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;James Nunnally&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jeremy Lamb&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jon Leuer&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Justin Patton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Khyri Thomas&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lorenzo Brown&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MarShon Brooks&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Montrezl Harrell&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Patrick Patterson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rodions Kurucs&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Shake Milton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Terry Rozier&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tristan Thompson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wayne Selden&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Al-Farouq Aminu&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Anthony Tolliver&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bruce Brown&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Christian Wood&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dante Exum&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Derrick Jones Jr.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Draymond Green&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Evan Fournier&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greg Monroe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ivica Zubac&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jarell Martin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jerryd Bayless&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jonathon Simmons&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Karl-Anthony Towns&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kris Dunn&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Luke Kornet&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Matthew Dellavedova&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nemanja Bjelica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Paul Millsap&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rondae Hollis-Jefferson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sindarius Thornwell&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thomas Bryant&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Troy Williams&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Will Barton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Allen Crabbe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Billy Garrett&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Caris LeVert&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;D.J. Augustin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Deandre Ayton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dewayne Dedmon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E&apos;Twaun Moore&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gary Clark&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ian Mahinmi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jake Layman&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jaylen Adams&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Joe Ingles&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Josh Okogie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kent Bazemore&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lance Stephenson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Marcin Gortat&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mike Conley&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Okaro White&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ray Spalding&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Salah Mejri&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T.J. McConnell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tony Snell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tyrone Wallace&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zach Lofton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Alex Poythress&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bam Adebayo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Caleb Swanigan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Corey Brewer&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Davon Reed&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Devin Harris&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dwight Howard&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fred VanVleet&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Haywood Highsmith&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jae Crowder&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jason Smith&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jodie Meeks&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jordan Sibert&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kemba Walker&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kyle O&apos;Quinn&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malik Beasley&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Michael Carter-Williams&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Noah Vonleh&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rajon Rondo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ryan Anderson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sterling Brown&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tobias Harris&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tyler Lydon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yuta Watanabe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Alan Williams&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antonio Blakeney&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bruno Caboclo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CJ McCollum&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Darius Miller&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Derrick Rose&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Drew Eubanks&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Evan Turner&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guerschon Yabusele&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;J.J. Barea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jaren Jackson Jr.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jevon Carter&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jordan Bell&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kawhi Leonard&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kyle Anderson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luol Deng&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Maurice Harkless&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nerlens Noel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PJ Dozier&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Royce O&apos;Neale&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Solomon Hill&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thomas Welsh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tyler Cavanaugh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Willie Cauley-Stein&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Andre Ingram&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bradley Beal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chasson Randle&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Damyean Dotson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DeMarre Carroll&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Donovan Mitchell&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Emanuel Terry&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gerald Green&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Isaiah Canaan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;James Harden&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jemerrio Jones&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Johnathan Motley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Justin Holiday&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Khem Birch&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LeBron James&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Markieff Morris&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mo Bamba&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Patrick Beverley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Robert Covington&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shabazz Napier&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Terrence Jones&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Trey Burke&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Walt Lemon Jr.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aaron Holiday&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Andrew Wiggins&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brandon Knight&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chris Boucher&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Danilo Gallinari&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dennis Smith Jr.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dorian Finney-Smith&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eric Bledsoe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gordon Hayward&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Isaiah Thomas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;JaMychal Green&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jeremy Lin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jonah Bolden&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Justise Winslow&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Klay Thompson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lou Williams&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marvin Bagley III&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Moritz Wagner&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Patty Mills&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rodney Hood&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Shaquille Harrison&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thabo Sefolosha&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Troy Brown Jr.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wendell Carter Jr.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Andre Drummond&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bonzie Colson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chandler Parsons&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Damian Lillard&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DeMar DeRozan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dirk Nowitzki&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Elfrid Payton&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;George Hill&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Isaac Humphries&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jamal Crawford&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jeff Green&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;John Jenkins&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Julius Randle&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kevin Love&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Larry Nance Jr.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mario Hezonja&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Miles Plumlee&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pascal Siakam&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Richaun Holmes&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Serge Ibaka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Taurean Prince&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Trevon Duval&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Victor Oladipo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Alec Burks&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Aron Baynes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bryn Forbes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Clint Capela&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Darren Collison&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Derrick White&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Duncan Robinson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Frank Jackson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hamidou Diallo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;J.P. Macura&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jaron Blossomgame&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jimmer Fredette&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jordan Clarkson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Keita Bates-Diop&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kyle Korver&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malachi Richardson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maxi Kleber&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nick Young&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Quincy Acy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rudy Gay&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spencer Dinwiddie&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thon Maker&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tyler Davis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wilson Chandler&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Allonzo Trier&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bismack Biyombo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Carmelo Anthony&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;D.J. Wilson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DeAndre Jordan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Deyonta Davis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ed Davis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gary Harris&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ike Anigbogu&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jakob Poeltl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jaylen Brown&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Joel Embiid&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Josh Richardson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kentavious Caldwell-Pope&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lance Thomas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marco Belinelli&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mike Muscala&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Omari Spellman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Raymond Felton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sam Dekker&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T.J. Warren&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Torrey Craig&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tyson Chandler&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zaza Pachulia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Amile Jefferson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Blake Griffin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cedi Osman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;D&apos;Angelo Russell&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DeAndre&apos; Bembry&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dillon Brooks&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Edmond Sumner&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gary Payton II&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iman Shumpert&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jalen Brunson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jaylen Morris&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;John Collins&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jrue Holiday&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kevin Durant&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Landry Shamet&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marcus Derrickson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mike Scott&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Omri Casspi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Reggie Bullock&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Scott Machado&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tahjere McCall&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Trae Young&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tyus Jones&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zhaire Smith&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Andre Iguodala&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brad Wanamaker&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Channing Frye&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Damion Lee&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DeMarcus Cousins&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Domantas Sabonis&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Elie Okobo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Georges Niang&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isaiah Briscoe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamal Murray&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jeff Teague&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;John Wall&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Justin Anderson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kevon Looney&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lauri Markkanen&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Markelle Fultz&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mitchell Robinson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pat Connaughton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ricky Rubio&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Seth Curry&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Terrance Ferguson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Trevor Ariza&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vince Carter&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Andrew Bogut&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brandon Goodwin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cheick Diallo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Daniel Hamilton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Demetrius Jackson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Donte DiVincenzo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Emmanuel Mudiay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Giannis Antetokounmpo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Isaiah Hartenstein&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;James Johnson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jerami Grant&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Johnathan Williams&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Justin Jackson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Khris Middleton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lonzo Ball&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Marquese Chriss&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Monte Morris&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Patrick McCaw&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Robin Lopez&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shai Gilgeous-Alexander&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Terrence Ross&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Trey Lyles&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wayne Ellington&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Alfonzo McKinnie&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ben McLemore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cameron Payne&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cory Joseph&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;De&apos;Aaron Fox&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Devin Robinson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dwight Powell&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Furkan Korkmaz&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Henry Ellenson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jahlil Okafor&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;JaVale McGee&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Joe Chealey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Josh Hart&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kenneth Faried&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kyrie Irving&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malik Monk&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Michael Kidd-Gilchrist&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Norman Powell&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Raul Neto&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ryan Arcidiacono&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Steven Adams&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tony Bradley&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tyler Zeller&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zach Collins&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Alex Caruso&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Austin Rivers&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Buddy Hield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cody Zeller&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Daryl Macon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DeVaughn Akoon-Purcell&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dusty Hannahs&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Frank Kaminsky&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Harrison Barnes&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jabari Parker&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jarred Vanderbilt&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jimmy Butler&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jordan Loyd&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kelly Olynyk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kyle Kuzma&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malcolm Brogdon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Meyers Leonard&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nicolas Batum&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Quincy Pondexter&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rudy Gobert&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stanley Johnson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tim Frazier&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tyler Dorsey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yante Maten&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Abdel Nader&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Anfernee Simons&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brandon Sampson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chris Chiozza&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Danny Green&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Deonte Burton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Doug McDermott&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eric Gordon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gorgui Dieng&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ish Smith&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jared Dudley&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jerian Grant&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jonas Jerebko&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kadeem Allen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kosta Koufos&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Luc Mbah a Moute&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Marvin Williams&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Myles Turner&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pau Gasol&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rodney McGruder&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Shaun Livingston&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thaddeus Young&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Troy Caupain&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wesley Johnson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Amir Johnson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bobby Portis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chandler Hutchison&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Damian Jones&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Delon Wright&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dion Waiters&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ekpe Udoh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gary Trent Jr.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Isaac Bonga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jalen Jones&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jayson Tatum&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;John Henson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Julian Washburn&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kevin Huerter&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Langston Galloway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Marcus Smart&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Miles Bridges&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;P.J. Tucker&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Reggie Jackson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Semi Ojeleye&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Taj Gibson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Treveon Graham&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Udonis Haslem&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Zhou Qi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Alize Johnson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ben Simmons&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cameron Reynolds&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Courtney Lee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;De&apos;Anthony Melton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Devonte&apos; Graham&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dwyane Wade&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Garrett Temple&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ian Clark&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;JaKarr Sampson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jawun Evans&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Joe Harris&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Josh Jackson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kenrich Williams&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LaMarcus Aldridge&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Marc Gasol&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mikal Bridges&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;OG Anunoby&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rawle Alkins&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ryan Broekhoff&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Svi Mykhailiuk&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tony Parker&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tyreke Evans&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zach LaVine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Al Horford&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Anthony Davis&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brook Lopez&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chris Paul&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dante Cunningham&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Derrick Favors&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dragan Bender&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eric Moreland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grayson Allen&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ivan Rabb&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jared Terrell&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jerome Robinson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jonathan Isaac&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kalin Lucas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kostas Antetokounmpo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Luke Kennard&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mason Plumlee&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Naz Mitrou-Long&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Paul George&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ron Baker&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Shelvin Mack&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Theo Pinson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Troy Daniels&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wesley Matthews&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[sum:SHOT_MADE_FLAG:ok]' type='shape'>
            <map to='asterisk'>
              <bucket>4</bucket>
            </map>
            <map to='circle'>
              <bucket>0</bucket>
            </map>
            <map to='circle'>
              <bucket>11</bucket>
            </map>
            <map to='diamond'>
              <bucket>5</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>8</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>9</bucket>
            </map>
            <map to='plus'>
              <bucket>2</bucket>
            </map>
            <map to='plus'>
              <bucket>21</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>10</bucket>
            </map>
            <map to='square'>
              <bucket>1</bucket>
            </map>
            <map to='square'>
              <bucket>18</bucket>
            </map>
            <map to='times'>
              <bucket>3</bucket>
            </map>
            <map to='times'>
              <bucket>31</bucket>
            </map>
            <map to='triangle'>
              <bucket>6</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:Calculation_1397804771162169354:ok]' type='shape'>
            <map to='asterisk'>
              <bucket>0.34042553191489361</bucket>
            </map>
            <map to='asterisk'>
              <bucket>0.45378151260504201</bucket>
            </map>
            <map to='circle'>
              <bucket>0.0</bucket>
            </map>
            <map to='circle'>
              <bucket>0.40845070422535212</bucket>
            </map>
            <map to='diamond'>
              <bucket>0.34715821812596004</bucket>
            </map>
            <map to='diamond'>
              <bucket>0.62486187845303864</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>0.39130434782608697</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>0.39207048458149779</bucket>
            </map>
            <map to='plus'>
              <bucket>0.33718689788053952</bucket>
            </map>
            <map to='plus'>
              <bucket>0.42408376963350786</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>0.40718562874251496</bucket>
            </map>
            <map to='square'>
              <bucket>0.076923076923076927</bucket>
            </map>
            <map to='square'>
              <bucket>0.42292089249492898</bucket>
            </map>
            <map to='times'>
              <bucket>0.33823529411764708</bucket>
            </map>
            <map to='times'>
              <bucket>0.43877551020408162</bucket>
            </map>
            <map to='triangle'>
              <bucket>0.38461538461538464</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:PLAYER_NAME:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Alex Len&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Avery Bradley&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;C.J. Williams&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Collin Sexton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;David Nwaba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Devin Booker&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dwayne Bacon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Frank Ntilikina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hassan Whiteside&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jacob Evans&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jarrett Allen&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Joakim Noah&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jordan McRae&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kelly Oubre Jr.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyle Lowry&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malcolm Miller&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Michael Beasley&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nik Stauskas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Quinn Cook&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Russell Westbrook&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stephen Curry&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tim Hardaway Jr.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tyler Johnson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yogi Ferrell&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aaron Gordon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Andrew Harrison&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brandon Ingram&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chimezie Metu&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Daniel Theis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Deng Adel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Donte Grantham&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Enes Kanter&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Glenn Robinson III&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Isaiah Hicks&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;James Nunnally&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jeremy Lamb&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jon Leuer&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Justin Patton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Khyri Thomas&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lorenzo Brown&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MarShon Brooks&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Montrezl Harrell&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Patrick Patterson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rodions Kurucs&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Shake Milton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Terry Rozier&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tristan Thompson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wayne Selden&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Al-Farouq Aminu&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Anthony Tolliver&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bruce Brown&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Christian Wood&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dante Exum&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Derrick Jones Jr.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Draymond Green&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Evan Fournier&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greg Monroe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ivica Zubac&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jarell Martin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jerryd Bayless&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jonathon Simmons&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Karl-Anthony Towns&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kris Dunn&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Luke Kornet&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Matthew Dellavedova&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nemanja Bjelica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Paul Millsap&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rondae Hollis-Jefferson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sindarius Thornwell&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thomas Bryant&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Troy Williams&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Will Barton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Allen Crabbe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Billy Garrett&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Caris LeVert&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;D.J. Augustin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Deandre Ayton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dewayne Dedmon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E&apos;Twaun Moore&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gary Clark&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ian Mahinmi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jake Layman&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jaylen Adams&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Joe Ingles&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Josh Okogie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kent Bazemore&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lance Stephenson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Marcin Gortat&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mike Conley&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Okaro White&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ray Spalding&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Salah Mejri&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T.J. McConnell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tony Snell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tyrone Wallace&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zach Lofton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Alex Poythress&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bam Adebayo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Caleb Swanigan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Corey Brewer&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Davon Reed&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Devin Harris&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dwight Howard&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fred VanVleet&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Haywood Highsmith&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jae Crowder&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jason Smith&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jodie Meeks&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jordan Sibert&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kemba Walker&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kyle O&apos;Quinn&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malik Beasley&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Michael Carter-Williams&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Noah Vonleh&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rajon Rondo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ryan Anderson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sterling Brown&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tobias Harris&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tyler Lydon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yuta Watanabe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Alan Williams&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antonio Blakeney&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bruno Caboclo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CJ McCollum&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Darius Miller&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Derrick Rose&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Drew Eubanks&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Evan Turner&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guerschon Yabusele&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;J.J. Barea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jaren Jackson Jr.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jevon Carter&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jordan Bell&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kawhi Leonard&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kyle Anderson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luol Deng&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Maurice Harkless&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nerlens Noel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PJ Dozier&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Royce O&apos;Neale&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Solomon Hill&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thomas Welsh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tyler Cavanaugh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Willie Cauley-Stein&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Andre Ingram&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bradley Beal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chasson Randle&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Damyean Dotson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DeMarre Carroll&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Donovan Mitchell&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Emanuel Terry&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gerald Green&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Isaiah Canaan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;James Harden&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jemerrio Jones&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Johnathan Motley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Justin Holiday&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Khem Birch&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LeBron James&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Markieff Morris&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mo Bamba&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Patrick Beverley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Robert Covington&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shabazz Napier&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Terrence Jones&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Trey Burke&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Walt Lemon Jr.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aaron Holiday&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Andrew Wiggins&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brandon Knight&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chris Boucher&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Danilo Gallinari&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dennis Smith Jr.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dorian Finney-Smith&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eric Bledsoe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gordon Hayward&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Isaiah Thomas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;JaMychal Green&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jeremy Lin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jonah Bolden&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Justise Winslow&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Klay Thompson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lou Williams&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marvin Bagley III&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Moritz Wagner&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Patty Mills&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rodney Hood&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Shaquille Harrison&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thabo Sefolosha&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Troy Brown Jr.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wendell Carter Jr.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Andre Drummond&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bonzie Colson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chandler Parsons&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Damian Lillard&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DeMar DeRozan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dirk Nowitzki&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Elfrid Payton&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;George Hill&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Isaac Humphries&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jamal Crawford&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jeff Green&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;John Jenkins&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Julius Randle&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kevin Love&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Larry Nance Jr.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mario Hezonja&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Miles Plumlee&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pascal Siakam&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Richaun Holmes&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Serge Ibaka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Taurean Prince&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Trevon Duval&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Victor Oladipo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Alec Burks&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Aron Baynes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bryn Forbes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Clint Capela&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Darren Collison&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Derrick White&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Duncan Robinson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Frank Jackson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hamidou Diallo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;J.P. Macura&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jaron Blossomgame&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jimmer Fredette&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jordan Clarkson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Keita Bates-Diop&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kyle Korver&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malachi Richardson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maxi Kleber&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nick Young&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Quincy Acy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rudy Gay&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spencer Dinwiddie&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thon Maker&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tyler Davis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wilson Chandler&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Allonzo Trier&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bismack Biyombo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Carmelo Anthony&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;D.J. Wilson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DeAndre Jordan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Deyonta Davis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ed Davis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gary Harris&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ike Anigbogu&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jakob Poeltl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jaylen Brown&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Joel Embiid&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Josh Richardson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kentavious Caldwell-Pope&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lance Thomas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marco Belinelli&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mike Muscala&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Omari Spellman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Raymond Felton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sam Dekker&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T.J. Warren&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Torrey Craig&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tyson Chandler&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zaza Pachulia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Amile Jefferson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Blake Griffin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cedi Osman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;D&apos;Angelo Russell&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DeAndre&apos; Bembry&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dillon Brooks&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Edmond Sumner&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gary Payton II&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iman Shumpert&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jalen Brunson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jaylen Morris&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;John Collins&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jrue Holiday&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kevin Durant&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Landry Shamet&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marcus Derrickson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mike Scott&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Omri Casspi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Reggie Bullock&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Scott Machado&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tahjere McCall&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Trae Young&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tyus Jones&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zhaire Smith&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Andre Iguodala&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brad Wanamaker&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Channing Frye&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Damion Lee&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DeMarcus Cousins&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Domantas Sabonis&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Elie Okobo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Georges Niang&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isaiah Briscoe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamal Murray&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jeff Teague&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;John Wall&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Justin Anderson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kevon Looney&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lauri Markkanen&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Markelle Fultz&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mitchell Robinson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pat Connaughton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ricky Rubio&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Seth Curry&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Terrance Ferguson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Trevor Ariza&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vince Carter&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Andrew Bogut&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brandon Goodwin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cheick Diallo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Daniel Hamilton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Demetrius Jackson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Donte DiVincenzo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Emmanuel Mudiay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Giannis Antetokounmpo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Isaiah Hartenstein&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;James Johnson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jerami Grant&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Johnathan Williams&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Justin Jackson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Khris Middleton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lonzo Ball&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Marquese Chriss&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Monte Morris&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Patrick McCaw&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Robin Lopez&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shai Gilgeous-Alexander&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Terrence Ross&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Trey Lyles&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wayne Ellington&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Alfonzo McKinnie&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ben McLemore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cameron Payne&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cory Joseph&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;De&apos;Aaron Fox&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Devin Robinson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dwight Powell&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Furkan Korkmaz&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Henry Ellenson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jahlil Okafor&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;JaVale McGee&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Joe Chealey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Josh Hart&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kenneth Faried&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kyrie Irving&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malik Monk&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Michael Kidd-Gilchrist&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Norman Powell&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Raul Neto&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ryan Arcidiacono&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Steven Adams&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tony Bradley&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tyler Zeller&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zach Collins&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Alex Caruso&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Austin Rivers&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Buddy Hield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cody Zeller&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Daryl Macon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DeVaughn Akoon-Purcell&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dusty Hannahs&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Frank Kaminsky&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Harrison Barnes&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jabari Parker&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jarred Vanderbilt&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jimmy Butler&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jordan Loyd&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kelly Olynyk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kyle Kuzma&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malcolm Brogdon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Meyers Leonard&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nicolas Batum&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Quincy Pondexter&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rudy Gobert&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stanley Johnson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tim Frazier&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tyler Dorsey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yante Maten&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Abdel Nader&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Anfernee Simons&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brandon Sampson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chris Chiozza&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Danny Green&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Deonte Burton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Doug McDermott&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eric Gordon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gorgui Dieng&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ish Smith&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jared Dudley&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jerian Grant&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jonas Jerebko&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kadeem Allen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kosta Koufos&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Luc Mbah a Moute&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Marvin Williams&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Myles Turner&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pau Gasol&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rodney McGruder&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Shaun Livingston&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thaddeus Young&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Troy Caupain&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wesley Johnson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Amir Johnson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bobby Portis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chandler Hutchison&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Damian Jones&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Delon Wright&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dion Waiters&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ekpe Udoh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gary Trent Jr.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Isaac Bonga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jalen Jones&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jayson Tatum&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;John Henson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Julian Washburn&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kevin Huerter&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Langston Galloway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Marcus Smart&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Miles Bridges&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;P.J. Tucker&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Reggie Jackson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Semi Ojeleye&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Taj Gibson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Treveon Graham&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Udonis Haslem&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Zhou Qi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Alize Johnson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ben Simmons&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cameron Reynolds&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Courtney Lee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;De&apos;Anthony Melton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Devonte&apos; Graham&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dwyane Wade&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Garrett Temple&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ian Clark&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;JaKarr Sampson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jawun Evans&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Joe Harris&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Josh Jackson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kenrich Williams&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LaMarcus Aldridge&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Marc Gasol&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mikal Bridges&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;OG Anunoby&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rawle Alkins&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ryan Broekhoff&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Svi Mykhailiuk&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tony Parker&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tyreke Evans&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zach LaVine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Al Horford&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Anthony Davis&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brook Lopez&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chris Paul&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dante Cunningham&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Derrick Favors&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dragan Bender&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eric Moreland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grayson Allen&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ivan Rabb&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jared Terrell&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jerome Robinson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jonathan Isaac&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kalin Lucas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kostas Antetokounmpo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Luke Kennard&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mason Plumlee&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Naz Mitrou-Long&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Paul George&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ron Baker&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Shelvin Mack&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Theo Pinson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Troy Daniels&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wesley Matthews&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Pos:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;C&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PG&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;PF-SF&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;SG-PF&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SF-SG&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SG-SF&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PF&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;SF&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;C-PF&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;SG&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:TEAM_NAME:nk]' type='palette'>
            <map to='#358ead'>
              <bucket>&quot;Oklahoma City Thunder&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;Detroit Pistons&quot;</bucket>
            </map>
            <map to='#49525e'>
              <bucket>&quot;Brooklyn Nets&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;San Antonio Spurs&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Golden State Warriors&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Boston Celtics&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chicago Bulls&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Milwaukee Bucks&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Los Angeles Lakers&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Miami Heat&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LA Clippers&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Washington Wizards&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cleveland Cavaliers&quot;</bucket>
            </map>
            <map to='#9a6a96'>
              <bucket>&quot;Sacramento Kings&quot;</bucket>
            </map>
            <map to='#9f3632'>
              <bucket>&quot;New Orleans Pelicans&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dallas Mavericks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Orlando Magic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Philadelphia 76ers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Portland Trail Blazers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Utah Jazz&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Memphis Grizzlies&quot;</bucket>
            </map>
            <map to='#e13b42'>
              <bucket>&quot;Toronto Raptors&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Houston Rockets&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Minnesota Timberwolves&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Denver Nuggets&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;Indiana Pacers&quot;</bucket>
            </map>
            <map to='#f9856e'>
              <bucket>&quot;Atlanta Hawks&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;New York Knicks&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Phoenix Suns&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Charlotte Hornets&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:PLAYER_NAME:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Alex Len&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Avery Bradley&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;C.J. Williams&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Collin Sexton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;David Nwaba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Devin Booker&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dwayne Bacon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Frank Ntilikina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hassan Whiteside&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jacob Evans&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jarrett Allen&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Joakim Noah&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jordan McRae&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kelly Oubre Jr.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyle Lowry&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malcolm Miller&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Michael Beasley&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nik Stauskas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Quinn Cook&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Russell Westbrook&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stephen Curry&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tim Hardaway Jr.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tyler Johnson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yogi Ferrell&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aaron Gordon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Andrew Harrison&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brandon Ingram&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chimezie Metu&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Daniel Theis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Deng Adel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Donte Grantham&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Enes Kanter&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Glenn Robinson III&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Isaiah Hicks&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;James Nunnally&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jeremy Lamb&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jon Leuer&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Justin Patton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Khyri Thomas&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lorenzo Brown&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MarShon Brooks&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Montrezl Harrell&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Patrick Patterson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rodions Kurucs&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Shake Milton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Terry Rozier&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tristan Thompson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wayne Selden&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Al-Farouq Aminu&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Anthony Tolliver&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bruce Brown&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Christian Wood&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dante Exum&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Derrick Jones Jr.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Draymond Green&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Evan Fournier&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greg Monroe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ivica Zubac&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jarell Martin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jerryd Bayless&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jonathon Simmons&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Karl-Anthony Towns&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kris Dunn&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Luke Kornet&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malcolm Brogdon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Matthew Dellavedova&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nemanja Bjelica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Paul Millsap&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rondae Hollis-Jefferson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sindarius Thornwell&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thomas Bryant&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Troy Williams&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Will Barton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Allen Crabbe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Billy Garrett&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Caris LeVert&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;D.J. Augustin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Deandre Ayton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dewayne Dedmon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E&apos;Twaun Moore&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gary Clark&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ian Mahinmi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jake Layman&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jaylen Adams&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Joe Ingles&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Josh Okogie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kent Bazemore&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lance Stephenson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Marcin Gortat&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mike Conley&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Okaro White&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ray Spalding&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Salah Mejri&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T.J. McConnell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tony Snell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tyrone Wallace&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zach Lofton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Alex Poythress&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bam Adebayo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Caleb Swanigan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Corey Brewer&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Davon Reed&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Devin Harris&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dwight Howard&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fred VanVleet&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Haywood Highsmith&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jae Crowder&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jason Smith&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jodie Meeks&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jordan Sibert&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kemba Walker&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kyle O&apos;Quinn&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malik Beasley&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Michael Carter-Williams&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Noah Vonleh&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rajon Rondo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ryan Anderson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sterling Brown&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tobias Harris&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tyler Lydon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yuta Watanabe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Alan Williams&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antonio Blakeney&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bruno Caboclo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CJ McCollum&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Darius Miller&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Derrick Rose&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Drew Eubanks&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Evan Turner&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guerschon Yabusele&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;J.J. Barea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jaren Jackson Jr.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jevon Carter&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jordan Bell&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kawhi Leonard&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kyle Anderson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luol Deng&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Maurice Harkless&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nerlens Noel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PJ Dozier&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Royce O&apos;Neale&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Solomon Hill&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thomas Welsh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tyler Cavanaugh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Willie Cauley-Stein&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Andre Ingram&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bradley Beal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chasson Randle&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Damyean Dotson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DeMarre Carroll&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Donovan Mitchell&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Emanuel Terry&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gerald Green&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Isaiah Canaan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;James Harden&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jemerrio Jones&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Johnathan Motley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Justin Holiday&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Khem Birch&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LeBron James&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Markieff Morris&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mo Bamba&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Patrick Beverley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Robert Covington&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shabazz Napier&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Terrence Jones&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Trey Burke&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Walt Lemon Jr.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aaron Holiday&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Andrew Wiggins&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brandon Knight&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chris Boucher&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Danilo Gallinari&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dennis Smith Jr.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dorian Finney-Smith&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eric Bledsoe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gordon Hayward&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Isaiah Thomas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;JaMychal Green&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jeremy Lin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jonah Bolden&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Justise Winslow&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Klay Thompson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lou Williams&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marvin Bagley III&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Moritz Wagner&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Patty Mills&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rodney Hood&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Shaquille Harrison&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thabo Sefolosha&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Troy Brown Jr.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wendell Carter Jr.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Andre Drummond&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bonzie Colson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chandler Parsons&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Damian Lillard&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DeMar DeRozan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dirk Nowitzki&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Elfrid Payton&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;George Hill&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Isaac Humphries&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jamal Crawford&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jeff Green&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;John Jenkins&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Julius Randle&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kevin Love&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Larry Nance Jr.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mario Hezonja&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Miles Plumlee&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pascal Siakam&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Richaun Holmes&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Serge Ibaka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Taurean Prince&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Trevon Duval&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Victor Oladipo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Alec Burks&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Aron Baynes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bryn Forbes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Clint Capela&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Darren Collison&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Derrick White&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Duncan Robinson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Frank Jackson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hamidou Diallo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;J.P. Macura&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jaron Blossomgame&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jimmer Fredette&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jordan Clarkson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Keita Bates-Diop&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kyle Korver&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malachi Richardson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maxi Kleber&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nick Young&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Quincy Acy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rudy Gay&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spencer Dinwiddie&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thon Maker&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tyler Davis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wilson Chandler&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Allonzo Trier&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bismack Biyombo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Carmelo Anthony&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;D.J. Wilson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DeAndre Jordan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Deyonta Davis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ed Davis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gary Harris&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ike Anigbogu&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jakob Poeltl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jaylen Brown&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Joel Embiid&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Josh Richardson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kentavious Caldwell-Pope&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lance Thomas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marco Belinelli&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mike Muscala&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Omari Spellman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Raymond Felton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sam Dekker&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T.J. Warren&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Torrey Craig&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tyson Chandler&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zaza Pachulia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Amile Jefferson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Blake Griffin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cedi Osman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;D&apos;Angelo Russell&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DeAndre&apos; Bembry&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dillon Brooks&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Edmond Sumner&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gary Payton II&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iman Shumpert&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jalen Brunson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jaylen Morris&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;John Collins&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jrue Holiday&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kevin Durant&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Landry Shamet&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marcus Derrickson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mike Scott&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Omri Casspi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Reggie Bullock&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Scott Machado&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tahjere McCall&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Trae Young&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tyus Jones&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zhaire Smith&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Andre Iguodala&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brad Wanamaker&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Channing Frye&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Damion Lee&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DeMarcus Cousins&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Domantas Sabonis&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Elie Okobo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Georges Niang&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isaiah Briscoe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamal Murray&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jeff Teague&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;John Wall&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Justin Anderson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kevon Looney&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lauri Markkanen&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Markelle Fultz&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mitchell Robinson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pat Connaughton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ricky Rubio&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Seth Curry&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Terrance Ferguson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Trevor Ariza&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vince Carter&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Andrew Bogut&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brandon Goodwin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cheick Diallo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Daniel Hamilton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Demetrius Jackson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Donte DiVincenzo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Emmanuel Mudiay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Giannis Antetokounmpo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Isaiah Hartenstein&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;James Johnson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jerami Grant&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Johnathan Williams&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Justin Jackson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Khris Middleton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lonzo Ball&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Marquese Chriss&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Monte Morris&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Patrick McCaw&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Robin Lopez&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shai Gilgeous-Alexander&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Terrence Ross&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Trey Lyles&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wayne Ellington&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Alfonzo McKinnie&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ben McLemore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cameron Payne&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cory Joseph&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;De&apos;Aaron Fox&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Devin Robinson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dwight Powell&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Furkan Korkmaz&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Henry Ellenson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jahlil Okafor&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;JaVale McGee&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Joe Chealey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Josh Hart&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kenneth Faried&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kyrie Irving&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malik Monk&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Michael Kidd-Gilchrist&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Norman Powell&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Raul Neto&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ryan Arcidiacono&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Steven Adams&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tony Bradley&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tyler Zeller&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zach Collins&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Alex Caruso&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Austin Rivers&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Buddy Hield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cody Zeller&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Daryl Macon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DeVaughn Akoon-Purcell&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dusty Hannahs&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Frank Kaminsky&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Harrison Barnes&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jabari Parker&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jarred Vanderbilt&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jimmy Butler&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jordan Loyd&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kelly Olynyk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kyle Kuzma&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Meyers Leonard&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nicolas Batum&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Quincy Pondexter&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rudy Gobert&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stanley Johnson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tim Frazier&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tyler Dorsey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yante Maten&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Abdel Nader&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Anfernee Simons&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brandon Sampson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chris Chiozza&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Danny Green&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Deonte Burton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Doug McDermott&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eric Gordon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gorgui Dieng&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ish Smith&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jared Dudley&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jerian Grant&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jonas Jerebko&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kadeem Allen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kosta Koufos&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Luc Mbah a Moute&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Marvin Williams&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Myles Turner&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pau Gasol&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rodney McGruder&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Shaun Livingston&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thaddeus Young&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Troy Caupain&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wesley Johnson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Amir Johnson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bobby Portis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chandler Hutchison&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Damian Jones&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Delon Wright&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dion Waiters&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ekpe Udoh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gary Trent Jr.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Isaac Bonga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jalen Jones&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jayson Tatum&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;John Henson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Julian Washburn&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kevin Huerter&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Langston Galloway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Marcus Smart&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Miles Bridges&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;P.J. Tucker&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Reggie Jackson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Semi Ojeleye&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Taj Gibson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Treveon Graham&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Udonis Haslem&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Zhou Qi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Alize Johnson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ben Simmons&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cameron Reynolds&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Courtney Lee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;De&apos;Anthony Melton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Devonte&apos; Graham&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dwyane Wade&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Garrett Temple&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ian Clark&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;JaKarr Sampson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jawun Evans&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Joe Harris&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Josh Jackson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kenrich Williams&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LaMarcus Aldridge&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Marc Gasol&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mikal Bridges&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;OG Anunoby&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rawle Alkins&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ryan Broekhoff&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Svi Mykhailiuk&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tony Parker&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tyreke Evans&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zach LaVine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Al Horford&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Anthony Davis&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brook Lopez&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chris Paul&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dante Cunningham&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Derrick Favors&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dragan Bender&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eric Moreland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grayson Allen&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ivan Rabb&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jared Terrell&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jerome Robinson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jonathan Isaac&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kalin Lucas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kostas Antetokounmpo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Luke Kennard&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mason Plumlee&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Naz Mitrou-Long&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Paul George&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ron Baker&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Shelvin Mack&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Theo Pinson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Troy Daniels&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wesley Matthews&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[sum:Age:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[sum:SHOT_MADE_FLAG:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[__tableau_internal_object_id__].[cnt:nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[usr:Calculation_1112952094569906181:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[sum:3P:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[sum:SHOT_DISTANCE:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:Calculation_1397804771222761485:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:PTS:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[avg:Calculation_1397804771222761485:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[cnt:Calculation_1397804771044945922:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[max:Calculation_1397804771044945922:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[max:Calculation_1397804771222761485:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[min:Calculation_1397804771044945922:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[pcto:usr:Calculation_1112952094560137219:qk:2]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[pcto:usr:Calculation_1112952094560137219:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[sum:Calculation_1397804771044945922:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[sum:Calculation_1397804771222761485:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[sum:PTS:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[usr:Calculation_1112952094560137219:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[max:Calculation_1397804771162169354:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1397804771162169354:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[sum:Calculation_1397804771162169354:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[sum:FG:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:BLK:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[max:BLK:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:BLK:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[sum:BLK:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[sum:Rk:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:3P\%:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:eFG\%:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[avg:3P\%:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[ctd:3P\%:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[max:3P\%:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[max:eFG\%:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:3P\%:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:eFG\%:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[sum:3P\%:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[sum:eFG\%:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[sum:G:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[usr:Calculation_1397804771153735686:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[sum:2P:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[sum:PERIOD:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:FT\%:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[avg:FT\%:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[max:FT\%:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1397804771155599367:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:FT\%:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[sum:Calculation_1397804771155599367:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[sum:FT\%:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[sum:3PA:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[sum:LOC_Y:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:FG\%:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[sum:FG\%:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[sum:MP:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:FGA:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[sum:FGA:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[sum:TOV:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:Calculation_1397804771031994368:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[max:Calculation_1397804771031994368:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1397804771031994368:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[sum:Calculation_1397804771031994368:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[sum:FTA:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:Calculation_1112952094544662528:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[avg:LOC_X:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094544662528:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[sum:Calculation_1112952094544662528:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[sum:GS:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[sum:LOC_X:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[cnt:ORB:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[max:ORB:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[rank:usr:Calculation_1112952094558171137:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[sum:DRB:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[sum:ORB:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[sum:TRB:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[usr:Calculation_1112952094558171137:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[usr:Calculation_1397804771042365441:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:SHOT_ATTEMPTED_FLAG:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[sum:AST:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[sum:SHOT_ATTEMPTED_FLAG:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:2P\%:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[avg:2P\%:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[max:2P\%:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:2P\%:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[sum:2P\%:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[sum:MINUTES_REMAINING:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[usr:Calculation_1112952094569717764:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[max:FT:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[sum:FT:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[sum:PF:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[pcto:usr:Calculation_1112952094558478338:qk:2]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[pcto:usr:Calculation_1112952094558478338:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[rank:usr:Calculation_1112952094558478338:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[sum:STL:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[usr:Calculation_1112952094558478338:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[sum:2PA:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[sum:SECONDS_REMAINING:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:SHOT_MADE_FLAG:ok]' palette=':default' type='shape'>
            <map to='KPI/09.png'>
              <bucket>0</bucket>
            </map>
            <map to='KPI/11.png'>
              <bucket>1</bucket>
            </map>
            <map to='asterisk'>
              <bucket>4</bucket>
            </map>
            <map to='asterisk'>
              <bucket>14</bucket>
            </map>
            <map to='asterisk'>
              <bucket>24</bucket>
            </map>
            <map to='asterisk'>
              <bucket>34</bucket>
            </map>
            <map to='asterisk'>
              <bucket>44</bucket>
            </map>
            <map to='asterisk'>
              <bucket>54</bucket>
            </map>
            <map to='asterisk'>
              <bucket>64</bucket>
            </map>
            <map to='asterisk'>
              <bucket>74</bucket>
            </map>
            <map to='asterisk'>
              <bucket>85</bucket>
            </map>
            <map to='asterisk'>
              <bucket>98</bucket>
            </map>
            <map to='asterisk'>
              <bucket>114</bucket>
            </map>
            <map to='asterisk'>
              <bucket>133</bucket>
            </map>
            <map to='asterisk'>
              <bucket>166</bucket>
            </map>
            <map to='asterisk'>
              <bucket>191</bucket>
            </map>
            <map to='asterisk'>
              <bucket>285</bucket>
            </map>
            <map to='asterisk'>
              <bucket>510</bucket>
            </map>
            <map to='asterisk'>
              <bucket>691</bucket>
            </map>
            <map to='asterisk'>
              <bucket>1317</bucket>
            </map>
            <map to='asterisk'>
              <bucket>2607</bucket>
            </map>
            <map to='circle'>
              <bucket>10</bucket>
            </map>
            <map to='circle'>
              <bucket>20</bucket>
            </map>
            <map to='circle'>
              <bucket>30</bucket>
            </map>
            <map to='circle'>
              <bucket>40</bucket>
            </map>
            <map to='circle'>
              <bucket>50</bucket>
            </map>
            <map to='circle'>
              <bucket>60</bucket>
            </map>
            <map to='circle'>
              <bucket>70</bucket>
            </map>
            <map to='circle'>
              <bucket>80</bucket>
            </map>
            <map to='circle'>
              <bucket>91</bucket>
            </map>
            <map to='circle'>
              <bucket>106</bucket>
            </map>
            <map to='circle'>
              <bucket>128</bucket>
            </map>
            <map to='circle'>
              <bucket>157</bucket>
            </map>
            <map to='circle'>
              <bucket>183</bucket>
            </map>
            <map to='circle'>
              <bucket>228</bucket>
            </map>
            <map to='circle'>
              <bucket>354</bucket>
            </map>
            <map to='circle'>
              <bucket>603</bucket>
            </map>
            <map to='circle'>
              <bucket>892</bucket>
            </map>
            <map to='circle'>
              <bucket>1753</bucket>
            </map>
            <map to='diamond'>
              <bucket>5</bucket>
            </map>
            <map to='diamond'>
              <bucket>15</bucket>
            </map>
            <map to='diamond'>
              <bucket>25</bucket>
            </map>
            <map to='diamond'>
              <bucket>35</bucket>
            </map>
            <map to='diamond'>
              <bucket>45</bucket>
            </map>
            <map to='diamond'>
              <bucket>55</bucket>
            </map>
            <map to='diamond'>
              <bucket>65</bucket>
            </map>
            <map to='diamond'>
              <bucket>75</bucket>
            </map>
            <map to='diamond'>
              <bucket>86</bucket>
            </map>
            <map to='diamond'>
              <bucket>99</bucket>
            </map>
            <map to='diamond'>
              <bucket>115</bucket>
            </map>
            <map to='diamond'>
              <bucket>138</bucket>
            </map>
            <map to='diamond'>
              <bucket>167</bucket>
            </map>
            <map to='diamond'>
              <bucket>192</bucket>
            </map>
            <map to='diamond'>
              <bucket>304</bucket>
            </map>
            <map to='diamond'>
              <bucket>517</bucket>
            </map>
            <map to='diamond'>
              <bucket>718</bucket>
            </map>
            <map to='diamond'>
              <bucket>1346</bucket>
            </map>
            <map to='diamond'>
              <bucket>2793</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>7</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>17</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>27</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>37</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>47</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>57</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>67</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>77</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>88</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>101</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>118</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>142</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>173</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>207</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>324</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>530</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>765</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>1502</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>8</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>18</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>28</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>38</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>48</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>58</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>68</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>78</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>89</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>102</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>122</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>147</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>177</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>212</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>330</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>595</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>789</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>1554</bucket>
            </map>
            <map to='plus'>
              <bucket>2</bucket>
            </map>
            <map to='plus'>
              <bucket>12</bucket>
            </map>
            <map to='plus'>
              <bucket>22</bucket>
            </map>
            <map to='plus'>
              <bucket>32</bucket>
            </map>
            <map to='plus'>
              <bucket>42</bucket>
            </map>
            <map to='plus'>
              <bucket>52</bucket>
            </map>
            <map to='plus'>
              <bucket>62</bucket>
            </map>
            <map to='plus'>
              <bucket>72</bucket>
            </map>
            <map to='plus'>
              <bucket>82</bucket>
            </map>
            <map to='plus'>
              <bucket>95</bucket>
            </map>
            <map to='plus'>
              <bucket>110</bucket>
            </map>
            <map to='plus'>
              <bucket>131</bucket>
            </map>
            <map to='plus'>
              <bucket>162</bucket>
            </map>
            <map to='plus'>
              <bucket>187</bucket>
            </map>
            <map to='plus'>
              <bucket>257</bucket>
            </map>
            <map to='plus'>
              <bucket>386</bucket>
            </map>
            <map to='plus'>
              <bucket>641</bucket>
            </map>
            <map to='plus'>
              <bucket>1239</bucket>
            </map>
            <map to='plus'>
              <bucket>1944</bucket>
            </map>
            <map to='plus'>
              <bucket>%many-values%</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>9</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>19</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>29</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>39</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>49</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>59</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>69</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>79</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>90</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>103</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>127</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>152</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>180</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>217</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>342</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>596</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>858</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>1588</bucket>
            </map>
            <map to='square'>
              <bucket>11</bucket>
            </map>
            <map to='square'>
              <bucket>21</bucket>
            </map>
            <map to='square'>
              <bucket>31</bucket>
            </map>
            <map to='square'>
              <bucket>41</bucket>
            </map>
            <map to='square'>
              <bucket>51</bucket>
            </map>
            <map to='square'>
              <bucket>61</bucket>
            </map>
            <map to='square'>
              <bucket>71</bucket>
            </map>
            <map to='square'>
              <bucket>81</bucket>
            </map>
            <map to='square'>
              <bucket>94</bucket>
            </map>
            <map to='square'>
              <bucket>107</bucket>
            </map>
            <map to='square'>
              <bucket>129</bucket>
            </map>
            <map to='square'>
              <bucket>158</bucket>
            </map>
            <map to='square'>
              <bucket>186</bucket>
            </map>
            <map to='square'>
              <bucket>247</bucket>
            </map>
            <map to='square'>
              <bucket>362</bucket>
            </map>
            <map to='square'>
              <bucket>634</bucket>
            </map>
            <map to='square'>
              <bucket>1053</bucket>
            </map>
            <map to='square'>
              <bucket>1879</bucket>
            </map>
            <map to='times'>
              <bucket>3</bucket>
            </map>
            <map to='times'>
              <bucket>13</bucket>
            </map>
            <map to='times'>
              <bucket>23</bucket>
            </map>
            <map to='times'>
              <bucket>33</bucket>
            </map>
            <map to='times'>
              <bucket>43</bucket>
            </map>
            <map to='times'>
              <bucket>53</bucket>
            </map>
            <map to='times'>
              <bucket>63</bucket>
            </map>
            <map to='times'>
              <bucket>73</bucket>
            </map>
            <map to='times'>
              <bucket>84</bucket>
            </map>
            <map to='times'>
              <bucket>96</bucket>
            </map>
            <map to='times'>
              <bucket>112</bucket>
            </map>
            <map to='times'>
              <bucket>132</bucket>
            </map>
            <map to='times'>
              <bucket>164</bucket>
            </map>
            <map to='times'>
              <bucket>188</bucket>
            </map>
            <map to='times'>
              <bucket>280</bucket>
            </map>
            <map to='times'>
              <bucket>436</bucket>
            </map>
            <map to='times'>
              <bucket>680</bucket>
            </map>
            <map to='times'>
              <bucket>1288</bucket>
            </map>
            <map to='times'>
              <bucket>2097</bucket>
            </map>
            <map to='triangle'>
              <bucket>6</bucket>
            </map>
            <map to='triangle'>
              <bucket>16</bucket>
            </map>
            <map to='triangle'>
              <bucket>26</bucket>
            </map>
            <map to='triangle'>
              <bucket>36</bucket>
            </map>
            <map to='triangle'>
              <bucket>46</bucket>
            </map>
            <map to='triangle'>
              <bucket>56</bucket>
            </map>
            <map to='triangle'>
              <bucket>66</bucket>
            </map>
            <map to='triangle'>
              <bucket>76</bucket>
            </map>
            <map to='triangle'>
              <bucket>87</bucket>
            </map>
            <map to='triangle'>
              <bucket>100</bucket>
            </map>
            <map to='triangle'>
              <bucket>116</bucket>
            </map>
            <map to='triangle'>
              <bucket>140</bucket>
            </map>
            <map to='triangle'>
              <bucket>171</bucket>
            </map>
            <map to='triangle'>
              <bucket>200</bucket>
            </map>
            <map to='triangle'>
              <bucket>306</bucket>
            </map>
            <map to='triangle'>
              <bucket>528</bucket>
            </map>
            <map to='triangle'>
              <bucket>732</bucket>
            </map>
            <map to='triangle'>
              <bucket>1354</bucket>
            </map>
            <map to='triangle'>
              <bucket>4486</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1112952094579003400:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Left Corner 3 - Left Side(L)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Above the Break 3 - Back Court(BC)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Backcourt - Back Court(BC)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mid-Range - Right Side Center(RC)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mid-Range - Center(C)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;In The Paint (Non-RA) - Center(C)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Above the Break 3 - Center(C)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;In The Paint (Non-RA) - Left Side(L)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mid-Range - Right Side(R)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Restricted Area - Center(C)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mid-Range - Left Side Center(LC)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;In The Paint (Non-RA) - Right Side(R)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Above the Break 3 - Left Side Center(LC)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Right Corner 3 - Right Side(R)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mid-Range - Left Side(L)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Above the Break 3 - Right Side Center(RC)&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Size' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.3'>
          <calculation class='tableau' formula='0.3' />
          <range max='1.0' min='0.0' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='nba_shots_stats_master_cleaned.csv' id='nba_shots_stats_master_cleaned.csv_4018DCEEDD924C46966F4FBE71FABD65'>
            <properties context=''>
              <relation connection='textscan.1rfe7iq1ds4m1k1e6gpdx1tgj98n' name='nba_shots_stats_master_cleaned.csv' table='[nba_shots_stats_master_cleaned#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='integer' name='GAME_ID' ordinal='0' />
                  <column datatype='integer' name='GAME_EVENT_ID' ordinal='1' />
                  <column datatype='integer' name='PLAYER_ID' ordinal='2' />
                  <column datatype='string' name='PLAYER_NAME' ordinal='3' />
                  <column datatype='integer' name='TEAM_ID' ordinal='4' />
                  <column datatype='string' name='TEAM_NAME' ordinal='5' />
                  <column datatype='integer' name='PERIOD' ordinal='6' />
                  <column datatype='integer' name='MINUTES_REMAINING' ordinal='7' />
                  <column datatype='integer' name='SECONDS_REMAINING' ordinal='8' />
                  <column datatype='string' name='EVENT_TYPE' ordinal='9' />
                  <column datatype='string' name='ACTION_TYPE' ordinal='10' />
                  <column datatype='string' name='SHOT_TYPE' ordinal='11' />
                  <column datatype='string' name='SHOT_ZONE_BASIC' ordinal='12' />
                  <column datatype='string' name='SHOT_ZONE_AREA' ordinal='13' />
                  <column datatype='string' name='SHOT_ZONE_RANGE' ordinal='14' />
                  <column datatype='integer' name='SHOT_DISTANCE' ordinal='15' />
                  <column datatype='integer' name='LOC_X' ordinal='16' />
                  <column datatype='integer' name='LOC_Y' ordinal='17' />
                  <column datatype='integer' name='SHOT_ATTEMPTED_FLAG' ordinal='18' />
                  <column datatype='integer' name='SHOT_MADE_FLAG' ordinal='19' />
                  <column datatype='date' name='GAME_DATE' ordinal='20' />
                  <column datatype='string' name='HTM' ordinal='21' />
                  <column datatype='string' name='VTM' ordinal='22' />
                  <column datatype='integer' name='Rk' ordinal='23' />
                  <column datatype='string' name='Player' ordinal='24' />
                  <column datatype='string' name='Pos' ordinal='25' />
                  <column datatype='integer' name='Age' ordinal='26' />
                  <column datatype='integer' name='G' ordinal='27' />
                  <column datatype='integer' name='GS' ordinal='28' />
                  <column datatype='integer' name='MP' ordinal='29' />
                  <column datatype='integer' name='FG' ordinal='30' />
                  <column datatype='integer' name='FGA' ordinal='31' />
                  <column datatype='real' name='FG%' ordinal='32' />
                  <column datatype='integer' name='3P' ordinal='33' />
                  <column datatype='integer' name='3PA' ordinal='34' />
                  <column datatype='real' name='3P%' ordinal='35' />
                  <column datatype='integer' name='2P' ordinal='36' />
                  <column datatype='integer' name='2PA' ordinal='37' />
                  <column datatype='real' name='2P%' ordinal='38' />
                  <column datatype='real' name='eFG%' ordinal='39' />
                  <column datatype='integer' name='FT' ordinal='40' />
                  <column datatype='integer' name='FTA' ordinal='41' />
                  <column datatype='real' name='FT%' ordinal='42' />
                  <column datatype='integer' name='ORB' ordinal='43' />
                  <column datatype='integer' name='DRB' ordinal='44' />
                  <column datatype='integer' name='TRB' ordinal='45' />
                  <column datatype='integer' name='AST' ordinal='46' />
                  <column datatype='integer' name='STL' ordinal='47' />
                  <column datatype='integer' name='BLK' ordinal='48' />
                  <column datatype='integer' name='TOV' ordinal='49' />
                  <column datatype='integer' name='PF' ordinal='50' />
                  <column datatype='integer' name='PTS' ordinal='51' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='50 40 90 club'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_shots_stats_master_cleaned' name='federated.1b1haxu0qu83q01ecfupu0ut27li' />
          </datasources>
          <datasource-dependencies datasource='federated.1b1haxu0qu83q01ecfupu0ut27li'>
            <column datatype='real' name='[3P%]' role='measure' type='quantitative' />
            <column caption='FG%' datatype='real' name='[Calculation_1397804771042365441]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([SHOT_MADE_FLAG]) / SUM([SHOT_ATTEMPTED_FLAG])' />
            </column>
            <column caption='Year_end_FG%' datatype='real' name='[FG%]' role='measure' type='quantitative' />
            <column caption='Year_end_FGA' datatype='integer' name='[FGA]' role='measure' type='quantitative' />
            <column datatype='real' name='[FT%]' role='measure' type='quantitative' />
            <column caption='Player Name' datatype='string' name='[PLAYER_NAME]' role='dimension' type='nominal' />
            <column datatype='string' name='[Pos]' role='dimension' type='nominal' />
            <column caption='FGA' datatype='integer' name='[SHOT_ATTEMPTED_FLAG]' role='measure' type='quantitative' />
            <column caption='FGM' datatype='integer' name='[SHOT_MADE_FLAG]' role='measure' type='quantitative' />
            <column caption='Team Name' datatype='string' name='[TEAM_NAME]' role='dimension' type='nominal' />
            <column-instance column='[3P%]' derivation='Attribute' name='[attr:3P%:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FG%]' derivation='Attribute' name='[attr:FG%:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FGA]' derivation='Attribute' name='[attr:FGA:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FT%]' derivation='Attribute' name='[attr:FT%:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PLAYER_NAME]' derivation='None' name='[none:PLAYER_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pos]' derivation='None' name='[none:Pos:nk]' pivot='key' type='nominal' />
            <column-instance column='[TEAM_NAME]' derivation='None' name='[none:TEAM_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1397804771042365441]' derivation='User' name='[usr:Calculation_1397804771042365441:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:3P%:qk]' included-values='in-range'>
            <min>0.40000000000000002</min>
            <max>1.0</max>
          </filter>
          <filter class='quantitative' column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:FG%:qk]' included-values='in-range'>
            <min>0.5</min>
            <max>0.66700000000000004</max>
          </filter>
          <filter class='quantitative' column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:FGA:qk]' included-values='in-range'>
            <min>100</min>
            <max>748</max>
          </filter>
          <filter class='quantitative' column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:FT%:qk]' included-values='in-range'>
            <min>0.90000000000000002</min>
            <max>1.0</max>
          </filter>
          <slices>
            <column>[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:FT%:qk]</column>
            <column>[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:3P%:qk]</column>
            <column>[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:FG%:qk]</column>
            <column>[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:FGA:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1b1haxu0qu83q01ecfupu0ut27li].[usr:Calculation_1397804771042365441:qk]' value='p0%' />
            <format attr='text-format' field='[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:3P%:qk]' value='p0%' />
            <format attr='text-format' field='[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:FT%:qk]' value='p0%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1b1haxu0qu83q01ecfupu0ut27li].[usr:Calculation_1397804771042365441:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[usr:Calculation_1397804771042365441:qk]' />
              <text column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[usr:Calculation_1397804771042365441:qk]' />
              <text column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:3P%:qk]' />
              <text column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:FT%:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk] / ([federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Pos:nk] / [federated.1b1haxu0qu83q01ecfupu0ut27li].[none:TEAM_NAME:nk]))</rows>
        <cols />
      </table>
      <simple-id uuid='{964BA825-37A3-4E0F-9B09-3A0807285638}' />
    </worksheet>
    <worksheet name='Best 3P shooters by %'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_shots_stats_master_cleaned' name='federated.1b1haxu0qu83q01ecfupu0ut27li' />
          </datasources>
          <datasource-dependencies datasource='federated.1b1haxu0qu83q01ecfupu0ut27li'>
            <column datatype='real' name='[3P%]' role='measure' type='quantitative' />
            <column datatype='integer' name='[3PA]' role='measure' type='quantitative' />
            <column caption='Player Name' datatype='string' name='[PLAYER_NAME]' role='dimension' type='nominal' />
            <column-instance column='[3P%]' derivation='Attribute' name='[attr:3P%:qk]' pivot='key' type='quantitative' />
            <column-instance column='[3PA]' derivation='Attribute' name='[attr:3PA:qk]' pivot='key' type='quantitative' />
            <column-instance column='[3P%]' derivation='None' name='[none:3P%:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PLAYER_NAME]' derivation='None' name='[none:PLAYER_NAME:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:3PA:qk]' included-values='in-range'>
            <min>501</min>
            <max>1028</max>
          </filter>
          <slices>
            <column>[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:3PA:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:3P%:qk]' value='p0.00%' />
            <format attr='text-format' field='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:3P%:qk]' value='p0.00%' />
            <format attr='height' value='314' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:3P%:qk]' />
              <size column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:3P%:qk]' />
              <text column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]' />
              <text column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:3P%:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.7471270561218262' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{09BB6106-8BEF-43BA-8CBC-BF8BE67B36F6}' />
    </worksheet>
    <worksheet name='Blocks and Steals relationship'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_shots_stats_master_cleaned' name='federated.1b1haxu0qu83q01ecfupu0ut27li' />
          </datasources>
          <datasource-dependencies datasource='federated.1b1haxu0qu83q01ecfupu0ut27li'>
            <column datatype='integer' name='[BLK]' role='measure' type='quantitative' />
            <column caption='Player Name' datatype='string' name='[PLAYER_NAME]' role='dimension' type='nominal' />
            <column datatype='string' name='[Pos]' role='dimension' type='nominal' />
            <column datatype='integer' name='[STL]' role='measure' type='quantitative' />
            <column-instance column='[BLK]' derivation='Max' name='[max:BLK:qk]' pivot='key' type='quantitative' />
            <column-instance column='[STL]' derivation='Max' name='[max:STL:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BLK]' derivation='None' name='[none:BLK:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PLAYER_NAME]' derivation='None' name='[none:PLAYER_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pos]' derivation='None' name='[none:Pos:nk]' pivot='key' type='nominal' />
            <column-instance column='[STL]' derivation='None' name='[none:STL:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[max:BLK:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[max:STL:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]'>
            <groupfilter function='level-members' level='[none:PLAYER_NAME:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Pos:nk]'>
            <groupfilter function='level-members' level='[none:Pos:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1b1haxu0qu83q01ecfupu0ut27li].[:Measure Names]</column>
            <column>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]</column>
            <column>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Pos:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='dashed' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]' />
              <lod column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:BLK:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:BLK:qk]' z-order='1' />
            <reference-line axis-column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:STL:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-table' value-column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:STL:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:STL:qk]</rows>
        <cols>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:BLK:qk]</cols>
      </table>
      <simple-id uuid='{34809843-BD0C-47F9-887E-34FFF1BC4141}' />
    </worksheet>
    <worksheet name='FGA Vs FG% Per Player'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_shots_stats_master_cleaned' name='federated.1b1haxu0qu83q01ecfupu0ut27li' />
          </datasources>
          <datasource-dependencies datasource='federated.1b1haxu0qu83q01ecfupu0ut27li'>
            <column caption='Year_end_FG%' datatype='real' name='[FG%]' role='measure' type='quantitative' />
            <column caption='Year_end_FGA' datatype='integer' name='[FGA]' role='measure' type='quantitative' />
            <column datatype='string' name='[Player]' role='dimension' type='nominal' />
            <column-instance column='[FGA]' derivation='Attribute' name='[attr:FGA:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FG%]' derivation='None' name='[none:FG%:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FGA]' derivation='None' name='[none:FGA:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Player]' derivation='None' name='[none:Player:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:FGA:qk]' included-values='in-range'>
            <min>500</min>
            <max>1909</max>
          </filter>
          <slices>
            <column>[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:FGA:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:FG%:qk]' value='p0%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:FG%:qk]' num-steps='5' palette='orange_blue_white_diverging_10_0' type='interpolated' />
            <encoding attr='size' field='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:FG%:qk]' field-type='quantitative' max-size='1' min-size='0' type='rangesize' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dotted' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:FG%:qk]' />
              <size column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:FG%:qk]' />
              <text column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Player:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:FG%:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:FG%:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.91045933961868286' />
                <format attr='mark-transparency' value='255' />
                <format attr='shape' value=':custom/hex.png' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:FG%:qk]</rows>
        <cols>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:FGA:qk]</cols>
      </table>
      <simple-id uuid='{5FB3DD2B-5846-476E-B2C8-45A9B8DFE3CC}' />
    </worksheet>
    <worksheet name='Points Distribution Per Player'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_shots_stats_master_cleaned' name='federated.1b1haxu0qu83q01ecfupu0ut27li' />
          </datasources>
          <datasource-dependencies datasource='federated.1b1haxu0qu83q01ecfupu0ut27li'>
            <column datatype='integer' name='[2P]' role='measure' type='quantitative' />
            <column datatype='integer' name='[3P]' role='measure' type='quantitative' />
            <column caption='3 points' datatype='integer' name='[Calculation_1112952094569717764]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX([3P]) * 3' />
            </column>
            <column caption='2 Points' datatype='integer' name='[Calculation_1112952094569906181]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX([2P]) * 2' />
            </column>
            <column datatype='integer' name='[FT]' role='measure' type='quantitative' />
            <column caption='Player Name' datatype='string' name='[PLAYER_NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[PTS]' role='measure' type='quantitative' />
            <column datatype='string' name='[Player]' role='dimension' type='nominal' />
            <column-instance column='[PTS]' derivation='Attribute' name='[attr:PTS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FT]' derivation='Max' name='[max:FT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PTS]' derivation='Max' name='[max:PTS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PLAYER_NAME]' derivation='None' name='[none:PLAYER_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[Player]' derivation='None' name='[none:Player:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1112952094569717764]' derivation='User' name='[usr:Calculation_1112952094569717764:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1112952094569906181]' derivation='User' name='[usr:Calculation_1112952094569906181:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[usr:Calculation_1112952094569906181:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[usr:Calculation_1112952094569717764:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[max:FT:qk]&quot;' />
            </groupfilter>
          </filter>
          <natural-sort column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[:Measure Names]' direction='DESC' />
          <filter class='quantitative' column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:PTS:qk]' included-values='in-range-or-null'>
            <min>0</min>
            <max>2818</max>
          </filter>
          <filter class='categorical' column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]'>
            <groupfilter count='100' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='MAX([PTS])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:PLAYER_NAME:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Player:nk]' direction='DESC' using='[federated.1b1haxu0qu83q01ecfupu0ut27li].[max:PTS:qk]' />
          <slices>
            <column>[federated.1b1haxu0qu83q01ecfupu0ut27li].[:Measure Names]</column>
            <column>[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:PTS:qk]</column>
            <column>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Player:nk]</rows>
        <cols>[federated.1b1haxu0qu83q01ecfupu0ut27li].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{735AA027-09F0-469F-973E-4BE1960CEAB6}' />
    </worksheet>
    <worksheet name='Rebounds Per Player'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_shots_stats_master_cleaned' name='federated.1b1haxu0qu83q01ecfupu0ut27li' />
          </datasources>
          <datasource-dependencies datasource='federated.1b1haxu0qu83q01ecfupu0ut27li'>
            <column caption='Total Rebounds' datatype='integer' name='[Calculation_1112952094558171137]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX([DRB]) + MAX([ORB])' />
            </column>
            <column caption='Defensive Rebounds' datatype='integer' name='[Calculation_1112952094558478338]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX([DRB])' />
            </column>
            <column caption='Offensive Rebounds' datatype='integer' name='[Calculation_1112952094560137219]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX([ORB])' />
            </column>
            <column datatype='integer' name='[DRB]' role='measure' type='quantitative' />
            <column datatype='integer' name='[ORB]' role='measure' type='quantitative' />
            <column datatype='string' name='[Player]' role='dimension' type='nominal' />
            <column datatype='string' name='[Pos]' role='dimension' type='nominal' />
            <column-instance column='[Player]' derivation='None' name='[none:Player:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pos]' derivation='None' name='[none:Pos:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1112952094558478338]' derivation='User' name='[pcto:usr:Calculation_1112952094558478338:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_1112952094560137219]' derivation='User' name='[pcto:usr:Calculation_1112952094560137219:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_1112952094558171137]' derivation='User' name='[rank:usr:Calculation_1112952094558171137:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[Calculation_1112952094558171137]' derivation='User' name='[usr:Calculation_1112952094558171137:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1112952094558478338]' derivation='User' name='[usr:Calculation_1112952094558478338:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1112952094560137219]' derivation='User' name='[usr:Calculation_1112952094560137219:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[usr:Calculation_1112952094558478338:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[usr:Calculation_1112952094560137219:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[pcto:usr:Calculation_1112952094558478338:qk:2]&quot;</bucket>
              <bucket>&quot;[federated.1b1haxu0qu83q01ecfupu0ut27li].[pcto:usr:Calculation_1112952094560137219:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Pos:nk]'>
            <groupfilter function='level-members' level='[none:Pos:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[rank:usr:Calculation_1112952094558171137:qk]' included-values='in-range'>
            <min>1</min>
            <max>471</max>
          </filter>
          <filter class='quantitative' column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[usr:Calculation_1112952094558171137:qk]' included-values='in-range'>
            <min>0</min>
            <max>1232</max>
          </filter>
          <slices>
            <column>[federated.1b1haxu0qu83q01ecfupu0ut27li].[:Measure Names]</column>
            <column>[federated.1b1haxu0qu83q01ecfupu0ut27li].[rank:usr:Calculation_1112952094558171137:qk]</column>
            <column>[federated.1b1haxu0qu83q01ecfupu0ut27li].[usr:Calculation_1112952094558171137:qk]</column>
            <column>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Pos:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1b1haxu0qu83q01ecfupu0ut27li].[pcto:usr:Calculation_1112952094560137219:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.1b1haxu0qu83q01ecfupu0ut27li].[usr:Calculation_1112952094560137219:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.1b1haxu0qu83q01ecfupu0ut27li].[pcto:usr:Calculation_1112952094558478338:qk:2]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.1b1haxu0qu83q01ecfupu0ut27li].[usr:Calculation_1112952094558478338:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='stroke-size' id='refline0' value='2' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[Multiple Values]' enable-instant-analytics='false' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[Multiple Values]' z-order='1' />
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='wrap' value='off' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1b1haxu0qu83q01ecfupu0ut27li].[Multiple Values]</rows>
        <cols>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Player:nk]</cols>
        <show-full-range>
          <column>[federated.1b1haxu0qu83q01ecfupu0ut27li].[Age (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{5F00035E-B19E-4454-B6C4-EF3236D1945A}' />
    </worksheet>
    <worksheet name='Sheet 10'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_shots_stats_master_cleaned' name='federated.1b1haxu0qu83q01ecfupu0ut27li' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Size' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.3'>
              <calculation class='tableau' formula='0.3' />
              <range max='1.0' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1b1haxu0qu83q01ecfupu0ut27li'>
            <column aggregation='Sum' caption='Hexbin X' datatype='real' name='[Calculation_1112952094575124486]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='-HEXBINX([LOC_X] * [Parameters].[Parameter 1], [LOC_Y]* [Parameters].[Parameter 1])/[Parameters].[Parameter 1]' />
            </column>
            <column aggregation='Sum' caption='Hexbin Y' datatype='real' name='[Calculation_1112952094575284231]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='HEXBINY([LOC_X] * [Parameters].[Parameter 1], [LOC_Y] * [Parameters].[Parameter 1])/ [Parameters].[Parameter 1]' />
            </column>
            <column caption='Loc X' datatype='integer' name='[LOC_X]' role='measure' type='quantitative' />
            <column caption='Loc Y' datatype='integer' name='[LOC_Y]' role='measure' type='quantitative' />
            <column caption='Player Name' datatype='string' name='[PLAYER_NAME]' role='dimension' type='nominal' />
            <column caption='FGM' datatype='integer' name='[SHOT_MADE_FLAG]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1112952094575124486]' derivation='None' name='[none:Calculation_1112952094575124486:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1112952094575284231]' derivation='None' name='[none:Calculation_1112952094575284231:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PLAYER_NAME]' derivation='None' name='[none:PLAYER_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[SHOT_MADE_FLAG]' derivation='None' name='[none:SHOT_MADE_FLAG:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]'>
            <groupfilter function='member' level='[none:PLAYER_NAME:nk]' member='&quot;Kawhi Leonard&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094575124486:qk]' field-type='quantitative' max='353.50414484856486' min='-328.99929061629666' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094575284231:qk]' field-type='quantitative' max='526.12842115461331' min='-692.95309923253922' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <shape column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:SHOT_MADE_FLAG:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':custom/hex.png' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='773' />
                <format attr='maxwidth' value='773' />
                <format attr='minheight' value='1378' />
                <format attr='maxheight' value='1378' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094575284231:qk]</rows>
        <cols>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094575124486:qk]</cols>
      </table>
      <simple-id uuid='{AAC05575-0E52-47DC-BD40-D2BC5C5001BA}' />
    </worksheet>
    <worksheet name='Sheet 16'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_shots_stats_master_cleaned' name='federated.1b1haxu0qu83q01ecfupu0ut27li' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Size' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.3'>
              <calculation class='tableau' formula='0.3' />
              <range max='1.0' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1b1haxu0qu83q01ecfupu0ut27li'>
            <column aggregation='Sum' caption='Hexbin X' datatype='real' name='[Calculation_1112952094575124486]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='-HEXBINX([LOC_X] * [Parameters].[Parameter 1], [LOC_Y]* [Parameters].[Parameter 1])/[Parameters].[Parameter 1]' />
            </column>
            <column aggregation='Sum' caption='Hexbin Y' datatype='real' name='[Calculation_1112952094575284231]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='HEXBINY([LOC_X] * [Parameters].[Parameter 1], [LOC_Y] * [Parameters].[Parameter 1])/ [Parameters].[Parameter 1]' />
            </column>
            <column caption='Shot Zone' datatype='string' name='[Calculation_1112952094579003400]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[SHOT_ZONE_BASIC] + &apos; - &apos; + [SHOT_ZONE_AREA]' />
            </column>
            <column caption='FG%' datatype='real' name='[Calculation_1397804771042365441]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([SHOT_MADE_FLAG]) / SUM([SHOT_ATTEMPTED_FLAG])' />
            </column>
            <column caption='Fixed_ShotZone_FG%_Pos' datatype='real' name='[Calculation_1397804771274670101]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_1112952094579003400], [Pos]: [Calculation_1397804771042365441]}' />
            </column>
            <column caption='Loc X' datatype='integer' name='[LOC_X]' role='measure' type='quantitative' />
            <column caption='Loc Y' datatype='integer' name='[LOC_Y]' role='measure' type='quantitative' />
            <column datatype='string' name='[Pos]' role='dimension' type='nominal' />
            <column caption='FGA' datatype='integer' name='[SHOT_ATTEMPTED_FLAG]' role='measure' type='quantitative' />
            <column caption='FGM' datatype='integer' name='[SHOT_MADE_FLAG]' role='measure' type='quantitative' />
            <column caption='Shot Zone Area' datatype='string' name='[SHOT_ZONE_AREA]' role='dimension' type='nominal' />
            <column caption='Shot Zone Basic' datatype='string' name='[SHOT_ZONE_BASIC]' role='dimension' type='nominal' />
            <column caption='Team Name' datatype='string' name='[TEAM_NAME]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1112952094575124486]' derivation='None' name='[none:Calculation_1112952094575124486:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1112952094575284231]' derivation='None' name='[none:Calculation_1112952094575284231:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1112952094579003400]' derivation='None' name='[none:Calculation_1112952094579003400:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1397804771274670101]' derivation='None' name='[none:Calculation_1397804771274670101:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pos]' derivation='None' name='[none:Pos:nk]' pivot='key' type='nominal' />
            <column-instance column='[TEAM_NAME]' derivation='None' name='[none:TEAM_NAME:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Pos:nk]'>
            <groupfilter function='level-members' level='[none:Pos:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:TEAM_NAME:nk]'>
            <groupfilter function='member' level='[none:TEAM_NAME:nk]' member='&quot;Atlanta Hawks&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Pos:nk]</column>
            <column>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:TEAM_NAME:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094579003400:nk]' />
              <size column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1397804771274670101:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094575284231:qk]</rows>
        <cols>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094575124486:qk]</cols>
      </table>
      <simple-id uuid='{E9AF4782-83C7-4BDB-BAC0-3B47A79D2C28}' />
    </worksheet>
    <worksheet name='Sheet 17'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_shots_stats_master_cleaned' name='federated.1b1haxu0qu83q01ecfupu0ut27li' />
          </datasources>
          <datasource-dependencies datasource='federated.1b1haxu0qu83q01ecfupu0ut27li'>
            <column datatype='real' name='[3P%]' role='measure' type='quantitative' />
            <column caption='FG%' datatype='real' name='[Calculation_1397804771042365441]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([SHOT_MADE_FLAG]) / SUM([SHOT_ATTEMPTED_FLAG])' />
            </column>
            <column datatype='string' name='[Pos]' role='dimension' type='nominal' />
            <column caption='FGA' datatype='integer' name='[SHOT_ATTEMPTED_FLAG]' role='measure' type='quantitative' />
            <column caption='FGM' datatype='integer' name='[SHOT_MADE_FLAG]' role='measure' type='quantitative' />
            <column caption='Team Name' datatype='string' name='[TEAM_NAME]' role='dimension' type='nominal' />
            <column-instance column='[3P%]' derivation='CountD' name='[ctd:3P%:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pos]' derivation='None' name='[none:Pos:nk]' pivot='key' type='nominal' />
            <column-instance column='[TEAM_NAME]' derivation='None' name='[none:TEAM_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1397804771042365441]' derivation='User' name='[usr:Calculation_1397804771042365441:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Pos:nk]'>
            <groupfilter function='level-members' level='[none:Pos:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Pos:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Pos:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1b1haxu0qu83q01ecfupu0ut27li].[usr:Calculation_1397804771042365441:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Pos:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1b1haxu0qu83q01ecfupu0ut27li].[ctd:3P%:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Pos:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1b1haxu0qu83q01ecfupu0ut27li].[usr:Calculation_1397804771042365441:qk] + [federated.1b1haxu0qu83q01ecfupu0ut27li].[ctd:3P%:qk])</rows>
        <cols>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:TEAM_NAME:nk]</cols>
      </table>
      <simple-id uuid='{BF20E0A6-B22E-4C58-B660-152BACEBE6F8}' />
    </worksheet>
    <worksheet name='Shot chart per player and game'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_shots_stats_master_cleaned' name='federated.1b1haxu0qu83q01ecfupu0ut27li' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Size' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.3'>
              <calculation class='tableau' formula='0.3' />
              <range max='1.0' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1b1haxu0qu83q01ecfupu0ut27li'>
            <column aggregation='Sum' caption='Hexbin X' datatype='real' name='[Calculation_1112952094575124486]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='-HEXBINX([LOC_X] * [Parameters].[Parameter 1], [LOC_Y]* [Parameters].[Parameter 1])/[Parameters].[Parameter 1]' />
            </column>
            <column aggregation='Sum' caption='Hexbin Y' datatype='real' name='[Calculation_1112952094575284231]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='HEXBINY([LOC_X] * [Parameters].[Parameter 1], [LOC_Y] * [Parameters].[Parameter 1])/ [Parameters].[Parameter 1]' />
            </column>
            <column caption='Shot Zone' datatype='string' name='[Calculation_1112952094579003400]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[SHOT_ZONE_BASIC] + &apos; - &apos; + [SHOT_ZONE_AREA]' />
            </column>
            <column caption='FG%' datatype='real' name='[Calculation_1397804771042365441]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([SHOT_MADE_FLAG]) / SUM([SHOT_ATTEMPTED_FLAG])' />
            </column>
            <column caption='Fixed_FG%_LOD' datatype='real' name='[Calculation_1397804771155599367]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_1112952094579003400], [PLAYER_ID]: [Calculation_1397804771042365441] }' />
            </column>
            <column caption='Loc X' datatype='integer' name='[LOC_X]' role='measure' type='quantitative' />
            <column caption='Loc Y' datatype='integer' name='[LOC_Y]' role='measure' type='quantitative' />
            <column caption='Player Id' datatype='integer' name='[PLAYER_ID]' role='dimension' type='ordinal' />
            <column caption='Player Name' datatype='string' name='[PLAYER_NAME]' role='dimension' type='nominal' />
            <column caption='FGA' datatype='integer' name='[SHOT_ATTEMPTED_FLAG]' role='measure' type='quantitative' />
            <column caption='FGM' datatype='integer' name='[SHOT_MADE_FLAG]' role='measure' type='quantitative' />
            <column caption='Shot Zone Area' datatype='string' name='[SHOT_ZONE_AREA]' role='dimension' type='nominal' />
            <column caption='Shot Zone Basic' datatype='string' name='[SHOT_ZONE_BASIC]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1112952094575124486]' derivation='None' name='[none:Calculation_1112952094575124486:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1112952094575284231]' derivation='None' name='[none:Calculation_1112952094575284231:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1112952094579003400]' derivation='None' name='[none:Calculation_1112952094579003400:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1397804771155599367]' derivation='None' name='[none:Calculation_1397804771155599367:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PLAYER_NAME]' derivation='None' name='[none:PLAYER_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[SHOT_MADE_FLAG]' derivation='None' name='[none:SHOT_MADE_FLAG:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]'>
            <groupfilter function='member' level='[none:PLAYER_NAME:nk]' member='&quot;D&apos;Angelo Russell&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094575124486:qk]' field-type='quantitative' max='332.19018901481985' min='-342.90889459664368' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094575284231:qk]' field-type='quantitative' max='536.01474197381424' min='-669.59661864693271' range-type='fixed' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094575124486:qk]' scope='cols' value='false' />
            <format attr='display' class='0' field='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094575284231:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1397804771155599367:qk]' value='p0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094579003400:nk]' />
              <shape column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:SHOT_MADE_FLAG:ok]' />
              <text column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1397804771155599367:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.8570718765258789' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='selection' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='712' />
                <format attr='maxwidth' value='712' />
                <format attr='minheight' value='1269' />
                <format attr='maxheight' value='1269' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094575284231:qk]</rows>
        <cols>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094575124486:qk]</cols>
      </table>
      <simple-id uuid='{4DF6CFA4-10E3-4DEC-B289-F458BC0F1597}' />
    </worksheet>
    <worksheet name='Shots per team'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_shots_stats_master_cleaned' name='federated.1b1haxu0qu83q01ecfupu0ut27li' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Size' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.3'>
              <calculation class='tableau' formula='0.3' />
              <range max='1.0' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1b1haxu0qu83q01ecfupu0ut27li'>
            <column aggregation='Sum' caption='Hexbin X' datatype='real' name='[Calculation_1112952094575124486]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='-HEXBINX([LOC_X] * [Parameters].[Parameter 1], [LOC_Y]* [Parameters].[Parameter 1])/[Parameters].[Parameter 1]' />
            </column>
            <column aggregation='Sum' caption='Hexbin Y' datatype='real' name='[Calculation_1112952094575284231]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='HEXBINY([LOC_X] * [Parameters].[Parameter 1], [LOC_Y] * [Parameters].[Parameter 1])/ [Parameters].[Parameter 1]' />
            </column>
            <column caption='Shot Zone' datatype='string' name='[Calculation_1112952094579003400]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[SHOT_ZONE_BASIC] + &apos; - &apos; + [SHOT_ZONE_AREA]' />
            </column>
            <column caption='FG%' datatype='real' name='[Calculation_1397804771042365441]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([SHOT_MADE_FLAG]) / SUM([SHOT_ATTEMPTED_FLAG])' />
            </column>
            <column caption='FG% by shot zone per team' datatype='real' name='[Calculation_1397804771162169354]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_1112952094579003400], [TEAM_ID]: [Calculation_1397804771042365441] }' />
            </column>
            <column caption='Loc X' datatype='integer' name='[LOC_X]' role='measure' type='quantitative' />
            <column caption='Loc Y' datatype='integer' name='[LOC_Y]' role='measure' type='quantitative' />
            <column caption='FGA' datatype='integer' name='[SHOT_ATTEMPTED_FLAG]' role='measure' type='quantitative' />
            <column caption='FGM' datatype='integer' name='[SHOT_MADE_FLAG]' role='measure' type='quantitative' />
            <column caption='Shot Zone Area' datatype='string' name='[SHOT_ZONE_AREA]' role='dimension' type='nominal' />
            <column caption='Shot Zone Basic' datatype='string' name='[SHOT_ZONE_BASIC]' role='dimension' type='nominal' />
            <column caption='Team Id' datatype='integer' name='[TEAM_ID]' role='dimension' type='ordinal' />
            <column caption='Team Name' datatype='string' name='[TEAM_NAME]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1112952094575124486]' derivation='None' name='[none:Calculation_1112952094575124486:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1112952094575284231]' derivation='None' name='[none:Calculation_1112952094575284231:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1112952094579003400]' derivation='None' name='[none:Calculation_1112952094579003400:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1397804771162169354]' derivation='None' name='[none:Calculation_1397804771162169354:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TEAM_NAME]' derivation='None' name='[none:TEAM_NAME:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:TEAM_NAME:nk]'>
            <groupfilter function='member' level='[none:TEAM_NAME:nk]' member='&quot;Toronto Raptors&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:TEAM_NAME:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094575124486:qk]' field-type='quantitative' max='425.0964671382149' min='-497.51245651141335' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094575284231:qk]' field-type='quantitative' max='449.49694533319291' min='-1155.2235371635886' range-type='fixed' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094575284231:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094575124486:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1397804771162169354:qk]' value='p0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1397804771162169354:qk]' value='p0%' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094579003400:nk]' />
              <size column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1397804771162169354:qk]' />
              <lod column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:TEAM_NAME:nk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='10' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='shape' value=':custom/hex.png' />
                <format attr='size' value='1' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-range-scope' value='table' />
                <format attr='mark-labels-mode' value='selection' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='1223' />
                <format attr='maxwidth' value='1223' />
                <format attr='minheight' value='2123' />
                <format attr='maxheight' value='2123' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094575284231:qk]</rows>
        <cols>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094575124486:qk]</cols>
      </table>
      <simple-id uuid='{5D992102-0639-473B-A131-14B7A6F395CC}' />
    </worksheet>
    <worksheet name='Steph Curry 3point shot chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_shots_stats_master_cleaned' name='federated.1b1haxu0qu83q01ecfupu0ut27li' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Size' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.3'>
              <calculation class='tableau' formula='0.3' />
              <range max='1.0' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1b1haxu0qu83q01ecfupu0ut27li'>
            <column aggregation='Sum' caption='Hexbin X' datatype='real' name='[Calculation_1112952094575124486]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='-HEXBINX([LOC_X] * [Parameters].[Parameter 1], [LOC_Y]* [Parameters].[Parameter 1])/[Parameters].[Parameter 1]' />
            </column>
            <column aggregation='Sum' caption='Hexbin Y' datatype='real' name='[Calculation_1112952094575284231]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='HEXBINY([LOC_X] * [Parameters].[Parameter 1], [LOC_Y] * [Parameters].[Parameter 1])/ [Parameters].[Parameter 1]' />
            </column>
            <column caption='Shot Zone' datatype='string' name='[Calculation_1112952094579003400]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[SHOT_ZONE_BASIC] + &apos; - &apos; + [SHOT_ZONE_AREA]' />
            </column>
            <column caption='FG%' datatype='real' name='[Calculation_1397804771042365441]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([SHOT_MADE_FLAG]) / SUM([SHOT_ATTEMPTED_FLAG])' />
            </column>
            <column caption='Fixed_FG%_LOD' datatype='real' name='[Calculation_1397804771155599367]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_1112952094579003400], [PLAYER_ID]: [Calculation_1397804771042365441] }' />
            </column>
            <column caption='Loc X' datatype='integer' name='[LOC_X]' role='measure' type='quantitative' />
            <column caption='Loc Y' datatype='integer' name='[LOC_Y]' role='measure' type='quantitative' />
            <column caption='Player Id' datatype='integer' name='[PLAYER_ID]' role='dimension' type='ordinal' />
            <column caption='Player Name' datatype='string' name='[PLAYER_NAME]' role='dimension' type='nominal' />
            <column caption='FGA' datatype='integer' name='[SHOT_ATTEMPTED_FLAG]' role='measure' type='quantitative' />
            <column caption='FGM' datatype='integer' name='[SHOT_MADE_FLAG]' role='measure' type='quantitative' />
            <column caption='Shot Zone Area' datatype='string' name='[SHOT_ZONE_AREA]' role='dimension' type='nominal' />
            <column caption='Shot Zone Basic' datatype='string' name='[SHOT_ZONE_BASIC]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1112952094575124486]' derivation='None' name='[none:Calculation_1112952094575124486:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1112952094575284231]' derivation='None' name='[none:Calculation_1112952094575284231:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1112952094579003400]' derivation='None' name='[none:Calculation_1112952094579003400:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1397804771155599367]' derivation='None' name='[none:Calculation_1397804771155599367:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PLAYER_NAME]' derivation='None' name='[none:PLAYER_NAME:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094579003400:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_1112952094579003400:nk]' member='&quot;Above the Break 3 - Center(C)&quot;' />
              <groupfilter function='member' level='[none:Calculation_1112952094579003400:nk]' member='&quot;Above the Break 3 - Left Side Center(LC)&quot;' />
              <groupfilter function='member' level='[none:Calculation_1112952094579003400:nk]' member='&quot;Above the Break 3 - Right Side Center(RC)&quot;' />
              <groupfilter function='member' level='[none:Calculation_1112952094579003400:nk]' member='&quot;Left Corner 3 - Left Side(L)&quot;' />
              <groupfilter function='member' level='[none:Calculation_1112952094579003400:nk]' member='&quot;Right Corner 3 - Right Side(R)&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]'>
            <groupfilter function='member' level='[none:PLAYER_NAME:nk]' member='&quot;Stephen Curry&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]</column>
            <column>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094579003400:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094575124486:qk]' field-type='quantitative' max='310.14815549259168' min='-350.98499529230486' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094575284231:qk]' field-type='quantitative' max='473.45513033402096' min='-95.512509268783333' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1397804771155599367:qk]' field-type='quantitative' max-size='1' min-size='0' type='rangesize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094579003400:nk]' />
              <size column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1397804771155599367:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':custom/hex.png' />
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094575284231:qk]</rows>
        <cols>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094575124486:qk]</cols>
      </table>
      <simple-id uuid='{F91CCFDE-8396-4CC3-8E3E-1A49C7E5707F}' />
    </worksheet>
    <worksheet name='Top 10 Assists Leaders'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_shots_stats_master_cleaned' name='federated.1b1haxu0qu83q01ecfupu0ut27li' />
          </datasources>
          <datasource-dependencies datasource='federated.1b1haxu0qu83q01ecfupu0ut27li'>
            <column datatype='integer' name='[AST]' role='measure' type='quantitative' />
            <column caption='Assists per Game' datatype='real' name='[Calculation_1397804771232346128]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX([AST])/ MAX([G])' />
            </column>
            <column datatype='integer' name='[G]' role='measure' type='quantitative' />
            <column caption='Player Name' datatype='string' name='[PLAYER_NAME]' role='dimension' type='nominal' />
            <column caption='Team Name' datatype='string' name='[TEAM_NAME]' role='dimension' type='nominal' />
            <column-instance column='[G]' derivation='Attribute' name='[attr:G:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PLAYER_NAME]' derivation='None' name='[none:PLAYER_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[TEAM_NAME]' derivation='None' name='[none:TEAM_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1397804771232346128]' derivation='User' name='[usr:Calculation_1397804771232346128:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:G:qk]' included-values='in-range'>
            <min>50</min>
            <max>81</max>
          </filter>
          <filter class='categorical' column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]'>
            <groupfilter count='14' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='[Calculation_1397804771232346128]' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:PLAYER_NAME:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]' direction='DESC' using='[federated.1b1haxu0qu83q01ecfupu0ut27li].[usr:Calculation_1397804771232346128:qk]' />
          <slices>
            <column>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]</column>
            <column>[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:G:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1b1haxu0qu83q01ecfupu0ut27li].[usr:Calculation_1397804771232346128:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:TEAM_NAME:nk]' />
              <text column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[usr:Calculation_1397804771232346128:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]</rows>
        <cols>[federated.1b1haxu0qu83q01ecfupu0ut27li].[usr:Calculation_1397804771232346128:qk]</cols>
      </table>
      <simple-id uuid='{26297391-EC2B-47D4-8BC5-C209FD60354F}' />
    </worksheet>
    <worksheet name='Top 10 Blocks Leaders'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_shots_stats_master_cleaned' name='federated.1b1haxu0qu83q01ecfupu0ut27li' />
          </datasources>
          <datasource-dependencies datasource='federated.1b1haxu0qu83q01ecfupu0ut27li'>
            <column datatype='integer' name='[BLK]' role='measure' type='quantitative' />
            <column caption='Blocks Per Game' datatype='real' name='[Calculation_1397804771236954129]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX([BLK])/ MAX([G])' />
            </column>
            <column datatype='integer' name='[G]' role='measure' type='quantitative' />
            <column caption='Player Name' datatype='string' name='[PLAYER_NAME]' role='dimension' type='nominal' />
            <column caption='Team Name' datatype='string' name='[TEAM_NAME]' role='dimension' type='nominal' />
            <column-instance column='[PLAYER_NAME]' derivation='None' name='[none:PLAYER_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[TEAM_NAME]' derivation='None' name='[none:TEAM_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1397804771236954129]' derivation='User' name='[usr:Calculation_1397804771236954129:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='[Calculation_1397804771236954129]' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:PLAYER_NAME:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]' direction='DESC' using='[federated.1b1haxu0qu83q01ecfupu0ut27li].[usr:Calculation_1397804771236954129:qk]' />
          <slices>
            <column>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1b1haxu0qu83q01ecfupu0ut27li].[usr:Calculation_1397804771236954129:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:TEAM_NAME:nk]' />
              <text column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[usr:Calculation_1397804771236954129:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]</rows>
        <cols>[federated.1b1haxu0qu83q01ecfupu0ut27li].[usr:Calculation_1397804771236954129:qk]</cols>
      </table>
      <simple-id uuid='{093CC8CB-8718-4634-A49E-F8997BB90751}' />
    </worksheet>
    <worksheet name='Top 10 Points Leaders'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_shots_stats_master_cleaned' name='federated.1b1haxu0qu83q01ecfupu0ut27li' />
          </datasources>
          <datasource-dependencies datasource='federated.1b1haxu0qu83q01ecfupu0ut27li'>
            <column caption='Points per Game' datatype='real' name='[Calculation_1397804771238596626]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX([PTS])/MAX([G])' />
            </column>
            <column datatype='integer' name='[G]' role='measure' type='quantitative' />
            <column caption='Player Name' datatype='string' name='[PLAYER_NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[PTS]' role='measure' type='quantitative' />
            <column caption='Team Name' datatype='string' name='[TEAM_NAME]' role='dimension' type='nominal' />
            <column-instance column='[PLAYER_NAME]' derivation='None' name='[none:PLAYER_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[TEAM_NAME]' derivation='None' name='[none:TEAM_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1397804771238596626]' derivation='User' name='[usr:Calculation_1397804771238596626:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='[Calculation_1397804771238596626]' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:PLAYER_NAME:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]' direction='DESC' using='[federated.1b1haxu0qu83q01ecfupu0ut27li].[usr:Calculation_1397804771238596626:qk]' />
          <slices>
            <column>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1b1haxu0qu83q01ecfupu0ut27li].[usr:Calculation_1397804771238596626:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:TEAM_NAME:nk]' />
              <lod column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[usr:Calculation_1397804771238596626:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]</rows>
        <cols>[federated.1b1haxu0qu83q01ecfupu0ut27li].[usr:Calculation_1397804771238596626:qk]</cols>
      </table>
      <simple-id uuid='{9AFB7986-672A-4B61-9809-E68E548E92BE}' />
    </worksheet>
    <worksheet name='Top 10 Rebounders'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_shots_stats_master_cleaned' name='federated.1b1haxu0qu83q01ecfupu0ut27li' />
          </datasources>
          <datasource-dependencies datasource='federated.1b1haxu0qu83q01ecfupu0ut27li'>
            <column caption='Rebounds Per Game' datatype='real' name='[Calculation_1112952094544662528]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX([TRB])/MAX([G])' />
            </column>
            <column datatype='integer' name='[G]' role='measure' type='quantitative' />
            <column caption='Player Name' datatype='string' name='[PLAYER_NAME]' role='dimension' type='nominal' />
            <column caption='Team Name' datatype='string' name='[TEAM_NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[TRB]' role='measure' type='quantitative' />
            <column-instance column='[PLAYER_NAME]' derivation='None' name='[none:PLAYER_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[TEAM_NAME]' derivation='None' name='[none:TEAM_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1112952094544662528]' derivation='User' name='[usr:Calculation_1112952094544662528:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='[Calculation_1112952094544662528]' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:PLAYER_NAME:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]' direction='DESC' using='[federated.1b1haxu0qu83q01ecfupu0ut27li].[usr:Calculation_1112952094544662528:qk]' />
          <slices>
            <column>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1b1haxu0qu83q01ecfupu0ut27li].[usr:Calculation_1112952094544662528:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='width' value='544' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:TEAM_NAME:nk]' />
              <size column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[usr:Calculation_1112952094544662528:qk]' />
              <text column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]' />
              <text column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[usr:Calculation_1112952094544662528:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{7B377BAD-FB63-4A69-8511-DC573C9BD5D0}' />
    </worksheet>
    <worksheet name='Top Steals per game'>
      <table>
        <view>
          <datasources>
            <datasource caption='nba_shots_stats_master_cleaned' name='federated.1b1haxu0qu83q01ecfupu0ut27li' />
          </datasources>
          <datasource-dependencies datasource='federated.1b1haxu0qu83q01ecfupu0ut27li'>
            <column caption='Steals per game' datatype='real' name='[Calculation_1397804771228319759]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX([STL])/ MAX([G])' />
            </column>
            <column datatype='integer' name='[G]' role='measure' type='quantitative' />
            <column caption='Player Name' datatype='string' name='[PLAYER_NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[STL]' role='measure' type='quantitative' />
            <column caption='Team Name' datatype='string' name='[TEAM_NAME]' role='dimension' type='nominal' />
            <column-instance column='[G]' derivation='Attribute' name='[attr:G:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PLAYER_NAME]' derivation='None' name='[none:PLAYER_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[TEAM_NAME]' derivation='None' name='[none:TEAM_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1397804771228319759]' derivation='User' name='[usr:Calculation_1397804771228319759:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:G:qk]' included-values='in-range'>
            <min>10</min>
          </filter>
          <filter class='categorical' column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]'>
            <groupfilter count='13' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='[Calculation_1397804771228319759]' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:PLAYER_NAME:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]' direction='DESC' using='[federated.1b1haxu0qu83q01ecfupu0ut27li].[usr:Calculation_1397804771228319759:qk]' />
          <computed-sort column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:TEAM_NAME:nk]' direction='DESC' using='[federated.1b1haxu0qu83q01ecfupu0ut27li].[usr:Calculation_1397804771228319759:qk]' />
          <slices>
            <column>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]</column>
            <column>[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:G:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1b1haxu0qu83q01ecfupu0ut27li].[usr:Calculation_1397804771228319759:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='width' field='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]' value='33' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1b1haxu0qu83q01ecfupu0ut27li].[usr:Calculation_1397804771228319759:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dotted' />
            <format attr='text-format' id='refline0' value='n#,##0.0;-#,##0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:TEAM_NAME:nk]' />
              <text column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[usr:Calculation_1397804771228319759:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[usr:Calculation_1397804771228319759:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[usr:Calculation_1397804771228319759:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1b1haxu0qu83q01ecfupu0ut27li].[usr:Calculation_1397804771228319759:qk]</rows>
        <cols>([federated.1b1haxu0qu83q01ecfupu0ut27li].[none:TEAM_NAME:nk] / [federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk])</cols>
      </table>
      <simple-id uuid='{ADF97A1F-D2A1-40BD-979A-CBFDA5806B60}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <datasources>
        <datasource caption='nba_shots_stats_master_cleaned' name='federated.1b1haxu0qu83q01ecfupu0ut27li' />
      </datasources>
      <datasource-dependencies datasource='federated.1b1haxu0qu83q01ecfupu0ut27li'>
        <column datatype='integer' name='[3PA]' role='measure' type='quantitative' />
        <column caption='Year_end_FGA' datatype='integer' name='[FGA]' role='measure' type='quantitative' />
        <column datatype='integer' name='[PTS]' role='measure' type='quantitative' />
        <column-instance column='[3PA]' derivation='Attribute' name='[attr:3PA:qk]' pivot='key' type='quantitative' />
        <column-instance column='[FGA]' derivation='Attribute' name='[attr:FGA:qk]' pivot='key' type='quantitative' />
        <column-instance column='[PTS]' derivation='Attribute' name='[attr:PTS:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='53646' id='3' name='FGA Vs FG% Per Player' w='83821' x='659' y='1432' />
        <zone h='8073' id='4' name='FGA Vs FG% Per Player' param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:FGA:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='16032' x='84041' y='2083' />
        <zone h='15885' id='5' name='FGA Vs FG% Per Player' pane-specification-id='0' param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:FG%:qk]' type-v2='size' w='13982' x='84700' y='27083' />
        <zone h='10938' id='6' name='FGA Vs FG% Per Player' pane-specification-id='0' param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:FG%:qk]' type-v2='color' w='13982' x='84993' y='14063' />
        <zone h='42057' id='7' name='Best 3P shooters by %' w='35505' x='0' y='51302' />
        <zone h='8464' id='8' name='Best 3P shooters by %' param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:3PA:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='11713' x='35286' y='58854' />
        <zone h='11458' id='9' name='Best 3P shooters by %' pane-specification-id='2' param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:3P%:qk]' type-v2='color' w='10249' x='36164' y='69661' />
        <zone h='44401' id='10' name='Points Distribution Per Player' w='40264' x='46925' y='54688' />
        <zone h='8464' id='11' name='Points Distribution Per Player' param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:PTS:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='11713' x='88067' y='57682' />
        <zone h='11068' id='12' name='Points Distribution Per Player' pane-specification-id='3' param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[:Measure Names]' type-v2='color' w='10249' x='88726' y='75130' />
        <zone forceUpdate='true' h='5469' id='17' type-v2='text' w='59224' x='220' y='94401'>
          <formatted-text>
            <run>Data Sources : </run>
            <run auto-url='true' hyperlink='tabdoc:load-url url=&amp;quot;https://www.basketball-reference.com/leagues/NBA_2019_totals.html&amp;quot;'>https://www.basketball-reference.com/leagues/NBA_2019_totals.html</run>
            <run>Æ&#10;</run>
            <run auto-url='true' hyperlink='tabdoc:load-url url=&amp;quot;https://datavizardry.com/2020/01/28/nba-shot-charts-part-1/&amp;quot;'>https://datavizardry.com/2020/01/28/nba-shot-charts-part-1/</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1450' minheight='1450' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='31' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='30' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
                <zone h='8073' id='4' name='FGA Vs FG% Per Player' param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:FGA:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='16032' x='84041' y='2083'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='53646' id='3' is-fixed='true' name='FGA Vs FG% Per Player' w='83821' x='659' y='1432'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15885' id='5' name='FGA Vs FG% Per Player' pane-specification-id='0' param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:FG%:qk]' type-v2='size' w='13982' x='84700' y='27083'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10938' id='6' name='FGA Vs FG% Per Player' pane-specification-id='0' param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:FG%:qk]' type-v2='color' w='13982' x='84993' y='14063'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8464' id='8' name='Best 3P shooters by %' param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:3PA:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='11713' x='35286' y='58854'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42057' id='7' is-fixed='true' name='Best 3P shooters by %' w='35505' x='0' y='51302'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11458' id='9' name='Best 3P shooters by %' pane-specification-id='2' param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:3P%:qk]' type-v2='color' w='10249' x='36164' y='69661'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8464' id='11' name='Points Distribution Per Player' param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:PTS:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='11713' x='88067' y='57682'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44401' id='10' is-fixed='true' name='Points Distribution Per Player' w='40264' x='46925' y='54688'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11068' id='12' name='Points Distribution Per Player' pane-specification-id='3' param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[:Measure Names]' type-v2='color' w='10249' x='88726' y='75130'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='5469' id='17' type-v2='text' w='59224' x='220' y='94401'>
                  <formatted-text>
                    <run>Data Sources : </run>
                    <run auto-url='true' hyperlink='tabdoc:load-url url=&amp;quot;https://www.basketball-reference.com/leagues/NBA_2019_totals.html&amp;quot;'>https://www.basketball-reference.com/leagues/NBA_2019_totals.html</run>
                    <run>Æ&#10;</run>
                    <run auto-url='true' hyperlink='tabdoc:load-url url=&amp;quot;https://datavizardry.com/2020/01/28/nba-shot-charts-part-1/&amp;quot;'>https://datavizardry.com/2020/01/28/nba-shot-charts-part-1/</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{0CC6A626-17EB-4930-B4A1-AB93635AFE0B}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='10' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='13' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
            <zone h='97916' id='11' type-v2='layout-basic' w='98828' x='586' y='1042' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='49219' id='3' name='Top 10 Rebounders' w='63470' x='220' y='50130' />
        <zone h='47396' id='4' name='Top Steals per game' w='33309' x='34919' y='50260' />
        <zone h='46484' id='6' name='Top 10 Assists Leaders' w='33309' x='66911' y='52083' />
        <zone h='45000' id='7' name='Top 10 Points Leaders' w='33300' x='300' y='5375' />
        <zone h='47135' id='8' name='Top 10 Blocks Leaders' w='30527' x='69253' y='4036' />
        <zone forceUpdate='true' h='3750' id='9' type-v2='text' w='50000' x='3200' y='2000'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontsize='14'>Stats Leaders for 2018-2019 Season</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </zone>
        <zone h='49740' id='14' name='Best 3P shooters by %' w='34773' x='33455' y='1432' />
        <zone h='11458' id='16' name='Best 3P shooters by %' pane-specification-id='2' param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:3P%:qk]' type-v2='color' w='10249' x='56955' y='1302' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1900' minheight='1900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='30' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='29' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
                <zone fixed-size='280' h='49740' id='14' is-fixed='true' name='Best 3P shooters by %' w='34773' x='33455' y='1432'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11458' id='16' name='Best 3P shooters by %' pane-specification-id='2' param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:3P%:qk]' type-v2='color' w='10249' x='56955' y='1302'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='3750' id='9' type-v2='text' w='50000' x='3200' y='2000'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontsize='14'>Stats Leaders for 2018-2019 Season</run>
                    <run>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47135' id='8' is-fixed='true' name='Top 10 Blocks Leaders' w='30527' x='69253' y='4036'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45000' id='7' is-fixed='true' name='Top 10 Points Leaders' w='33300' x='300' y='5375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49219' id='3' is-fixed='true' name='Top 10 Rebounders' w='63470' x='220' y='50130'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47396' id='4' is-fixed='true' name='Top Steals per game' w='33309' x='34919' y='50260'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46484' id='6' is-fixed='true' name='Top 10 Assists Leaders' w='33309' x='66911' y='52083'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{73196F32-8D72-4612-A03E-131AF913E6D3}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>2018-2019 NBA Season</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='1' param='vert' removable='false' type-v2='layout-flow' w='98828' x='586' y='1042'>
            <zone h='5469' id='3' type-v2='title' w='98828' x='586' y='1042' />
            <zone h='13151' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98828' x='586' y='6511' />
            <zone h='79296' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98828' x='586' y='19662'>
              <flipboard active-id='2' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Shots per player for the year' captured-sheet='Shot chart per player and game' id='1'>
                    <capturedDeltas>
                      <worksheet name='Shot chart per player and game'>
                        <filter class='categorical' column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]'>
                          <groupfilter function='member' level='[none:PLAYER_NAME:nk]' member='&quot;Blake Griffin&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094575284231:qk]' field-type='quantitative' max='576.26092905555879' min='-832.018730798261' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094575124486:qk]' field-type='quantitative' max='344.46335877216325' min='-444.12269714096732' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Shot per team for the year' captured-sheet='Shots per team' id='2'>
                    <currentDeltas>
                      <worksheet name='Shots per team'>
                        <filter class='categorical' column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:TEAM_NAME:nk]'>
                          <groupfilter function='member' level='[none:TEAM_NAME:nk]' member='&quot;LA Clippers&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094575284231:qk]' field-type='quantitative' max='604.01506418813915' min='-2468.9701058233604' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094575124486:qk]' field-type='quantitative' max='952.22259814566996' min='-810.39091810088121' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </currentDeltas>
                    <capturedDeltas>
                      <worksheet name='Shots per team'>
                        <filter class='categorical' column='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:TEAM_NAME:nk]'>
                          <groupfilter function='member' level='[none:TEAM_NAME:nk]' member='&quot;Denver Nuggets&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094575284231:qk]' field-type='quantitative' max='604.01506418813915' min='-2468.9701058233604' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094575124486:qk]' field-type='quantitative' max='952.22259814566996' min='-810.39091810088121' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Regular Season Stat Leaders' captured-sheet='Dashboard 2' id='3' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{F5874FD0-8052-464A-A670-1E43D684B615}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Best 3P shooters by %' />
        <viewpoint name='FGA Vs FG% Per Player'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Points Distribution Per Player'>
          <highlight field='[federated.1b1haxu0qu83q01ecfupu0ut27li].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{44C8C028-FF58-4D87-8984-D54FBE74DAD5}' />
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='6' />
      <simple-id uuid='{314EF932-DA41-438A-8BAC-CCBB49F36DCA}' />
    </window>
    <window class='worksheet' name='FGA Vs FG% Per Player'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:FGA:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:FG%:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:FG%:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:FG%:qk]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Player:nk]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:SHOT_TYPE:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CE17EF2B-D99C-4CDC-BBA1-E855FF677D1D}' />
    </window>
    <window class='worksheet' name='Rebounds Per Player'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Pos:nk]' type='filter' />
            <card param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[usr:Calculation_1112952094558171137:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[rank:usr:Calculation_1112952094558171137:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='4' param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[:Measure Names]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[max:ORB:qk]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Age (bin):ok]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:ORB:qk]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Player:nk]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Pos:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2348C42D-FC0F-49D6-90AD-3EE212560177}' />
    </window>
    <window class='worksheet' name='Points Distribution Per Player'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:PTS:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='3' param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[:Measure Names]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A593B17E-556B-4D02-B931-EF4313D9BECF}' />
    </window>
    <window class='worksheet' name='Shot chart per player and game'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094579003400:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:SHOT_MADE_FLAG:ok]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:SHOT_MADE_FLAG:ok]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094575124486:ok]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094575284231:ok]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094579003400:nk]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1397804771155599367:qk]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:GAME_ID:ok]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Player:nk]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:SHOT_TYPE:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B7458B77-24F9-42ED-841F-28797A64A45A}' />
    </window>
    <window class='worksheet' name='Shots per team'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:TEAM_NAME:nk]' type='filter' />
            <card pane-specification-id='3' param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094579003400:nk]' type='color' />
            <card pane-specification-id='3' param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1397804771162169354:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094544662528:qk]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094575124486:ok]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094575284231:ok]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094579003400:nk]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:HTM:nk]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:SHOT_MADE_FLAG:qk]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:SHOT_TYPE:nk]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:SHOT_ZONE_AREA:nk]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:SHOT_ZONE_RANGE:nk]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:TEAM_NAME:nk]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:VTM:nk]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:eFG%:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DBD1E219-BE4B-4C3A-A8C8-03319FA83077}' />
    </window>
    <window class='worksheet' name='Best 3P shooters by %'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:3PA:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='2' param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:3P%:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:3P%:qk]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:PLAYER_NAME:nk]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:TEAM_NAME:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E5637183-4C6E-4F9C-9DC1-A80849406EBC}' />
    </window>
    <window class='worksheet' name='50 40 90 club'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:FG%:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:3P%:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[attr:FT%:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[usr:Calculation_1397804771042365441:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:3P%:qk]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:FT%:qk]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Pos:nk]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[usr:Calculation_1397804771042365441:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6379874A-FA42-40AB-B039-0AF0827FB6B9}' />
    </window>
    <window class='worksheet' name='Blocks and Steals relationship'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Pos:nk]' type='filter' />
            <card mode='dropdown' param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Pos:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C32587C2-54FE-45F3-9B74-3E24B857FD00}' />
    </window>
    <window class='worksheet' name='Sheet 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:SHOT_MADE_FLAG:ok]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094575124486:ok]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094575284231:ok]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DE4D9211-B741-40F3-8AC0-4A27C023C5DE}' />
    </window>
    <window class='worksheet' name='Top 10 Rebounders'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:TEAM_NAME:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[:Measure Names]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:TEAM_NAME:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4C7E0BC6-9C33-46BC-9C0D-00DFFC891B82}' />
    </window>
    <window class='worksheet' name='Top Steals per game'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:TEAM_NAME:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:TEAM_NAME:nk]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[usr:Calculation_1397804771228319759:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{08FA44BD-8583-41F0-BEA1-00E76E39914B}' />
    </window>
    <window class='worksheet' name='Top 10 Assists Leaders'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:TEAM_NAME:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5A905071-8362-4E5A-9DD1-E0E11C0DBEC1}' />
    </window>
    <window class='worksheet' name='Top 10 Blocks Leaders'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:TEAM_NAME:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:TEAM_NAME:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8D88291F-E3E5-40B8-9AD3-6C4F807EA85F}' />
    </window>
    <window class='worksheet' name='Top 10 Points Leaders'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:TEAM_NAME:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:TEAM_NAME:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ACB84935-6C72-4A8A-B0DB-E4C362556EBE}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Best 3P shooters by %' />
        <viewpoint name='Top 10 Assists Leaders' />
        <viewpoint name='Top 10 Blocks Leaders' />
        <viewpoint name='Top 10 Points Leaders' />
        <viewpoint name='Top 10 Rebounders' />
        <viewpoint name='Top Steals per game'>
          <highlight field='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:TEAM_NAME:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{235AB20E-1288-4C39-A5DC-0EE27AC0786D}' />
    </window>
    <window class='worksheet' name='Steph Curry 3point shot chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094579003400:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1397804771155599367:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:2P%:qk]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094575124486:ok]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094575284231:ok]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094579003400:nk]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1397804771031994368:qk]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1397804771259252755:qk]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:PLAYER_NAME:nk]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:eFG%:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{987FA742-A332-42FE-8172-68703A8EF65D}' />
    </window>
    <window class='worksheet' name='Sheet 16'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:TEAM_NAME:nk]' type='filter' />
            <card mode='dropdown' param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Pos:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094579003400:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1397804771274670101:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094575124486:ok]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094575284231:ok]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Calculation_1112952094579003400:nk]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Pos:nk]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:TEAM_NAME:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E728EA7F-514A-4F33-B47B-99B270A493F4}' />
    </window>
    <window class='worksheet' name='Sheet 17'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Pos:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Pos:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:3P%:qk]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:Pos:nk]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[none:TEAM_NAME:nk]</field>
            <field>[federated.1b1haxu0qu83q01ecfupu0ut27li].[usr:Calculation_1397804771042365441:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{12C78CDC-06DB-485E-8706-74620567C020}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='87' name='50 40 90 club' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Best 3P shooters by %' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Blocks and Steals relationship' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      70cIQW5uLoqioGkaVquVaDSKrutcunSJlpYWDAYDBoMhY9KtaRpzc3O43W76+vrYunUrfX19
      VFVVMTIyQnl5OSaTicXFRQYGBmhtbaWzszPjl3EVVwfcs2fP4nA42LZtG+3t7bS2tt7Q2Vdt
      DXq+/RgXLo+iygpPfuRjOIyAEIwM9TMf1SjwZOH1+iir38KCb+ZKWBQbFaWFq5oBRkdH+d73
      vsfjjz+e8UAyGAzk5OTQ29tLQUEB1dXVTExM4HA4EEIwOjrK9u3bOXToELt37+bkyZOEw2Ga
      m5uJx+O0traiquo9MWq+m2i8222BlhUAIXR+8oPvI1IaD3zwE2TffMBbgtUIwPz8PKlUipmZ
      GRKJBKlUCqPRSCAQoLq6GkmScLvdLCwsYDQaOXnyJLW1tQwODlJSUkJ3dzcPPvggPT09FBQU
      ZEaIgoKCe6LTvJtovEcFQHDirQN4Qwn2P/XzZK0hf/RG+wPEYjFkWV42qfW90mneTTTe7QKw
      goIoCC3GqKyoQL2LbvO6rjM6OooQgsHBQSB9wHN95/f5fEv+7u3tpb29/QZTByHEis7hwWCQ
      YDDI4uIiyWRyHWvx7sDVHAiQdqBfWFjA7/ffUO5qtOypqall6cRiMUKhENFodEP5XS1WECmJ
      LIOO0eJEu4u7fZqm8eKLL/Lxj3+cl19+maeeeirj+O3z+cjLy8t8lL6+PjRNY9++fYRCISRJ
      4tKlS0xMTNDa2kpXVxd5eXmZhZeu65k4P2VlZXR2dgLpmEalpaXk5OTctXrfi+jq6iInJ4ey
      sjLGxsaIxWJ4PB4WFhYQQjA7O4vH46GiIh0ftru7O7PRUVBQwNTUFDU1NRw5coTKysqMY39T
      UxP5+fnvSB0WFxcRQjA3N5fx515xBpiZ6OfNw4eJ3Vk80jtGVVUVBw4coK6uDp/Px8WLF+nv
      78/sGkxPTzM8PIyiKJnpbXJyEr/fj9/vJxKJ8MYbb1BbW4vX60XTNNrb2wkEAoyNjTE5ObmZ
      oWUVkCSJiYkJwuEwMzMzaJrG6Ogoo6OjDA8Po+s6i4vpyB6nTp0imUzi8/m4dOkSMzMzWK1W
      BgcHue+++wDo6ekhEokwNzf3jtVhYWGB5557DqfTycGDBzl16tTyM4AkyXzk079LShOMjV7G
      U33rA4WNgCzLbN26lZmZmcwZQVlZGbW1taiqSmFhIYWFhQSDQVRVzWwJFhcXZ7K2RCIR6uvr
      6ejoAKClpQW73Z7ZMboaCe5qZDej0XiDk8l7HVfNJJqbm+nq6qKmpgaz2UwqlWJwcBCz2Yyi
      KBiNRmRZ5plnniESiZBMJikpKaGkpASj0UgymaS3t5empibKysro6upaMdreRkCSpEyc2gsX
      LrBv3761HIStDveiU7ymaZw5c4atW7cu6dxDQ0NUVFQsmQHu1uJzfn6eY8eOZU4wb0YjlUpx
      8eJFVFWloaEhc723t3fJ3+tRF13X7ziiw72yCI5EIsiyzOLiIrOzs7jd7pV3gebm5sjNzWVm
      Zpr8/NXbjt+LArAW3C7/d8pHOBzm4MGD1NfX8/zzz5Obm4vNZqO6uhqv10sqleLcuXM0Njby
      9NNPc+rUKcbGxjCZTLhcLo4dO0ZbW1smsNdzzz3HH//xHy+Jb3Q7uNo93g0CsKbQiD/87rf4
      8YsvYnO/3fnHhgcYGBkn5Pdy8VI/oaCPobFJggE/+r2RUPyOccPJqRCga+n/3w7W8HxWVhYD
      AwNUV1ezd+9eampqMo4rmqbR2NjIjh07MuUlScqcrhYVFWUMyUZGRqivrycej98ez9fgaujH
      ewmhUIiFhYUbUtZe3eG7enB6PXRdvyE17YoiVVddzlREu8ZGWxCan8fkyGE2EKIqz8yp/hkK
      nDJDM5MUlkNetuvezRCjp5BCkwiLG0w3MasWOrKsIEg3pHb8q2hdL2B47A8x1O1HJp0tRrtJ
      x7iWD+3oV9C6f4z6xJ8gVe5LF4gvoL31JSRnEfKuZ0GSMJvNPPzww0toXJ2ujUYj1dXVS4y7
      9uzZw549e26/PVaJG75nJIB2+EtIuXXIOz5xezRuk4+rdenu7sbv97N161YuXbpEQ0MDk5OT
      hMNhHn74YZLJJD/84Q/5zGc+w4kTJ3C73Rw9epTHH3+cU6dOsXv3bubn57FYLCsJgMCoCsL+
      IFENbCogoLSyhpHRUUwGw4aGRdEDYySPfBm5fC9qy4dvi8b1SJ77MfFX/jtK9YOYfuGLSNKN
      k58emiH23X+HlJWH+ZkvgqKSnDiLCM/C9AUoaiby3X+PbM/H9AtfQDIs7zB9lQ+h6yTHzyIW
      ZhHT3ai1j6TvD54l1fUCGG1YW55Gyrpxy/UqDafTyZNPPrnqNlhte6wW16svyeGjpC78GCwu
      rK0fRTLe2kx9vVUgr9eLqqoEg0EmJiaQJIkdO3bQ1dVFT08Pfr+fwsJCOjo6cLnSsapaWloo
      Ly8nlUoRDAYzZ0LL7wIh4cop46mmKlymzEW0eIT8whKy7aYNDYuSuvgqqZ6Xkaa6MTR/AElZ
      Qy6/VBy0FJLRylpdjERgFOEfRoS9iOg8sj0P02N/iDbRiVL7CMI7gPAPoy3OIWIhpKxcEALd
      exkRCaCU717yTkmWMT3xR2iTXRjq9meuK2U7MbQ8jeQsAuv6Ofa/E1CqH8Sw5YPIefWg3tk3
      F7EFtNHTKKU70Ca7kN3lyO6yW363trb0pszs7Cz5+flUVVXhcDioqKigoqKCoaEhHn74YYaH
      hzGZTAghmJ+fZ3p6mvz8fLKzsxkfH8dut69sC/TSt/8WxdPEtoceo3AN9bzdReS1z+mBMZKH
      /xa5cCuGHb+IpKzOYyiVjJP83m+hT3VjefY55OyKzD2hJRHBCSSrGz04RqrnZdRdn0J2FFxT
      JkWy5xVkqxOlat+NPqxaktSZf0YPTmDc/3tIqgWRjBL9+48iwrOYP/UtlILGd3xBL7QkyWP/
      H3J2NYbGp3j5lVewWq00NTVltiOdTmdmG/nb3/42FouF3Nxcdu/ezeDgIA0NDbzxxhsUFRUR
      DofZsWMHnZ2dbNu2je7ubhobGzNbxmuBSMWJv/VlDBW7MVQtjTqdeOOLJE9+HTm/EX3mInJ+
      A+ZPf3vZmSKVSmFQFEQqBoBkMK95gFu1T/DlS700732KYIQ1df6rEELg8/nWdJp6baVldymG
      bb9A7LnfQBvvQHIWYah6AKVi73IvI9X7Grr3MvLuZ1emr6hIVwQi+eqfo116HcnswPjAb15T
      xoDc+L4VO56kqGjTF9F6X0XOrkDd+ctgMKNUP4juG0J2351gVPpEJ8ljX0Wy56PUPZrmVZLo
      7e2ltLSU8fFxhoeHl3hjXa3jgQMHCIfDTExMsHXrVi5evEgsFuPw4cM0NzfzL//yL5jNZhYW
      Fm6wr18NtKHjaKe/iRQL3iAASvlutKGjGLZ/jFTnv6JU77spLZGMEv3qRwCw/PoP0rP8HWLZ
      L11WUsA3/vE5yisrqamrW5MxHEA8Hqejo4N9+/aRTCaJx+MEAgFcLhfz8/M4nc4l3jsej4dw
      OIzT6bwhXIc21g59B9EnurAsIwBCS5J44wuI0BSG4h2Yf/HLb6tAK0Dd8yySPR/D1g+nBeji
      y+i+YdT7fx1I29knDv4l+mwf5o9+AcmUhTZ6Bsx2lKr7Ef5h5OK0u6gkSZie/JO1NdA6Qy5u
      Rb3/15Gzq5AUIw6Hg1Qqhcfjobi4mGAwSDQaZXBwkPr6erKysjJeYy6Xi2AwSE5ODl1dXRQV
      FTE9PY3H46Gjo4Nt27YxMTFx2/nYlMr7UHZ9GqVi97L3LJXpk2F120dXSVEA63dyv6wKdO70
      MQpqtpLvXrsTuqZpXLp0ifn5eXJzcwmHw6iqyuzsLCUlJSQSCXJycpiYmGBhYYHt27fT399P
      MBikrKwsY6MhhIB4GLQkiZNfX90MsOf/wGBafZQ6kYyi9b9J/LW/gFgI8ye/hihsQREpol97
      BjE/hflT30QymIh+4xNIVs+qRp575UzjnbIGFYt+Ys//J5TyPagP/vsbyq7bIlhREMkYSG+r
      QKmBwyTf+huMD/8nlKqbJ/ZYtQq0bdf9t80opLNDNjY2Mjc3hyzLmVzBWVlZGSyofAYAACAA
      SURBVD3y6tbepUuXMBgM5OfnY7NZQeggXWksc1oATft/P0Nbm7pAqusHqPf/BrI9DyQJQ+NT
      0PjUDVt+Qkuiz/QiAqModY8hqWZ072WS7c+h7v0M2uBREgc+i1y4FaXyPuSirWgCJIMJ89N/
      jYj4UAqaEckocmkbsqsY1JX1YBELIRIRsL67DelEIkLirf+FUrEHQ/VD6N4+9MkLkIyi7vt3
      IK1xDSgEiVPfRJIUDLt+ZWVBkSQk49IBThs5iT7bhzZy6qYCIIRAP/8DEuFZ1H3/NrMLuO4h
      0JLJJLm5ucRiMWw2Gzk5OcRiMSorK7FYLBkf3+bmZiKRCD6fj8bGRpLJJFrvq0SPH4H9f4Qw
      poUlHo8jhMj8jp/5Pkr3CyQLtiPXPrqkjKqqxGIxdF3HbDaz2P594q99FpNBRv6wBal8L0r/
      EcLt30d112Krf5BU44dQdnwcU1ED8USCZDKJzWYj4ShFzyrGLAQJXUZ86K8xGCSiY+fBVYbJ
      5iCZTKLrOiaTiWQyQfT5P8IwfQ7pl/85vYNkMpFKpTLxPW/6OxFDOv4VNEcJcstHUYIjxCe6
      kOqfxGRzLPvs1bROK/1OJBIZ98Or16/up6/297V1vHrdEBwmcvo58E1gL78fvWg7+gc+h5pb
      STKlkUrFUVUVIQSpVCrjdppKpZCunHlcNYe2WCxEw/NEj/8TFqOBZNOHQTakr19bJhpFUZQb
      rqe2fIzERB/mmkeIRCJLyl/9HYvFELoG7f9CxDeBpekjWD2FxGKxu5siSZbljGFbIhFHnziH
      PnsJ6SaHTCIWRlJMyNmVt6afW4dcvhu1ZAuiuBUBGLY/gzmnDimvEcnuwvTkn6z6tDPV9QKx
      Vz+H4dE/wLTn+rRLEnJRC4pqQJjXrjqK+AJaz0vorgrkrR9GO/Mt4hdexOgsgeplVL+NhNAR
      0XkweND7f0oqOIVp76cyt+XcWsy/9BX0rPz0ToyQ0rtmVzr9Wt4Tf+m/kZDMmJ/5G0xGA3F5
      bV1S9w+jjZwkdb4IHvlDUme/S8pTCOUPLi0oyagf+kss0UUky9vprO6pNKmKLIHQkGQVJAmh
      a+hT3cg5VUimdGgWEQkgFn1IOdU3TJUbrTdrM5dInvwaxvt+HTm3Zsk9kVgk+o+/AoDxV76F
      wby2OEZCCERgFFQLclYuydk+mLqAofnnkdTbi1B8u+2R6jtE/Ad/gPGJPyJ19vvowTGsv/kT
      JNvtBQ9bMTRiIkr0qx9CsrgwP/sdpJs48K9UF5GKkzr/Q5TSnUhZuUS+8hSSLQfrr/8Arjvs
      vLP8AEDIN01n3zhFHsuKYVHuBJKsIDSBvuhDsmWjey8T++dnMe7/fdSdv4wQevqAzFGA4boO
      +E5Aya9H+dDnlr2XOPh5hH8Ype4xSEYQsrSqbTqha4hIAMnqQfaUZ65L2dUY8uvXjffM+4Qg
      deqbSO4yEBpKxf1IpqXCKmXlImVXITmKUJ/6rxCbX9OBXbpOfiRb9rIn7pn3qGYszz4HsnLb
      C2TJYELd/ouZupk/8nkwZd3Q+Vd8frUzgBAaR958i4Qu2NLcjHfy9sOiLIerti/auX8ldeh/
      YvzlbyJlV6L3vopcvgdUC2LRT/L5/4CUW4f64c+vTKPnJURwHMOOX0IkIkiOm8TIFFr6gMxR
      CIq6YigRfawd7fIh1Ad/G9Qbd5r03lcRc/0ou58l/o1fQs5vRP3w/7yukIZ26XXkwi1IrnSE
      a33wMMkf/AHqR7+AXHHfDXW5EyxLIxkh/g9PIylGRGgK9X1/htz882ujcQtova+QeulPMX78
      75GKWu7pFEmrzhIpSTLlFZWoqgGDpBOJJiirqsWkyFhNBhSjFbcrbXprMBiQZXlN/4QQ6edU
      M8gKasPjKCYbZFcTj0SRjn6J5JtfxPLJr6Fu+QCK0Zx5dnF6nKHXf4S7qh6jyUTq9D+ij55C
      TJ0ndeQrmLZ/DMVoWf69E+eIf+tTGHKrMOTXv83HdeW0S6+hnXsBY8sHUSzOG+4reXUYKvYi
      GUwILYmhfBeGvBpkWWaq/Rjnvv5Fimor0X70e8hGM2rl3rRaoFpAaKj1j6FYHDe2xxraMBWN
      oMUWUS02FEVZnobBiLrlg6itzyAXNGGofWRJW17/D9KxkxRFufG+JDF27BCRmUmcpZVvl1HN
      gECtfwLFZL05DVnmrbfeYnh4mIqKCl599VUaGhr40pe+xJ49e/jsZz/Lfffdx/nz5xkYGGB4
      eJi8vDx6e3tJJBKMj48zMTGBy+UiHo8zPj6Oz+fLBOFato9dc23NCmJpSfq0M6+wBAB7UdFa
      SdwUwlXO2QsRKvMukb+1jf5Xnuf0lz/LR//fL2As3IrkLr1hhhk98jpn/vdfkruljdz6LZh+
      7r+BrqFPX0SpuD89JV7/HiHQU0nk3BrUh34buWTHDWWuhbrrV1G3fwzJePMwkZIkoez61SW6
      5sL4MDNdp0kZfg/LL/0dsqcsc092FGB67A9X0zS3RMdXP89c73ne/7ffRVppHSZJSLa0OmNo
      fCpzOTwzydl/+Gt2/rv/C4t7+W3csWOHmOk6Q9tv/AHSlQ7V8fd/hcnuoHj3gyBJhMaHmeu7
      QOVj/+dN1Z9roes6+/enbaWuCt3WrVs5cOAAlZWVHDt2jJ07d3LmzBn279/PwYMHqaqqoq+v
      j4KCAsLhMP39/czPz6PreibG6WpwzyXKFrpOeGaSwMAlTHYH5Q89hS2vEEPZDiY7jjH++f/C
      fb/335GvMZDLrttC40c/hauyDiBjpamUtaGULe/NFhjq47Xf/zRP/OXXyN77b27Jl6QYEHIW
      l195HldFDbmN21Zdp/oPf5Lan/8lZIMBSVo/cwkhBIMHfoi9qIy8LTtoeuZZ4qH5my4mV0Iq
      FiU8PYF2Ex+C2HyA8MxkOu8vaWO/Jz7392lhuzIoTZw+TM/3v0n5vidRlgldsxzcbjeHDh0i
      Jycn4yJZXFxMX18fW7ZswWg0cu7cObKzszl06BAej4eenh5qamoyM0tfXx/Z2dkUFRVlYpyu
      CmKdkUqlbuu5ZDK55O/Dn/sj8aPfeFoIXRe+yz3in963TTz/q0+Jrz9SJ4785Z8sKXvhO/8g
      fvJbHxOJWEx4e7vE2a9/SWg38KGLmfPtwj/YJ4QQIh4OiQvf/ZqIh+Zvyse10JIJ8eJvf1x8
      55l94sSX/vyG+4nFBfHy73xKDB89tDKNVEpoN3nHavi4Cl3TxCu/+ylx9ht/syoaEZ9XjB49
      KHRNuyXtq0ilUkLX9VWX11IpkYxFlzyTSibFG3/+u2K66/Sq6VyP1bTH7dC4Z2aARe80Y2+9
      SvPHPoMky+z8zT9ES8RBkrAXl7PnP/5XbHmFTJ09gcn+dnhxXdOofuppGn/h0+hCMD8yyPiJ
      N9ny8V9DVizpkB0XOnBV1HDm7/4nzrIq6j7wMebHhmj+2GfWxKNsUHnfF77F5Ze+j55M3HBf
      UlTclTWYXSs7enf905eJ+Ga5//f/fE3vXg6SLPPE57+OtErbmLHjP+XMV/4fnnnuDYxZd5Zr
      YX50kIkzR2h8+lNLDRkVBfl69UuScJVVY7K7uOdwx2J1HW53Bpgb6BXH/upPlxm5l0JLpcTr
      f/Jvxfipw0IIIabPnRbf/8R+kYrH0xKu6+l/V/lJxMWP/+0zYrL9mBh+8xXx8u/8irj0k++K
      zm/+r2XpXztKRPxzIrEYXnNdbjZaRXyzYmFm4o5o3C4fi95p0fvDbwtd14Wua6L97/9K+If6
      bkpjpRlgtqdTnPyb/3tVs8lqZpE0T+kyhw4dEt/+9reX8H/t70QiITo6OsTZs2fXNDst16b3
      1EHYag5thBCMn3iD7LpmrNl5aMkkUb8XW146MO+yhyW6DpJE1D/HyS/9D/Rkksf+4n/fyHsi
      TiIaweJ0p3MS//FvUNC6hy0f/7UNqcs7TWO68xRnv/Elnvr815FkhbNf+wKVj/087itrp+Xw
      ToVG7H/1BcaP/5SH/9sXWVhY4PLly8zOzlJaWsrx48exWCxMTk6SlZXFb/3Wb3Hw4EEKCgoY
      Hx8nGAzi8Xiorq6mr6+PVCqF3W5nbm4OVVX50Ic+tGx7wE2c4u8mhBB0/cvfMT82BICupRj6
      6UvoV84YSu97FGt2OkG2oqqYHC5GDx9IG9ItA+lK41uzc3nwTz7Pg/956f68EIKub32Fnn/9
      Jt3f+Yf0M5LEQ//lr2h4Om0CkIwsEvV776heWjLB6S9/lmRk8Y7o3C5s+UXs+De/g2xQkWSZ
      Hb/2ezft/OuJ8PQ4052nVrxf1PYAWz7xG0uu5eTk0NDQgKIoqKpKWVkZ+/alfQZcLhelpaUZ
      0wshBCdPnkSSJPbt25c+Wb8S8v6mWPX8sUrcySL4/HNfFdNdZ4Su62Ky/ZiIzQfSNONx0fEP
      fy1S8diyz0YDPnHii/9DvPJ7nxaDh14Ui3Mza3v5lfdFg4EVVY+xE2+Izn/68qrrsuxrNE2M
      HHldaMnEbdOYbD8uen/07dviw9vbJfpffWFVz17FWhfBK9GY7ekUfS99/7ZprFUlTKVS4tCh
      Q+Ls2bM3pbEmAdB1Xcz5fCIVj4ixiWmRjEfEzFxARCMRoelvv/h2kEwmRWDosogG/avi49SX
      PyuS1wiErusiEgyIy6+8IMIzk2t+v65pQte1TCOl4jExcuR1oeu6GD16cFWd9tq63ClWohHx
      e8X82NA7xsd6CcCd0tioNl3TGmBmfJjRuTBOswFPlsqAP4XHKpOMRSiprMdhM79jgbGEEAz/
      9CXK9j2OYjTdFo1rMfTGy4hUCpM7m+K2+9FTSeZ6z5PbvB1vz1my8kuwZOfeUhdORiOkkkks
      jjtLhHevrCPe7eHRV01RCI2xiWlCixGySsqx20w4E2ZCgWlMVjvemQmyKirXJS6QlkgQHOoj
      u37LiuW1eAyTOxsdCXHluTuJg1O67wmSkTCx0PwVGhKehhY0TcNT34L/0nmMTvctHbFj8wGS
      iQSq9c6yWm54nKQ10Lid77kRNDaiPda8C+Tz+VAlnQnvPPV11QQDAbR4BM1goyDXvS4zgBA6
      WjyOwbyye2MyskgiHMKW97ah270yat4LNMLTE5hz8jdngFvQuKe2QWVAXmMlE4thEuEQWflF
      q26k8MwkimrE4lk5INVVRAM+VKsNg2nlo3U9lVrC970gAOtF490uAPfUNmg8tHz2lpvBYLZg
      zVlbgoWs/KJVn4Ra3Nk37fxwe3xv4t7APWMKASw7It8KNxy7rxJXF87rgdvhexP3Bu6pGWAT
      m3inse4zgLhF8ub1fm6TxsbSWI/w6OtBY6PaY90F4E4WKneamGKTxsbQuNMF7HrR2Ij2uGdU
      oDv199yksUnjdmis+zboJjbxs4S7uAsk6DxzGld+CalIkIVwFHdONqH5eXKLyinMWZ3zxPBA
      HwldJcsiMecP4nK7mZsLYnd5qK1cnfvh5NgQ/YOjlJSWEF5YwOVJ03C4s6mpKFklH5dYCEew
      OpyE5hdwOJ0sBAMoJitbm1YX3mS4/xLzC2Fc2TkEAvM4nA7m/QFUi40tjbe22vR7pxie8lOa
      ncWUL4DD4SEQDGCzO4mHfOgGKy1bG2/qPhMNB+no7ue+tq0cO3maXXv2cqnrHMJow2rQCC0m
      2draglFZeUSOLATpvDjA7m2NDAyPoqGghQNYPAUs+meRzHa2NtfflI/FUICuS0Psaqmnf3gM
      gYH4QgDF6sREnFBUY3tbKzdTisLzfi5cHmFvWyu9XcdRXLUszo1gsDpR9SgLcXEXVSAB2TnZ
      eOe8SKqJuvIcJgJxtjY1EI2Eb/38Ffj9fmKLfqYCcbY01uOfnaS0dguyuNFjayUUFhVTVFKO
      ALY01DA3O01F/RYkffU5tgyyREoTxKIRquq3okf8uArKsJpXP8YYTUaMCkxMe6lp2EIq7MVd
      XInFtDrd15NbSJZFJRLTaNraiG9imvLaBgxEsDkKcVlN3GoZaclyketxIBtMlBTlA3GynEU4
      LUYk1UJFnofoLRajVruLHLcdg8mCKgnyC5zYXGXIegi7qwS7+db5HmwON9muLAwmGypJDEYd
      h7sMm8mAwWSj1OUgdgsaWU4PHqeNuYlB5hYS+HyTuLLLsRplVLOdEqf97gmAQJBMpbBarJgN
      MoNTizSVurhwsQ+3e/URyPLz8lAMZopzHFzo7ae0qoHpwW5M1tUbo837/eQXFZNtt3Khb4iK
      qjom+rsx21bvwqcYjJjNJlzuHEb7L2DLKSMWmEJIq0vuAZBly0JXLDTXVzPUdwF7XhXRuXGQ
      V+dc7p0exzfnw2wzc/H8Jcqbapkc7EO15KAlA8SEfNMREyAc9OGb8zHr9eKdnWN6dhEt4SOB
      gtkgmAgtknWLjY6FwBy+OR8TwwP4IjrJhIoWn8FoKyQZ95KSbj0ohPxefHM+ZqanSaJiUGwk
      YzPosgGDrDETT3KrsGPzvll8cz5UVxH37dpOaXElscUphGJCkVJ4E6nNNcAm3tu4Z3aBNrGJ
      u4FNAdjEexqbArCJ9zTuKWO4Tfxs4MBLPyE/z4OtsI5Y0EttbQW9Fy9TU1uF3xfAlVtIltkA
      QuNiTy9l5SWMT/mprCpnuO8c3QM+nv75xwH4/nP/SO3WPUT940gmB5W1DXSfPkjKWMgTj9w8
      Efh6YFMANrFmPPTgTv75xydoWggSjGoEFiIkQhMMDw4ylzDyyY+m48X2HH+D/oUEAxe7iEsq
      F3u6KNuyC1X2LaEnyzK+UIzWGhcD416GR6bR1DBC7FlrJtQ1Q/nEhx79s85BH96JYUJxQa5n
      5e3Dy1fiL17F4KVuBoZH6e3tp7SilBdf+FcWFiP09g1SVl52Q76A1196keLaulVJ3djAZVRn
      NuoalLTgyHnOjCcoy1uhDkLj9IljDI7NUFpaTPvJ4+QUlqQTc2xi1TCYTMQXY5QX5xKIK+TZ
      FGKSgSyzleKqesry09vHBkUwG0xQXZqLwWLHnZNHwDuN1WanvDQtJKFwlB3bt6FFQ3gDCxgU
      QVHNDvJtCrklJSgbLAGGhYCX6raHqXAKfvSjH9FQkUd7+zkkcxZtLU30nOsgktSpra3jtQMH
      CC0sUNu4FYfVSFV9M1VAx6EfMxXSiOsKO3fupOfYq4z4E1RlGxnq62FufpHiihqEnqLnfCeR
      cJK9e3cxPXKZidkAhaVVlOS76TrbTkyT2da6jWNvvEZec4gtDfXEA5NMzPqpqG1GD02RlE0M
      jM9R5jHhX4hSWlVHQbYTEAz396KExmnevoPRgX62bGlmfLAPZ3E1pmSARazkyEEGBoeQbHkY
      lc3Ov3ao7N2bDjpceCV7auM1d4cvX8QXilBQUsGTj1bf8HQsHKS9vR0MZvbs2YMENG7beV2p
      1Z3A3ylkgO5zZ3jx+eeoaN7N0Td+Sn3rTrL1Obon5ui+PM7OnTtxOh1UVlTQ1taGw5o+mEnF
      whz+6QHOewWlToWQb4YzZ84w6E9R5DKC0Gnv7GZH2860aYMQ1Da24CHA8GyIsxeH2b1rF10d
      J+nrOIK5sIEdzZW8efQMZWWVtOxow2OVuNA/ye5duzh9/AgTA90c6Rzggd0tdHRdom3nTvI9
      jivVkSirqmNXWxNH3jrB3OhlvOEEZy/0YjMpqBYHqQUvY4EEUxPjzIxd4qWXXyN559a6m7gG
      FbWNtLW1UZy//IGmOctFW1sbbdua79hC9E5hAGjetpMK5w5++KOfoKYiXDzfiUHKosppJ3/f
      do4fOURWXv0NEREM5iwefPQJ8k69zrmRAI7sfHbuvFaSZd731KOcPnkMXbUjKSqqQUaSZHQt
      iWIwgiQhSxBejFKQZUUxJtCTMWQFhABdTzI2PEjHWTvVdQ1EJ3vYv38/RgO874kHOXX8KJLZ
      zZ4dzek3yjKyooLQ2Hv/bl4+8BL2nJK0pCtGHn/yKS6fPwNWO1M+F/b4NPNxQY5lcyZ4L8Jg
      d+cy0N2OV0lQVt1AXaGV4+cGcdktoEUZHJlCUU04sqxsrSvnyInTtLZuJ8ukcKHzDDFNIryo
      srvQSTD3OtdAoTM4OIRiMJBlt2NKZSMDVocbg81OkdvIqVOnKCirYWtNEYePH2HYILFj1x5M
      8Vk6Th6jtXUb25qq0XSBrguynNkYFUBPMTA0gmIwYHOk/XtVi52FgRGO+Qdo27MHs8vK4tw4
      Dzzx/rdZ0hL4IrCnuRrf9HEWVTfZm53/PYt3tSnE9Pgg5/omeGr/g7cuvIn3JN7VArCJex8L
      QS99A6NY7G4aaytvWBNMTU1RWHiTJIfXQSSjdHT1YLI6aGqoRZYEU5PTFBYtT2PzJHgTdxX9
      nUdwVrRS5DLwyqFjq3pm6MxBLk4vbwythSYYXVCoKHTxry/8mJX2N1588SVg8yBsE/cInNkF
      pGIXOXPsTZKKhbm5IO9//xOc7ejA3VbJt94YZluFjQgexNQo/oAVu1TH+VNvkVNYQnF5DUW5
      b2fmyXLl0pirMuRL0tvZwVPO3Tz/6gkqS/OpralleHiI9o6OzRlgE3cfPV3tnDp9lkcee4zZ
      QJj79uymPhuG/G/H8aysaWTnnt2E/bOUl5bRuHU7JXkenA47qaSG+RbBy2SDmSyzipBUspwu
      KioqaduxIz0DfO4fD9A7MrOxtbwFtu2sY9Lwzsvj9kI3gditfItujhKHjenFyG0/bzemnWYW
      EsnbptGU42Zf6ep15XsJTS1t1GSnXXUMaIQicQZnIzy000DfMuXtbheTc3OkcgooLKumpDCH
      Vw4d5YPvfzxTJhLyczkg+Ei2kV4gkUjRumsvickuzg/7kYVGPJFML4I/8+ff4szF0Xemtivg
      oSd2MGi887AXa8WjlXnM3EHnBajLdjI8v3Dbz7vMRhAQjK/ejfN67CnK4yP1lbf9/N3CQtCL
      wZaDRU0vfoWeoqe7m6KKWtx2Kz6fD7fdzHxcxpVlxO8P4fG4GLp8kazcUkx6hKFxL81bmlAV
      eZlFcDqgs8fjYWzoMjHM1FWVkYyF6ekb2VwDvNsxNz1O/+AoVTXVXOjppaCojAKHgdFAnNbG
      mrvNHnbX0oTWkmygeevbOZiv2p65jVf/Tuv5VXVNVynQmv12bFhJtdDWtjQ39FUaZVVvBxZQ
      zVlsa2leKgBtDemcS7OBMJPeeQQCId4+AK4o9DAyFUAXAlmSlvzfalbZUV9K/5iXaX96NJQy
      /0mf6q4GizMTBHovkLO1DZPTDbJ848OS9Pa1Jb/TCfFm249jsNrIbmoFBEgy6PoVWjpINwZp
      mhseYMHrxZ6bS3ZZ5RWeRTojuq6TSsSJLYSw5+aveHw/3ddLZD6IzZONQVVxF6ez2vvGRsgu
      q1iSYPqdgtvjId51lskJI5rq5vLF88zZrQSjSVoaam4wWHyvYYkAaLrAoMi01hZjNCjs31mH
      NxhmMRpHIBGNJagtzSO0GKOtoZSu/kkQMO0PYVINnLk4htGgUF+Wh8NmJtedxax/AVU1kEim
      0DSdzssTN2XImldE3DeHFo9x+fl/wlXTiJaIo6hGjE43/p5OVLsDg8WGrKooqhHV7sTf04li
      slDy8JOkohEUswV/73m0WAQkCS0eQ7U50JJx8lr33GDWkYzF0p08HKb3pwewZeeQiseQFAWh
      aRhMZkKz05Rt34kjd/lo1IlolGQshpZIoCWTXDjwMopBRQidVDzB2PlOJFmm7cO/8I4JwWIs
      SWNNGR39s4zPhnj6g09y4McvoGsavsUEuVmrc7h/t2KJACSSKQo8bsa988iKzOhMgMtjXmpL
      c4klkgQXIkzNhchx2TjVM0I4kmDCGyTPbWfKF2JPczmjMwGqirOJxlMMTviIxBL4Qovku+24
      7Lfy478CWQJZxlXz/7f3Zk2OY1me3w87QID75nT6GhEeW25V1VVd3VVt3dbdpjFpZKbtSR9B
      n0DP/W30qBeNTDKZTNPT1TOjUldWVu4R4bvTnXTuJIh90wM9MsLTIzNjy8yITv+ZuYEEQACk
      4+Lec+45/3OPXKOFpGmE8ynW2jb+qI+5uk4Wx6RpQuK5kGUY9RXMlTYARr1JlqRwUSnQqDaY
      Hz7CXN1gfvCQNImRvqa0IAgCsqKQRBGNW7eJw5DI85AUaVm7QBTJ1+pEnveNly0IAoqmEYcB
      giAiqyqSrKAXCkS+R6HRoNRa+84qM68TMY04W8j83d/8FQs/pZJX+Tf/9X+HqWaEP/GnP/B8
      RvDGSpnj3uSVTrSzXqc7nLHwnm3oXRvBP00j+MfmufrhV735AR6dDL7x5r/m+2XcP+MPH31C
      FIU8eLhLmmVMJ2OS9JsMs4zRaPzVu6O9RzhBzLDX4ei0jzsf82Dv6LntujeZS0MgQRD45d11
      Ov0pm60KH+8ux+v3t1sEYUySpkRxgiSKTBcuAgLd0fy1XlAwn2If72OutHF6ZxjVOrmVNvbx
      PrHrYDRaON0TzNY6/niIUa2jFoqI8vMLUD0Le9AnVyojKS9/HG8+43z3EeX2GsXmCpHvkyYJ
      g4M99HweUZLJ1+oo+rdP2rxuPv/ic5obdzj44jNKzSqffXFIt/OA3/7NvyHzOvy7//1j/vbv
      f8bBUY8PfvFz/Gmfjz/f52//+je4g2Mc0WT4ySdsbK7RP9rnNE0oKDKzoE3pBZTv3kQuXf39
      7RU0VWY8d7m1XsfUNQbTBY9OBjTLFpoqoxkaoiiwuVImA2zXf61PdsW0QBDwxyMSz8GfSpit
      NdRCCW/QI+ul5Ne3GX3+EbKRwx+ek9+8gbW68UrndcZDNCvPYP8R3myKni/izadYtQaz7hml
      1TajowPWP/gFZuXZiR79/V3K7TXIMh7+7h+XjSAImJyeAFDd3CIOfGbnPYrNFRo3d17pmp+X
      3/7137P38R/puilb5RL94ZjNteWkmVUqc+fOHc66Q35xp8EXJ2Pe316hnO8CEAUhZrFKYg8Z
      9Tqsbt9mePSAuesQJ29/F3BpCGQZGpsrFcoFg9PBjEoxhygI3FqrsdsZBFrTlgAAIABJREFU
      ktNVNFXm5HzKxPawHf+pbKzXQ+J75OoreMMeaqlCGvikcYwgCIiKShIGBJMRxa2dpdGZLxDa
      r94LZVlG5HsEjoOWLxB6LoXmCuPjQ9IkBkHAqtYwit8slyhKEggwOeuQrzdQcyZqLkfj5g71
      GzcxCkWiwKdxa4fkFUt+vgjHew+ZJBJ/dv8GH/7xARvrZYajKSedDpBDYM5qq8aHD/rcXq8w
      6J4wm8149MUXxMVVpvufUllZw7YXjAZ9ytUKslGioP/wNtvr5ooRnNNVJFFgpVrgsDtGlpY+
      c9cPqRZN4jjB8UNEQaBWsuiO5q9cAxaeGMFx4OP2TjFX1/GH52ilClmSEvseWZqgl2t4oz65
      5irJxbos47mL3n2dx0awb9vMz7sUmisEiwWePUOSFaqb20w6x+iFIotBn/L6Bqpx2Zv12AhO
      k4TR8SGFxgqiJCKIElmWwuNpClFceqBkhTSJUS7KwF4bwS9OFgc4sYj1HEK7ZBmu56FKkMrG
      pTzwKwM411/+E2x3AEAUP1ECHs2cS/ueDWcvdfHfhqzpFDaXidRm64m8ufLUDf7Y3Skbz+lW
      fQ70fB49n794XaDYWv1qW3VzeWOZ5cq3HkOUJOrbV5PAL7N0v76KrXEN4I04HIqowZRKc5XR
      2SGxIGNYRSwlxQ4EcnJMLBqst+qcnJzSMBM8c4P5+RHNlSb9/vg6GvSat48sy0jTlDT08ZOM
      ztkZhlVEkRTENOLw4AjXdUjTjDAIyIDJqM9Rp4u3WBCnKZ3jXSS9ch0LdM3bRxb5PDhdcPvG
      OoeHp+RLZSxDxYoTRFlCkwW8REKSUiRRAQR27t7HVFKcSCJyFUqVNXJ567oBXPP2IaoG9+/f
      BeDu3auVc0rFq8Jo1coyiE4HqpUnjozrIdA1bz2ha/Pg4SPc4KpnzXEcMiDyXXZ39wnjy0mS
      1z3ANW89dr9LbeMGR/v76HKKXqwjixlkMJlM2Nm5xYNHe+zs3CQOPQ53T6iutBh1T68bwDVv
      P1mWcri7x3a7yulRl5HdIZ83yZLkq9KokiwzOT+k010Q6xZSdx+1+nw6tT8IVUOjUH85X/6r
      kFcVzp3v3u+aNxez0uCdjTK6EDMyRpStImlgE8kGlWIeBIFWo8L5cMKdd9/hrHNCuXWTyfnJ
      sgHcu9VG1H7cuPBiKcde+PxVGV8XcfbDxuVc8/oxio/nZxRu33lcknbl0j6lapPSRebYnbtL
      A7pSLCwbwMPTER/udX+Qi/0mmtsNsK4nh675blzXxTA07IVHIW89c3su9/QkacZi4SCTEMs5
      iAMsa/m5N2YI9JgkjgkWc/RCaTmGk2XiIPjWCMokiq5nVn9C9PvnpKFPrb3Bwy+/pNxsMjg5
      IRVFcoUyzriLalZolk3OhnPu3rlFt9tFkUUQFOI4QhG7SEbxshv0ve0V/uLeBrp6uV20KvlL
      y8dsNEqoskSrkscyngyh1uvFZ+7/PMw6x0yOD+l++ieGB7t4swm7/+H/Jg58zh98jjsZMzra
      Z3x0gN3vMekc0/viE9zphMHuA7L0Wuv8Xz1pgu36eMMOQy/Bc22sYh1V1RGziEKpipjFTOdz
      xp1TPMCUBbxUIvaGyEYB23bonHYu9wDlvIEsidzbaPCwM+TmaoWiqZMkGeuNEkVTp5w3iJOU
      3bMR9zbqrNeLOH5IOW+w3igxnDpkZLSqeUqmQXf8YplSgihSXt9i2jmmefseJx/+nixNmZwc
      IWsa4+MD1JxJsLBxJ2NU3UDJ5Zgc7WOUK7iTMWa19t0n+gky7Hb4/NM/ouZrfProlHpBJHFc
      mjv3qTdWub258t0HeQOo1Bpsbm0xGk+p+UMsq4QsSCSJgSSJLKYjslweS0mpt9soQHN1BWYx
      ciRTXKly6k4o5AqXG8DCCwmjmFrRpF0rUC2YjOcumiIjCLDwAhZeSLtW4GFnyHDm8sVxn1vt
      KvmchqEqzF2foqlDBrb34katrOsMdr+k1N4kyzLMap3Wuz9jcnyAUSwjySrz3inBwqawsook
      y8iaTpalOMMhhYtAuWuuUq5WcB2XYn3ZW1frLUJ1yPGXn7L38IBG87+h9DzRlT8yhcIyBL9W
      q1GrXX3YPd4OUHusX6BZrDYAlrPAN3aWM8iXGsBhb4KhyXx+1KdZsfiPnx1RsnRsN0CVJQRB
      oGBqnPSnAHx6eE4Yxzw4GZABe7kRXhBz3J9haDICL551nW+skG88eRJVLiIx67eW1r1RLBE4
      NqX1TQrNy0po1a3visT8aXPe61GqrSDJKj/7xZ/xy3e2GZ4esIgyPv18H1V6+wIDksDh4UGH
      xsoq1dLVIbfjOKRpSj5/dVu38zVhrLHtwsWIpTtavjifLABwg6Vs32TxRBUhiOKL5TJkejhz
      r2x73QiiSPPO/e/e8ZorrG7cYHXjxqV1tfY2NWBr68azP/SGEy8GKMUmZ6cdvKmCYhSYTEbU
      mquMz0/xYwFDFXHmOnYgUDR1RFGgUqvheP5VL9DN1Sr9yYKbq1U+PeyhyBL3NxvMFj5hnBAn
      CbIkMXN8REG41CBeB5MLIzjfaH719E+i+ELiJEWUZdIkQZQkxkcHkGU0777zWq/hXzMPjx/h
      xjFJlpGkfLVMs4wkzUgySNOMJMsullysz75apmlGdvGXZhlcvCZLIX3qfZouk6XSbPn/S1MU
      Ef7H/+qv0b5DzPZFcBcOkiThRSmVAvTihJO9Tyi23yfvDYnjkIODI6zqChoRXiZQrdWJwuBy
      A7i5WmGrWaI3tpksXFYqeTqDGZ8fnnOjVcEyVGRJJEpStlbKSKLA7z49upQ086qkUbQUpBJF
      zh98QZYkBAsbq95genpCZfMG3U8/QjUtrEbz+SXnrgFgEDjMVR0/zvDTlCBOCeLsa8vLf36c
      4McpfpTix0thhCRKiKOUOErI4oQsiuFiuXz/tdfx8nVBSfnv/+7Xr60ByGYFqd+lUqtj6TKq
      KmFoBuXWKovJOXqhgqFKlAp5nEigbCSEroEgQOHr4dDr9RKNsrV0XwpwdLosaHx7vc7nh+fc
      32qSZjB3fIq5pW2w2SixezZ65sW9DJKqUt26QRyG+PMZSRRSWttg0T8n32zhjIdY9SaFVpvI
      c/kq3/CanySSXuCde5fz0m/vLG3BevXpDL4SdWBh29yoLifB2hs3LjeAf/+nfaqFHPmcRjWf
      o2wZhHFCZzAjSlJmC58oThjMHAYzh7VakeMLg/h1UWqvP3N9/ebVuO9rfpospiNOBxM2Nrcw
      1KtzuYHrIOo5lK8Jn2ZpSIZCFvm4cUqSSVdtgNHcZTR3OXxKDMu5yBM+PH+yLowTvjwZvLYv
      dc0Pw61SkyAKyeRl35ll2cWSp5bZVyPLq9uX77nYb7nyqxVP1j1jGyzFgXM585W+w7A/ZvPm
      FgeP9imZKm4iIWcB07mLJMqs1KsYIuwdHtGoVDjuT2g0GjQrMv2+z3pDwgkiZotnNICfGlVD
      f2X3X1FTuVn6dnmYkqHixc8ugKFKEmQQpi9pS2XQsozn2rVZfzuLaFxFQBQFJtMpg6nH5kaL
      XE6jrOiMZ3N0YqLI5+zkmMr2+4R2H1hGKMS+jROqwHUDYB6EnC5eLR66Y3/35y2tyMh/vR6z
      p3Hi53uqzkY9Hj56iGq1SYIxQarwl7/6GUe7f6Q7NinlHM77Y8xShZntslovs3P3HvI36Kh/
      8v/+X7i5u+TTPmdjj7//27+ie7zHnz78kNVb7zKbjcmrAqf9GTdu36Te2KBefDUDuFovc7R/
      yPrmFpPzDmapSaVskSYpmiihpAmyIhK6AZWWhWrKZGoFUVQJvVO8Yo1qySRLxesG8FMjXygR
      +CG1jTL+YETC8mbcvLXD5A89ImR++/MdfvdwTBb5HHc62H7Mn//i/SvHGh4/YL83QzTPWbtV
      oDcNIYPVjZv0RzaqlPIXv/5LPvvwn8lpKnu7+5yd9vm7v/kt4isoZOfLNe6UlzPAuY2rWkiP
      m9etG09NfmlLw/feu5fnkK4bwAXzQZ9x55jmrdsY+QLefIaeL3xVDGPW6zIf9lm9c/9K5Gno
      eUuVuufQ/Bx2OkzPe6zduYtuXQ7ljcMQ31kgiBLmMxK7XweT0RDdzBPYY5xIRDNEJpMJo/MD
      Tntz7t9p8Z8+6/CrP/81550jkmBBKD67d6lt3OG/bTV5dOozGp1iGBqT6QRTiqisblHXIn7/
      +//M+vY96oENEpz0pi8VIfBslmHOcRRRLJUuFS5ZOA5mLvfVOmc64qQ/ZmNjk5z+JHDzugFc
      4EyW3X7keZw/ekiuVMaZjAkch+at24zPOpRbbRaTMcPDfUqtNrPeGVatzvDokPJqG2cyoby6
      yvi0Q7m1Sm3z6tNpPhyiaBq9g318x6HaXmN8dkptfYOzRw+xSiVEWaa7+wjdtMgVi0RBQGNz
      8xsr07wI1ZU1qitrV9aXy2VuLfNE2L6onHTjxnPMDisldraArcuBdBsXJtFf/eZxCaTlE3vt
      2U6+l+Z4/xGCUSb0HUbzgFLRRBXATcGZT5hMJrS27uKcj2nf2uZod59ysQBkEEdvTgMoaAr1
      16wz+jzklOVPIAgCkqoQhyGVtXUmvTPSOGb9vZ8hAFmaYQ8HePac1u279HYfUm618eYzVm7t
      MDg8YPXufXqPHlDbuoE3e7Z7WBAFVCPHfDig1GjgzqaMu2dEQcD6vXtMz/ssJhOc6ZTVnR3O
      D/Ypr7Rey83/rxFBgDRNOTw4QM/XiL2MYZChSRmJqrKz3eJ0/mTGVwDmsxlxEqGp+nL9SiXP
      VrP8zWf5AUhFgUfj1yu1/jwYjeX3NssVRidHVNY2MApFJEVBEASGRwc0b+5QXd9gPuiz+cHP
      6R/ss/bOe4iSjFEsMjntsP7eB4xOjll79wMkSUL7BldfoVZj0u3SvnMXWVHwnQVZBtV2m+HJ
      MbX1Deob64w6p1jlCvPhkGr7OsL1m1jfvk0aR8S1PNNFQLtdQ534GJqIKIoIiky1IIFepbN/
      yObWNvNRDzcWqFdKS3Hc//l//Wc+eY2zuS/Db+6s0o1++Jzg9xvlV/YCPQ/v1Iv03Bc7T5Zl
      hJ6Hahjf2QO8X6/xd5uveXzxE0AGmPshY+fVikW/KsFFPFEcBCyGfQrNFqJ8dYSWRCEIItLX
      tmVpShLHSwXmCzl1AFnTLu+XZSRRhKxeFgGIfJ/FeERxpYUzHqGZFqph4Nnzi/phKv7CRrMs
      4jBEVjVkVUEQXmwOwZ3PcaZTKu02knRZXjz0PVT9iT9fEAS03OsTAH5zyTg7OSJEpV4pkMuZ
      39Dgl0av9ZTzYDI4Q8k3sS6k2pMoBElBunDbhmGIoqoXZneGbTvkn8ojfmNsgMfMe2ckYcjZ
      Z3/CLFfJsgxRlnEnIwRRotBYQZAkpqfHlNY2mJ12yDdXUIwc8+4phVYbbzohsOdkgCiK6MUS
      SRguKz2enyFKMq377106bxT4OJMx0+4ZgbNg7b0PkFWF7pdfgAACAqIiE/k+giAiiAJr77yP
      ajzfBNRj+keHKJpO58svIM2otNuMzk6Xea1Hx9z65S9f46/5duBPzvAEi5ySYc/npHHI8fEZ
      K40avemEWrVC76hPqVlDFaF3eky+2qJZLTGazGAeoUkx05mPyoLAWqOmRthBxvD0kFv332Pc
      75ErVUk8h/kij2+PSWXzck7wTqPEB+0aP1+rIYsi62ULXVm2LE2WWC9b/A8/u8k7rQo3awUU
      SaSZz6HJIjVTp27p1EwdU5VZKeRQJZHVookiibQKua+W3zSpAsunnlmrIYgi7mxC/+EX+LMZ
      ZKBZeWZnHRbDAYE9p//wS/R8AXf8ZPgWuQ7BYpnLkMYxvj2n/+AL7P45kedSbK1d6RUAFE3H
      s+fLwhiNFYaHB6RJip7Po5kWgiRSqDfRcib+wibyfc53H77wPzvyA+bDAYvxmHGvS//oEN+2
      Of7s8xc+1r8WBFEkSVL6vS62bTMZjXDGHXoDn43bd/EXA4rVVYgDbHuBoijY9pw0dun2JwxG
      QxJkWkULvVhidXWFw4NDoiii1lylaoJkNfEWMwbdE+JMIEYmjdzLPUCrkMOLYuI0pWbp/Hy9
      ztnUwY1iZm7AyWRBzTKY+yE5ReYX63XcMGa9bCEKApauMHWXctRBFHOjViBJM5p5g0UYc6NW
      ZOh45FSFvW+oLaDkcgz3HlFe32Ix7GPW6pjVGmmWougGoiSRZRmypmOUKujFErJuIMky7nh0
      sX5p2KZR9NUxrFoD1TTpP/iCfONqnd/FeIgkKzS2bzI6OaLUahO4zrK4tSCSrzeY9bqsv/cB
      VrW2HA6ZLx7TYlXKzIdD6hsbjE5PyVeqTM/PKTaKGC9Z5ONtRyuuUFycoNcalAs5hDQmQaRS
      qaMDtfo6y+ktnTRJWczHmGaFJE751a//kshfIIgiCpBXJbrdHvfu38MOMsqmwtiTMIUJudY6
      62vrxFFMIBhkirU0gv+n/+X/4Y8nA27UCqiShKFIOGFM1dQ5nS6436ryf3x+BMDdlTITx8cN
      Y1aLJvW8wcQNWAQRhiITxgn1vIEoCHSmC27WivRtj5KhMnZ9zmYuBV2lM11c+hH+i/c3GWc/
      XNmgx7zJRvCLcG0EvxyXeoD94VU3pKHIfNl7UjLzy6eiRB/0pzx4Rji0G8b07GV65MlkcWX7
      3L8ul3rNy5MlIbt7B5TrLfI5De0Zjg57saDwjDxgAHc+oXM+Zvvmje82gr0o5vAFpU0e3/wv
      gzudMNx7iGZa+PMZ5c1t8vUmJx/+njgMMas13PEIzcrj23PyjRUqm9tvjTDW4OSE7u4jCvU6
      i/GYrffexyyV+Oyf/gOrOzuMOqf4roNhWaRpim5ZrN+9dz0R9hT+fMA8lGirAr/7p3/m3ffe
      YTIeUSlanE086tUKZ0cPKTfW0YRoWSwj9XAjkXfv3ebotMvtO3c4751dNoIVSeRvdlZpl0x+
      s72CJkvIosCfbdS50yzxs7Ua77YqvLdaZaNssVG+Kkv3qmhWniSKCJwFoecyP1vWKhZEkchz
      8e05rXfeJ3Qd4sBnfLRP74tPX/t1fF9Y5TJREGAWisiqyrR/jiAIrN7agQwkVaG2tk4Sx9ij
      Ef3DQ04fPPixL/uNQjFr3N6o82j/hLW1NvaoS5BkBM6MRnubxXxGo7WOLCYcHh4RxzGSapA3
      l7FaWZqSJilz277cA9xtlnHDmEpO54+dAetli93BjO7MoahrBHGCIokYiky7ZBInGbYfMXkJ
      /Z9vwptOkDUNzbRIowhZN/DnM4xSBUEUMYplel98Suud97EH58S+v5wPf0uYDfoYlkXguZBl
      SIqCPR7T3dtFkmUUw2DS63L7V39O//gIezi6MmfxU0cQ4fy8z42bN/HnQzSzzeC8R94UeHB8
      zAd3t0jjEMgomjmcSKBSfPKwvnVzm6PjDu3WymUj+P12lXvNMnvDOYKwHL/Hacqvt1b4l6Nz
      btVLpFnGx6dDtqsF6nmD3cHsmeP8F+XaCH41ro3g5ZM9E4QXCrW+1AN8fDri07MxWZahKRJB
      lCCJAv/46JQoSfn90flyJjXN+Kw7Rh1IX83gXnPNqzKbz1GyGIwiOfXJLPlkPKFULiEIcHR4
      xMZTkbG+76NpGrZtUygUviXQOuP0+JDRdMHN23cxLxTwrhjB6UUyqH8hdhWnGYvg2al81zf/
      Na+TbueYMJXY2ZL44uERlWqN3sxDFxJK5RJZFjMfdDnLN1j09khkg1m/w9ad9zjZ+5xKaxMh
      dAjRMKSYmRNRqZaoGDKRUWV1bR0nOiKYDzncG5HTresiede8Oah6DimL6Q8GhIsRne6I1Y0t
      RAT63Q5Hu7uEWoHB2RGaWcDUFCr1FZq1MiurG8gkhJmIkIYgadQLFvmczJ/2+xT1Jz3KeDpj
      a6NFHAdvXizQD01eU1jl+w84U95C3c0fmpWVFXRFZGq7CJJCsVjB0ERy7VVyZg7Xcdg0TRzX
      QRQkBDJII/qjKfVGgyzLCFybUNDIGyoiAlHsUSnmEQSBDIn2ygq6KnHUOefGzs51AwiThEX0
      /U/M3TMK6Mr3463Ksox67u0v9fS4qkulolOpPBG1Uq1lyIl5EQVqmZfd78ZTb3Nfi55VE5Xb
      t5ahMYIgYF6Er9zY3gTewGjQH5oky4h+gKIakpSgS9+fl0tRfpqFQbLA5pPdUyqVCoYmU71o
      OLPZjEKhiPhUyLm3mHJ0ek6ztUa5YBJ6izenARQ0hdqPEPv+OCXymreTLLSxgwxxNsORMoh9
      zoY2hZzKfDpF11X6gxE37r7DUadLs1aFLOXjj/5ApVhZNoC7qxUkRfquc32vqKrM7uSHT4nM
      a8sGcL6/RxLH6KZJHIaUWqtMe10kWUbLmXQfPaCxfQNJUQgch0p77aXDE+zZHKuQvw5veC0I
      tNY2WJwfgKQy6A84Ph1we6OJk8hk/TMUwySOM0gTNDPP8fExhXIdLb2QRz/2Ah44359o0/PQ
      iH/cUODQ8xgcH9HauU330QOm5z0008RfLNBME0lRGJ2cIMoy/YM9CvUGyjPyCp6Hz/7lQ5rt
      VZIkIWeZ2JMZtz9497pBvASCUSE6O6S9voWuCkSeg1lpUSvnkUiIsw2650NMTeD2ndscHByz
      vrmNSIqUJW/OEOhpZt1TCiurz3VDuNMJai6HN51cqizzGGc8xKx8d80ws1TCqlSYDfrkqzXK
      rVUkRUE3LRAE7OFgmW6ZJpjlynce79sQRZH5ZML5aRdBEChVKiRxgnw9HHthBFnjzle1gYGc
      eVEEaYkK3Ny+yNuQVG7eunXp85cTYvIGqihyNLs8ZS8AuizhxQkrlkGWZZx/jznE084xIDA9
      PcYollgM+giSRGGlhTseoecLOOMxrXfeY9E/x5tNCD2PKAhwRoOLfF0Nbz4jCQNy5QpxGEKW
      EYcBaz/75ZWc4kp7qZVTbq0+85qa26+ngsrup1/Q3t5iNhrRaLcolst4jot47SZ9JscHj3BC
      gTu3b76Umtxk2CNT8iiJi52IFHI6oiCSyy1TWS/dBQ3TYBFEbJcsirrKme0y8QJqpk5RUxm6
      PpYq01t4NE2dak5j6Aa0LIPO3KVsqERJSklXObVdmqbBZ4MXk09Pk4Qsy5h1T5mddZAUhWJ7
      HVEUGR8fEnkeeqGIKIl4symiLNHYucvwcI/ZWYfZ2SmNnTvkmysgCMvUyUcPKK9vImsaeqFI
      GsdXGsAPxa137wHQ3tr4Uc7/tmEWKrQtlencx532qLc3sUc9UK2vQp0tQ0UCwjhguoioly36
      /SFrG+sIskaWhkSZgCYBccDDgxNu3b7DuN+73ACKmgJZxjyIKBsqeVXmD90R9ZxOmKQYsowT
      xvzFWp0oSfHiBE2SOJk7vNcs8/+dDtkommTA3VoRP07QJJEgeX4XnTMaULuxA4KAWaliVmtI
      sgICmNU609MTrHqTNEmwag3SOEZWVeo3bxMsbErtdXKlMqpp4YxHlNbWKa2tE3keuUoVUZSQ
      1Ku5A729XXQrjzMZI8kyzZu3EASB7qOHyJpGbX3jeoz+I1CtVgGoaFApLpX2tOaTXvppy1Ej
      R/5CW21jc/mAKZWu6l397GfLIay1tXW5ATwczektPFbzBnM/ortwuVsr0lt4hEnKyA14r1nm
      ZLbMEy5oKiMvYK1g8ml/ghfFiILAetHkj90RFUMjSl+sgsvT43jrGfV+GzsX1SILF9qZF6HC
      er6Anr+sLFd9hjThN5MxOeuQAZKs8MU//SP2aEh9c4tkHDPv9/HsGf3DA9p37mFWKrTvvHii
      ysOPP8OeTrlx7w5RFCHLMlEYYhYKxGGIljMgg09+/y9s7tzCsW1WtzaYT6aUa1WU69Do18ql
      BtC7KHh3Znuc2U9eP83HTxXJAPfS5wDGXsDQ9Tl3/CuffR4i32d0sEv91h0Wwz6ypmNWqjij
      IZHvYdWbzM46FFtt3MkIo1RGkpVnagi9CIVag+6jRxQbDVRdZxr4qEZuGRlrmYSui6xq3PjF
      r5AUmdWdOy/VI7iLBb/4q79k9/Mv0Q2Dk7Mumq5xdnjMbDIlZ5koqsra9hYHXz7Ed12GvXM0
      XafeejsKWb9NvPaBcPdVq0ZmGblKjc5Hf8CbT1n74M/I0pTB/iNESWZ+3sWqNTj8/X9Es/KM
      jw9p7Nwl94qemVyxyM//y3/71fvWzvdTkqneWuHD3/0nKo06jfYqk+GIwA+oNRsUKmWGvXNK
      1QrHu3vUV1uMzvu0NtYxr+cNvheELMuy3fEcJ4xpmDqaLNFfeGyWLB6OlhNTq/mlXIosikRp
      iiKJ2EGEJAg4r6kecFFXiC7U3SbHhxRX14iDpafJKJZwpxMiz8UolpE1Dd+ek6XpMqtK1dC/
      IQH6u7BUmfAFbJSXpagrZHx/59EkmZx8PTx6UYQsu64zes1Pl2vn8zU/aUSALAv45KNP6PSe
      VH0MXJdL+V5ZxsnhHnuHJy99siSNmboxkOEEEWmS4EbfPCw4nS6Y2Qvs+Pk6qSiOmPvPGpKl
      jJ3LiftOEBFGEXZwOautb7v0v0HWpTed03def+j0YL7gZPpy+cLThcNn3TFektK3Xb48G/Cn
      szFJlvGgNyZ56qfrTmZ8dDbGdj0+PBniJymfng6J04wH3SEHkyfX4IURyVODAyeILlVkPv/a
      b/RYXNkNoiu1y/u2+8ZWc74wgkP0XA3XnjLXBA6PegiRg7KyQUmMmDgxd3e2GY1GrN+8R+do
      j8ncwyoV2agYHA9sJouEal4kE3UIF4SoCKGDVWuxUiuxcFx0XeKj4wkrJZ2H/Sn36iZ7tsB2
      XmQeJJRNDT+FzYKBpoqEKQyjGDG0eWS7NAomTpKSBT6WlaPvJpTlBFnRUBSFopLw0fGM1apF
      FoWkkozn+jQreSYzl3kY4Xs+sSBxPJxwf7VMZxzQqpgkUUgmKURRCAg08jk6wynzFKQkJhYk
      ToZTdhplTsdTSjmNgRPRyMmMvQhTlbD9iJV8joEXUtVlhm7I/dWjNw6TAAAIMUlEQVQanutw
      OA8oKCITL6KWU+gufGRRpFEuEgcxfhTTSSL6bsRaMcfx1KGV1+nOHEzdoFHKMZ87LKIEXVOY
      LTw26xXmXoQspBwM5qRpzMz1QZQJwpCJ49P3Ilq55bxHs5hn5AzZm7i8t2LxaOggkBFHPr6o
      Yc8XbJVNBODTzjmGVUAIfSJBZjCdcW+9yWLhIms6bhDQm86pFYu0Cwb75yP2ZBXPc2k3akym
      M/wUDE1DE6GefzNVrp8aAmVEYUi/32d6foyUK7HSatLvDzg5OQbg1t37HB/ssvBC6pbMYOri
      2DMc16W9dRPfD2k3qxweHZOmKUbOYDKZLLU1LQsQ2KqXkUWRrUqB9ZLJZtlCECVaOYlUlLAX
      PrqhMZg61C0NUVLw/QBNEXkwdtHTGF+U+bw7YyMHXT9jrzeiYCwNwK1akYXj0lt47A5tTE1m
      6Hh0ZwvIMh6ObBAE2uU8tZzKVq2A7bicL3z2Rk8EwI6GU+wwZadm8WBgkwLrlTyR7+EkGUGc
      sF0rsT+YkgERItuVHN2Zx416kcPBlDjLyLKM8SLgRr3IIohZNRUmfsxmyWS1ZDG3HTRtmcyy
      25+Ssuz5ulObk3nAVsnA9kMWQUR/7rA/cUlTsDSZ/sxGkBREUcYUMxZxRqOQp6ZJ7A9mCIrM
      yehJhO1ef8xarUJOzJh5IYqqoEkCyDoFIWIWPukNK6bBRjlHjIicJdSLFg0Num7EwcXvZKkK
      o8XyyV+yTGqGQsXKsV7MUTJzlA2VovrjRhl/F0KWZVmWxew/3Ke5sYUYu4xnLo1mnX5/hC6n
      pLJBvVKi3+0g6gUKushw5tMo5+gNxlQqFRTdhHDBYOZhKRlepiAnHqJRpJw3WDguASJ9OyDL
      Uha+j6rpjG0XPwzJ5XLUdYmeG1E3FEZ+hClky7DhKCQRJYIopqhK2MkyZKKkK8yCmCzLKKgS
      bprRHS/YrBc5n9pYOQPP8zFzOXRRIE4T/DAkFhVyQkKAyMT22KoX6U5s8qaBfqFcbWoKfhij
      qjLjuUMoSBTVpW7q7mBOu2yhShJxFHLqRKzmdRRJIMsETqYLVgs6JzOf1byOqsicTJbruouI
      dl77SsvodLJgvVYkDCNEUk4XIU1DYejHlFWBf793zm921pg7Ho18joXnoWo6juuSILJazpMm
      CYYiMnIjHM8jFmSaloapKcsi54IAgsDYdpgGKXebBU4mLmtFnYeDOYWcAXFIpZBHIiXNQJME
      OnOfoiIQiQoFKWMSZfh+QCWfQxZg7nrohoGUZctaywJIZPSciHpOJc0yREEgzTLeXa2+kW7c
      ay/QNT9plkZw+u3G6NcZOT6+5+MkGW743fMA3yWG6z3HMa6QZYwWHvuDCU6U0J/ZzIKYhedx
      MHFIkpj9kU3G0kCbLByGbkiWpUy95fWMHZ/edM7ADZk5Licz96vvd3GSb7225/nuz7PPi+D4
      AWGakaUJI/daZPhVWRrBScDv9ufcqef4U2fI7ZLGcWpwxxKYhhlrlkrPi1kvGJi6wtQNmZBi
      ySEfnc/57UaVvbFDQYw4iHTuFySmUUbVUNAFmCYQhSGPJi43yznOnOUwYO7HSFnCwcznft3C
      DhNKlkkaR9TzBgf9CaqmM104lAoW8/kCPwVVVbhZ1JgFMdV8ji/PhmiaRmJPWStbeAuHj12X
      VVPlZO4TeS52DGQuFHQOpgG/XCszdgMqps7haEqaZihANSczcQI64znVoslhb8pKtYghJNiJ
      wN16gYntcOZEJHFIhshmxeJgZNOyFP5zd8G/vdOGJOTzwYIsTRAEke3qcp/1cp5z26M/nrHW
      qhF6Po1SgVpO5WF3SCarVFSBczemZWmMvZAH52N+s7NORZP4/HTIVrtJ5rvoL1Gf4JrLSP/w
      D//wD6QRmZwjjSMKmsp2UUXOFUiiiAIpjiThBTHrlTzj2Rwrb+EFMW4UU81pZGnKZG4jaAaN
      UhHPddifOBQkgTMvJo4iViydSBCJo4jO0CaQBHaqBfpuSFlXmHoRd1ZK7J2PSESFsi7TdSJa
      OvhSjrljoykqCRmGJOKECWulHA96M+40i/gJCFkKabyM4UlSmpZO33bJ5wyiNEMSYLNWYOr4
      SFmKaebojqZs1MvMFy5hBlGaUTM1FE3H9z0s3SCIQqI45mDqopESZuCHMZKi0M4rfHnu8P5a
      ic7Uo5Q3EeKAo7HD7XaNIIxp51X6doAfBgzdiKJlYokiG/UCY9sjI2PkhkvpjiQhSFK6U5sg
      FdhZKZOmGRVNYugnlFQRUVWZewGtN9Sz8jYhA0z8hKnjI6QRU8clSE0OJx3kLAJJZdVUOFmE
      kKZM/ICSvADdxLYXnLsxG3mN7iKkrac8POhQkDOcICURMoaLkIIq8M8HPZxEoKAITIMII0zo
      TBecjia4qchqXudgZHM6XrCxovHR6ZjxwmHk6Eztc0oFiyAKiNKUIIpww4SZ47I39fGSlIXj
      oBk5FosFqSizVtD5dw+mlA0VVZHpjSckksJk4XA49SibOrcqIZ/3Z5y6EVISsYjBiRLSOMFL
      IY4jetMpRs4gjQKcCGIEJvMFHTukmTcgEVGklP/tk2NuNcsc9waoKxU0WeD//PSQZt4giiVm
      XkjP9iibS0M2jgJ+96iLHwSU8xYrlsYfjnsU83k0EiZ+jKElnIznDGY2fgolVeDjzhBRHlO1
      TLarKZJ4PZf5KnyrEeyGMTn1SbxclmV4UYIAGOrrTyjJspT+IljeWN9CmiaEqYAuf/c//+vf
      4eJEeFFy5TtkaYqfZBg/kkCAF8bP9bsGUYwkSd9aa+2a5+P/B2+rqevjAPIwAAAAAElFTkSu
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='FGA Vs FG% Per Player' width='192'>
      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
      bBflJQwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Points Distribution Per Player' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Rebounds Per Player' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 10' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 16' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 17' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy995Mk133g+cnM8r6rvTfT4z08CUOBBOhECpR2RcrsUlpKq9i72N2Ljbi4
      uH/gfri9iI3dPd2uxF3Ri6QEUgRIAiRhCG8GM4Px0957U9XlTbp3P9SguwvTXdldXT09pj4R
      CAAvXn/zZVZ+872ved8nCSEEVarcg0iSJMl7PYgqVfaSXVMAVVVRVXW3xFepUhFsuyXYNE0k
      Sdot8XcFwtC59OFZknmTIyfvo9bvLtlfy8QZnU/QVuNEc9QQ8tpv0UjvXnZNAapYIyk2DnXW
      8nJfHo+Z5u23P+TA0ePMDl0DXx0uI0U0nsTj9eIJt9IoLfDcixf40gPNZMKnkWPDuEItmJkI
      iWQGj9dJTWMPyYVRhKeW44f2Uf0ElaZqA9wmvPnay2RzaYaGR1iMxHn/vfcZ6BuiPiAwgnUM
      XxkA4OTxA1y6MoSuponG0rz/3rtcHxzBp2h46xu49PZvePPDQcaGhzGq7g1Lqgqwx8g2J0G/
      m8MHD6AKB+31PmIZjYb6OmrCtbi9AXxuN8GQH8XhprGth4BHwS5yZFRBQ30dtbW1eP1B3C43
      De3dtNR4ae/oqP64W0D6yA1qGAaV9Ijm83kAnE5nxWRWqVJJ7Ha7tGoDqKqKYRgVE66qKpIk
      VVSpqlSpNNJuBcJyuRySJFVngCq3LdVAWJV7nqoCVLkrSWVVLgzNoRtmyX5VBahyV/LcW/1E
      E1neuDhRst89owDz0RQ/eOkyU4vxiso1heD7L13mb54/RyanVVR2lfLpbQszNB1lf1u4ZL97
      RgHeujTB6f1NvH15sqJyhRDEUzlkSSKTryrA7cIjR9r4N888QEdjsGS/sr1ApqFy7co1XME6
      9ne3o+VSDAyOUtvcQXN9qCwvkBCCgakIdptCT3OoorlEsVSOV86P8junuqgLeiomVwhBPJ0n
      p+o01nir+U93EJIkSWXnAmWjM4Q6jpBZGgdgdnSYHDbyah7TNFdjCoqibFnmSjLHu1cm0QyT
      P/nMMdzOyqUq+Vw2vvLoAQB0XV9t75+MML2U5DP3dZb98vpcNnwuW0XjKLcTo7MxBqejPHV/
      FzalvEXDr86MMBdJ8idPHcPluH1S0MoeiWKzk89k0G68TA6nk/a2LiJTY8itjSiKgiRJ2Gxb
      v0TI78bpsOG3KXjcDhR591dob16epKMhyORikn2tpdeLu4VpCl46O4JmmHzxkd5bct/b4dUL
      4xzuqKV/Ksqp3qayZEwvJagNeFhO5OhqClV4hOVT9pN2hlqwZRepb2ojEY9R37mP5Nw4Da0d
      ZQ/GblP406dP8IdPHr1lL8Gp3iayqm65VqwUZ67P8DfPn2NyYc0Yz+Q15iJJ4qkc8VT+loxj
      I1JZlZ++cZ3Z5WRR+0OHWlhYSXOwvbZs2c88dohDnXV03qLnvBFCCJbjGRZX0qsZCtVI8C3m
      By9dprXOjykEn7m/Byj8MOcG5tANg0eOtJVcin1kJ+mGydGu+oraHL98d5COxgAXhhb4s8+f
      rJjc24VsXuPbv7qILEn8ydPHCXpd5dsAVcrjmccOMjgV4eS6pYQkSTx4qGVLf5/Ja7xzZRKb
      ItNa56fGYhPNdvjksXZ+/cEwj51or5jM2wmbIuNx2jFME6e9YJtWZ4BtMDwd5a3LEzz94D7a
      6gN7MgbDNHn+rQE0w+Sffepw2UbpbpFRM5ybOsPptgfwO/17PZySVHOBtsnZ/hlO72/mg76Z
      PRuDIsv8wacO87VPH93Ryy90HbELXqtXB3+N3+nnlYFfWY9BCDTdwDCLv8F5zeD6+JJlGsNH
      MoSmIUzrvhtxRyvA1GKCNy9NYGzhQVWCzz/cy1w0xece3GfZVwjBciyDqt0a16gejbLy9z8k
      e/GiZV8zm2Xle98n9oO/R2iVDd6daDnNldmLHG8+Zdk3msjyzV98yI9fvVLU/ot3BphejPOb
      D4YtZeizs6x87/sknv95WePdMwUYnIrwk9evk86VXznixfcGyeU1ro0vVXBkm1Pjd/OFh3vx
      uh2WfYdnovzyvUF+9LEfd7fI9w/g6Okhd9n6evmcyo9nBT+ZNdD18hTUNAUvvDfI+9eni/Z8
      dIa7+fpDf0lv/QFLGTnNwGGTb0oh6WoKMTy7Qndzzdr1hODHr17lf/zyPDl1LY5jZnNILjdm
      JlPWfeyZEfzGxXFO7Gvkw8E5Hj/RWbLvXCTJi+8P8dDhVo73NK62H+1uYHR2hU8cu/2MNoeu
      kRwepbbu1rj9PA/cT/q99/B//nOWffN2J8q+fWhIGIqNcmpLzEaS5FSdC4NzPHSolXKcUS21
      Pv7gicN4XcUflAcOtfDAx5wCwhREE1lcThvJTH41mObY14MSCiIHyrPJ9swIHpqOcGlkgS8+
      vB+Pq/RP8KszQ4T9bgano/zLz57YjeFuCTV2Bm3lDI66T2P3HyvZN3v5MtmFZcTUJLXf+PNb
      M8ANePmDYYZG5/i9z5xcNdyFEEwvJbApMk1hX1muVNMU/PqDYWoDHh463LLrKSBCCJZiGTJ5
      jc7GYEWuJ0mSVLYCCNNgaKAPd6iR9uZ61Gyc6/3jNLS209IQrqgXKKfqvHt1ilO9TYQDpd1+
      qm7wj7+9Ro3fxRcf2V/Wg8rmNf7ht9doqw/w1AM9a+2z/4hk84IwcTV+uaQMYRhkzpzB0d2N
      vbl522OoFN/825/jWZhh/xee5OEHD+3ZOCqBqSfBVJEd5Qfk1rOjXKDcygz2cDep6CQ015OK
      LpIxJNxud8Eyv/HPxHyMX/z2Egf2tfDUFozHjXDYZH7nVGGZZFpY+0srKWyKxMRCvOziXNNL
      CYI+J0PTET59X9dqu7Ph99AzI9i8ByzHgSThfuSRLY25FCKbRXI6oczI+JcCOWZScNRj7mgc
      W2UxluGVc6P8zqlOWupKu0GFHic7/T0UVxPOpj8sLViYZEa/iTDB0/1nSPa1tJVsXsdhV1Dk
      7f/WZSuAECayIq++YDUtvXyi2eTS5WuETh5fNYxmxmYIDF1nPJVArPua7hZNYR/722oJel03
      xrn9Ca67KUQ0keW+/c3Ffy/ZUbyHEAXBlRlwCfKDg+Q+OIscCuH/0u+WJaPxn32F+mQSORS6
      JQUK3rw4zqneRt68NMHXPn20ZF9TWwHFg5FfKB6baaLNzWFvaWW1spdpkv71NELN4PyGihIs
      9J9YiPObd94lEGjij546ve3xlq0A7nAbmWvXcIUaScRjCF1lcnae2qZWJElClgvKcToo4/JL
      tNZo28oM3QrC1BFmFlnxsd4Ku//g1qKqpXj4SNtNbaYwSedT+Jz+stegwjQx02lkn/XaWzYF
      st2OZJrWzy6Xh75BaGmCxvq1dkVBqa3MkmErPP3gPl45P8bTD+6zHLPs6UZu+CySLYS8rm/i
      V78G00QfGsb3mU8DICQJu+84mCaK4l2VbeQXkNQp1GQMRXlg2+PddSPY4XBgxuOFH3wbmaFb
      ITP9PYSRxlX/RRRPaU9SJXh96BXmEjP01PXycOejZclI/urX6JEIruPHcJ8s5NsIYZCb+0cw
      dVwtf4wk2260i60/u5FxsNthdgEeuW+1eebKONGJRfY9dgRPyFfWmG816ffeJ3/tGu4HH8R9
      cs3pYeZyCF1H8a3dh5GbYX74hwRCnfjbvrqt6+zIBtjGRVBCu5T+KkxAQrC2thVCMD86gMvr
      I9TYWtaXWghB7soVbPUN2JvXcnZMXUU2TExNL/HXVkM2kWQZ1kU/hZHD1BJIkg1hJJHkgv97
      W8+uow0GhuFgsZ21MrVMsDlMbCa6pgBCwFIEFBnCNZTlw9wEXdVZHJqlfl8Tdpd1vGQjPI88
      jOfhh24al+xy3dRXUQO0xJ4AEYSbJ+0ihKYR+9GPEaZJ6I//qCCzrBFWgMTbb3HtP/9f6EvW
      QSwjO0F6/K9RY2eL2s2hVnIva0jamkGUjCwyO3yd6++8uqV1+sxz/8jY3/wX1PRaCrA2Po46
      Ok7yxReL+j4eCfOJcwkeStR8XMxNmGqU9MR/J7/0clG798nj2O/L4Dq+f7VNklzk39bIvhZH
      ktYMx0x6iWd/+QPGxi4UyfjIwVDUZlMQRw8iQsX+8H2PHcHucdJ0aN3bkc3BxDQMjYNevjJv
      xNj7/UyNDjPyzvWyZcRzOV4fHyGzPkotBOJyH+KDC7A+eJfNIbndSGnrQJjQdUQuD7qOUAuy
      90wBps//Gqd7lOW+Dy37asnr2PzH0FN9Re3qxAyO1v1oM7OrbZ5gDYamEahv3NKXLTc1gTMY
      Jje/JsPW2IgZj2HvKN7bkB4foaG2ndT4iKVcIzuJ4mpFzxSH85fmXuCS6SC9/Npqm8jnkfQA
      stKImU6vtp/pX6KtuYOXLiys9TU10oP/lXT/f0IYudX2iZUx/tMr/5nf9Bfn4LgDHpoPtyOv
      zxtyOgpeJbcLtmCXZc5/SOzZn9wUbTVSKcx88f4Fyaviyl1F8uawQtVy/PTM9zgz+HpR+6sj
      V4mlx3lzbGC1zTRNfjT8T/zd9PNkktG1zg11sK8L7reOD8k2G8HegwR6DqDYC7GnXVeAnJbl
      l1f/icmV8aJ2xwk3s44Mno6P+fWFuOnLLWcPkvjhq4jZrqL2wJe/hK2lBeehg6ttNpud+596
      jKOfeLioNPjw0gB/997/x7X54lSBpoOncDu9+Bta167n8VDzZ1/H//RTRX09TzxBTmh4H7Ne
      /9sCx1Fcrbib/3lR++tRCT0/x9nE2osnud14n3gCzyOPFEU07zvUw+iSncdOr3k3RD5L+oU+
      0i8OYa6btYan4owMZDh3OVV0PSEEhllc91XIMosHGon2NiC28pG4cB4lpKCOrCm+EYux8qMf
      s/L3PyyWHY4wUB/GqI0Uy5h/jvT4f0MYa0o0uTSC3+nj6tT5or6dQSf980N0hdbeDSFB2m9H
      cbnIOde9tpIEoQDYi1fz2uwsiZ//vOiDImSZ80xzxhxH2ArPf9cV4NzkO4RzF3j16g+K2vd1
      /ymPHvg6gbr71waoaVz7zfcZ/O2zRZmK6vA4nv2PoY3NF8kQNQHyB9qLvvSGusTZS/8P/df+
      I4K1H6Z/9gzdYoDBmXeLZHhD9dQ0thfW5RY4OtoJ/dHXsDU0WPZNq1l+NtrPhYWxovZDLQ8y
      ptVwqGntiyVJEo7uLpy9+4pslqDXxZ9+/hMc7V5L/0BxgfcAeHqQ7GvGYLPLTou3g32e4sDj
      b/p+zrfe+b+LPkDJfIIXrj/Hzy4/i2pY70Cz9cYxFoZR2taeUVrPcHHmHNcXrxV9sLQhg953
      LmH2Fef36MMXoD+GkVrLpO1pOozd7uJTR75Q1Peo0s9/ONFGN/1rty0r/NET/wu/96m/JOyx
      9mqlXn0JKZwg/e7a753RswwH88zUysTUBHALFOBoKMREbJYHaotzYqSubpRHvwA+72rbSnaJ
      S9oI76Y+JKevaW5fo8k1dZozzdkiGT859wN+8dZ3in7cxWyG0Viat+YirJ9HPtVYi9vh58mm
      uiIZ5ol29GMhhGfd10YIJlfGSeSsawgJIXjuyrN8/+y3yOtrL9PI8iDNgRYuzxav30+13sef
      PfSvaQ60rhcCyTQkkkUvU1bN8IvLP2EiuqZEmiz49TE3vz7uI6usGf8HmOZ/PW3nGf/asgEg
      EjmPV50glhxdbXPaXCiygsfhQZHXvpzqxASL3/wmmXPnimS8K2d5NjxGct07rTsUJg+GGTjo
      Y/1U2y7bELX7aFOKDWD1TTu597MQW1NQWZZ58ugX6W0+UtRXyQUwZi6hqMUOAL/TT623+Pfb
      DFtvFu38CLbetUG7HR5agu3UemsJuguyd90LVBM6zVeb/wK57Yhl34C3DkdDIz6bE6d9TTGc
      NWEuy+dpqi0OrNiX4+TzCWypHNywg+ukEEp+P12KD2ndL+MKPUXTqBd36KEiGdm5v0dSPDgd
      LhR3IaluOjbJO9dfIoPKXzz6b0uO2RQmkfQyHruHRC5Ova8wOxxtOsFbo6/x1IHPW943ug5X
      +goz2elj4Cq8JOfH3qNV9fDGpV/w9Sf/PQASEkKWC4HIdbOF0nwSz4XvY2sv9oV/ufswyzGF
      jto1I9hpc/L1B//ypmFE+y7xljHIycsqBx5YkzNvq6M53M2ikD56zIQlL19pfQqnIRc9Z99n
      PsOJw0ewNTUWyZZaO2AlDv61WUuYJtlz57A1NePoWEtodCTbcQQOQcI6U1gIwUo2it/px75O
      6cbtDi70LPE5EeCjT5uMxKONjWDqyDfGvINIsGBmYhR3TRO1wcLLmo4vk5e8xfk6kzMorlbo
      G4OHS0fqFNnO57NHkZwO1u/VOd5ymt76g7jsxfbC73d+HjWyjCu8FgOwe7x8NfQEeNxFNsD0
      GxfQXnubqSWJ3mc+tdouOxsx1UUk+9rXJmg4yMxNU++1XurIkszvdj5NOhWjzrsWgLLJCk92
      f7rgalyPpkE0BvW1q+kNQpZ5L9uPbuo8bju5Ou5TDcd5eeRHfKLn4dU/dyDzJ2YhfuAw134+
      OdCM61P/x03j8zufxq/tR3JYR+EnD4QQETdDB2pYn8z8zKmvMZ+c40DDulwin5fw4ZMFg3od
      kiRhb705EBn60z9B6HohreMG6vg4+uISuctXCf/lN9Y6HzkAi8vQbZ3lOxYd4b2xt5FlmT++
      7+ur7RfiKToT+7iUjvLZG22mkSb34X8tBNMe/Y/ADhQgn5gjIwdYmRqjNngM09CYGB/C9PQU
      K0BDHVwbgGbrl8mIRtEXlxD5HO6TJ5E8hQJWkiThcXhv6q8cO8zHU+OMXI74wFUkl4vQ/SdW
      XyZ3ZJyRujoORceBNQVwt3ztJrkBd5C/aP4ybCGRTxKCptEo2OyQzqwt6eJJuD4IXjecXDdz
      XekveF+SaejtAgpr07Ggjl2xE1MT1NgK31lfTQO//8X/7eNXxKHYC0ulLeS+SCMT0NwE03PQ
      s+bVMrU4SDKybc3tesKXo7kuTE242C6o8YSp8XysZIwkFZR4i0g2203BPHtLC9n3z+Do/ViO
      mN0OrVtLIHQoDlRDJeQoXi51qGEGlBGe0NfGLek6UjJX+PDccIOWrQBGPofbX4/IFVxSk4PX
      SGR1ksl5juyrXyuM5XTCfccLf2Tlcw4EUGrDSE4Hpt2OWYaP2sjnC2GxXA5D11cNZPHJRwi8
      8Et47BNFhbE2xOlAnD6IpDisxyxEIUCTVzFtymp/KZ/HEKBk84h1MuSgH2YXEYd6VtsdspOO
      mi50U8Nn91uP7/RxQBTuzaKv3N2BNL+Esb97ta/Qk+TnCk4JZ+s3kOSCossJL6G6JLZUi/UY
      KoHNhu+rhSS4cq/X5Gvhqyf/BLviKJLx8ONfYf/8FPUd+9baFS+Onj8EU8N03gg2ll0aUc9x
      +fI1XIFaWupDeP1BFCPB2LxBd3tl06G3ixGLITkcyJ7ySiCa6hLZmR8h2QJ42v+8ZF8hBKmX
      XsZIJAh+5RmkG/7l5GKMsXeu4wx4OPgZ6+2BtxJhZMhMfRskBU/7XyDJN/ZjaDqMTUJrE3gr
      Vz4S4PXhV5hLzPIHJ76G03Z7FErYUSqEbHNx6r77P9YY3MqybdfZaeqF0LIwNorwh8DqfkwT
      bXoaJRhEj0axNxaMP10zUFxO9Fu0J3g7SIoHT8dfAdJq3hFQ8KUf2J2M3ZHlIRp8jcwnZukM
      d+/KNcphUwUQeo5333kPZ6iZ+08cqmS6yO1PIoYteBwzWrq2PACyjPdTT2AmkkXxgVBLGJfP
      jcNze3ztPs7qV79MhBBkF3+L7KjFGTppmXP11IHPs5iap6Oma0fXrTQbLoFS0TmuXL3KVETF
      6XTw5S88vRV7q4g7uS6QMHW0Sz9Grt2PreNh6z+4B1GT42SX30DPLhA+/L9zJ1bY2XQJ5PL6
      SSbSyMgcPHT4njttXJJtOE7/i12RHc1k6Fta4IHWdpwVTg+/ldg8LYDAGTwCd/AbsqHaJpam
      UO1BAqEw9UEXu7+P6N7h/alx6jxeLsxO7/VQdoSsOAh2/zm+1i/d0WcibKgATk+Qo8dOoMem
      eP9C3x2s37cfRxqaGF2JcKih0bpzlV1nQwVIRWZRZRenHn6ckNPArE4BFaOrJswXDhwm5Kpc
      Udsq5bPhIrS+6ygfvvgiac2krfd4uQUJqlS57dnQCxRfmIBQJ/GFCTo6yttreyd7garcG2zq
      BUosTXD+0iSRqX6OnnqYh+47cZMb1FDTXLjUh8sX4tjhXjKJKCMTM8gOL0cP7n75kypVKsGG
      CtC47z5O+ZbhQDuK3bWhEZxdmadp/ynSi4VdQm5vABsTCMVW9iF5VarcajZUAIfbR1dX6RIa
      Do+PxMI8el7FMAzy2SztPfsZGBhBljvKOiSvSpVbTfl1gYRgaX4WV7AOycjjsNuYmpmlsaUD
      n9tRtQGq3PbsqDiuFVUFqHK7Uz0iqco9T1UBqtzTVBWgyj1NVQEqgDC1oiptVe4cqgqwQ4Qw
      yUx9i8zk/8DUE3s9nCrbpOqk3zECxI3N9+L22/64EULLkn/nvyApDhyf/HdIys52h93JVBVg
      h0iSgqf9GwihIdv25vT47SK0LJg6Qs+DqcMNBdDyGpPnh2k+3I6n5s44S2CnlF8VwlC5duUa
      rmA9+7vbyCZXGB6fxh0I09vZWo0D3M4IgZmYAdmG7Furoj36Xj++ugDLo/Mc+dx9FkLufHZ2
      SF50hlDHETJL4wA4vUH2dZhMLCaquUB3At7CwR/muiLE9fubGftggObDHbemLtBtwA7KotjJ
      ZzKrDyqXiDC+lObwjWpnH734VQW4c/DVBjj+hQf3ehi3lLIVwBlqwRYZwt/URiIeQ89r6PkU
      U3NLdLQUyoNIknRH7xetcvdTzQWqcs9SzQWqcs9TVYAq9zRVBahyT1NVgCr3NFUFqHJPU1WA
      Kvc0VQWock9TvgIIwfLCLMns2kl+iUScXQorVKmyK5StAGpqiYWEwdjwYOH/MwnOXbyMYVr8
      YZUqtxFlp0KomQTB+i7SixkAHJ4ArY2FUwOryXBV7hTKVgB3TTP9ly7i9AVJxGNIwmB6egbZ
      GWR/V2u1MFaVO4JqLlCVe5ZqLlCVe56qAlS5p6kqQJV7mqoCVLmn2VEgLLESIZvXbvyvSWR5
      Ca0aCKhyB1G2AmiZCGNzKwwODgAQnRlnJZ1jYHC0YoOrUmW3KVsB8qkYda1duJyFmjKptE5b
      RzsOuToDVLlzKFsBXKFGZvovkFUhEY8RqvFw9cIFhK16/GeVO4dqIKzKPUtRYax0Ol3RYkiq
      qiJJErlctWpylduX6gxQ5Z6lmgpR5Z7nrlSAaCZCWk3v9TB2jhCQSIJxi8quCwHxJJj3jifv
      rstVjmYiPHflJ5imwTce+TfId/IkNzMPi8uF/77v+O5fb2yqoHCyBCeO7P71bgPu4LdjYxyK
      A9M08Dg8SBuecX8H4XJCLl/4963A7YRMFlyuW3O924C70gg2TANJku7srz8UliSmKHyRb0WR
      4Vt9vT1mR+cD3M4o8l2yDVOSQLmFL+Ktvt5twI4/kXMTQwxNzJFNLnPu3EVmF6OVGFeVbaKb
      Oh9OnyWWXdnrodxR7HgGqKlrIDYXQc3kMWUJU1Q3xe8FZyffI6tl+cXcz/jj01/f6+HcMexY
      ARz2QjKcK9jIfXVtXLvSR2tDTfWEmFvMvvoDvHj9eQ41Hq0+822wQyPYZHSgn3hGpbOri4W5
      GRrbuggHvNVIcJXbHkmSpLvSC1Slyla4O1MhhICBYZiaLfx3lSo3EEKQef990m+/vVrC8+5z
      g8aTkFchEoO25r0eTZXbCJHOkB8eRbLbMGMx4G5UgIAPFAWaG/Z6JFVuMySvB3t7K+gGcjBY
      aKvaAFXuVe5OG6BKlW1QVYAq9zSbKoAwDfquXGBkcq7qTKly17KhEZyKzjM8Msi18RiKNElX
      +zNUY4tV7kY2VABPIEw2ncPnVDj54CPVdVKVu5YN3+2VmX7GIxo6MmY2TnUFVOVuZUMFCDR0
      okanaOnaR09PD/K9lSK+q+QHBol9/wcYkcheD6UKmyjA0vh1Hv/9b2AmF271eO56Mm+9jWv/
      fjLvn9nroVRhEwXwhBp4+1f/wMjIKM/+/CXM6hqoYvg+91nU6Rm8n3pir4dShU2MYJvdhqEZ
      OL0e7Laq/6eS2NvbsLe37fUwqtxgQwVIx5Z5/Et/SHpuhHw2WYgDVO2AKnchG+YCmYaGaki4
      HDbi8TiBYHDb7/8tyQUaGIFoDE4dBXcFS3moKnx4BQJ+OHKgcnLvAfJDw6TfeBPPJx/BdeT2
      qi0kTJ3c6HcRQsfd86+Qbc6Nc4FicyN8eOU6WVXH6/Nx2/pBozHw+yCeqKzcZLpQGydWYbn3
      APmBAZxHDpMfHNrrodyEMLKYehJMFaElgU1mADUT49ln/4n61i48/hCffOi+bbtCb8kMkM4U
      Xv7mxsrWsREC5pfA5ykoWJUtY+bz5K9dw3n4MLL7NjsrQgj05DAIHVvgEJIsb74lMjI3xhvv
      XcBf18ZTjz+07fermg5d5XanZDr0zPQUJx/8JGZ2hVKlUtVsikgsiTB0RoYGyeQrd8ZARREC
      dKO6TXKXEUIgzDwf/66apoFmaDe17zWbKsDx0w+TWJji2OmHShYLW16YY3ZxiYXJEQKNrYwM
      D+/GOHfO1CycvQhjk3s9krsaLfY+malvoUbfLGp/9uIP+c4H3ySei+3RyDZm0y2RiWSKE/c9
      SDIeRYjNl9hNLa3EJ+dRNYl6nweHIt2WhbHkTBbTYUfO5jAreBJOlWIMNYYp+THUWNGJQ2k1
      jYxMNp/BZ/fv4QiL2dgNqqt893/+NYHGXiS7k6/87uc2MYJNRvquMbUU5/iR/UxMzRKub6Wr
      reH2swGEKHh3fF6qyU27hxACMz+P7Gxk/Qo7p2XJaBlq3GGk26Tw7qZ1gYQQLM2MMzqziMsX
      4uSRg1UjuMpdx6ZGsCRJLCzM4Q+GCQXuDjegEILZ+AymeYtOW6kAQgjmE3Nohq99UNcAACAA
      SURBVFa+DFPFyN1cI8nUVjC14jiHEIK5xCy6uYMlohAF1/RWTpkRAlJp0D52f6ZZkLEFg1kI
      wWJygbyeL2u4m9oAHrvEq2+/ga+2hY621js+E+K1oZdJ5pM4bU4+f/hLez2cLXF59gJDSwOY
      wuSrp/+0LBnZmR+CpGD3H8MePA2AqSXIzvw9CIGn86+Q5MIs/f742ywk55EkmWeO/7PyBj04
      WjjUw26zjqInktA3XHjRP3H/WnvfUMFj53bBgZ6SIoaXBzk/9QG6qfMvHvhX2x7upl4gX6iW
      9tZWTC1/2waCt0PIEyaaWSbkrtnroWwZvytAIhcn6A6VLUO2hxB6HMkWWG2TZDsggexg/SsQ
      dNcQzUQI7eB6eFyFAOVWUlPsdtB1cDqK2903ZHisA2leh4+0miLgClj23YhNA2HTI1d59/x1
      dMXNH/3Bl2/PSPA2EEJgCANFUm4bI8wKIQSmMJB3MObCz2sgoRS58oQwAKnIUK3IMxKCVbeh
      lYzN+m5DRuEZmciSvO0xlzwhpra+EbdzmPrO/XfFaTmSJGG7ww7EkSQJZYdjLrwUN8uQpJvd
      0xV5Rlt58a36bkNG4RmV72rfdAnUd/06n3jys+SiMzs7NdM0YXKmcPjaLUAIQe76ddSpqVsS
      dRRCkBoZJHbx/G0X5QRYyUT5cOrszgzbCmDkptHiF27dM8rlYGLa8ojZTRWgt6eHD959E3ug
      fmdu84kZyOfhav8OhGwdfWGB3NVrpH7z0i1JexCGwcLz/0Tq/DkyM1O7fr3t8sL150jk41yY
      Pren48jN/ww91Y+RHb81F7w2WDCkRyZKdttUAUYnJnjok09gpCI72xJZVwPLK1BftwMhW0cJ
      hxGqiq2p6ZacdCjJMo7mZnRNxVl3a+5xO/TWHWAiOkZ3uLQ3ZbdR3F2YegLF2XRrLthQB4tL
      hX+XYFMjWE2v8OY7Z2no3M/xg92354aYKlV2QMkTYnK5LA6nGzWfw+l0VSPBVe46No0Em7rG
      c//wHV5+5bc8/+JLJdOh95L84CCJF15EqGpF5QphkJt/Hi1xqaJyS1ywkKU6PG5tt2zSN5PJ
      8ZNfnWNk3LqUjRCCN0de48zEu2UbpUKYvDr4Gy5Mn6u4YWvk58nO/ghTsz7yNa/qPPfbKwyM
      llfCZ+NUCEXhyNFTHD95isceefC2LY2YfvNtlECAXP9AReUa6WGQlJtSencNVYOlaCH8n81t
      oW/kpr5nLo7RFnLz8ltXLS8XzURYTM4ztNRPVivPOzeXmCWtpvlw+iyiwqHS/NJL2PzHyC+9
      ZNn36sAMYY+D194v7x3YJBdIRpZ0UpksV69cvm1nAM/DD6FHIjgP7K+oXMXTgzCz2EMPV1Tu
      pjjsUBMsZKpaRVAddqgJ3dT3geOdjC2l+NTDhywvV+MJU+MJ0xnuwW0vb9tio78Zu2LnWPNJ
      pAonyjhrn0SLX8RZ+2nLvkf2N7MYz/Lo/fvKutamNoCeS/LyK6/R1HOEU4d7qzZAlbuOklsi
      +65ewOmrQc1l74pcoCpVNmJTBXDZ7czNzbCwtDtFXD/om+HbL14gkshY9p1PzPH9s9/i2vyV
      ovb3xt7ih+e/SyqftJShZ8ZIT/wtesp6rWjmcsR++CNSb7xh2bcSCGGQm/sp2dl/QIi1iK2+
      PE/0239N5uzba31Nk8QvXyD+3PMIiyjnptfTdeI/e67gQFgX5tfm51n53vfJXbtW/s1sQuq1
      14n98MeYeeu05fzgECvf/R7q1O4HFjdUgFR0jpTppKGuluAu7Qe4MrrAvpYaBiatFezK3CUO
      Nx7l6lyxV6Z/8TqN/iYmomOWMrT4OezB02jx89Z9Z2eRAwHUoRHLvpVAGFkMLYIw0gh9TZlz
      fVdx9Owje+XDtb65HEY0ishmMZPWir8RRiKByOUxlpcR617I3JUrOI8cIXfF2pDeLurICLLP
      iz4/b9k3d/kyrhMnyF3cfS/chjaAns8yPDKEL9RAdHmJY8ePVzwbdGElRf/EMp881m5ZfzSv
      5zkz8S7Hm09S4wmvts/Gp5lYGeehjk+gyKVlCD2NuvIu9tDDyPbSqbPCNMmePYetuQlHR0fJ
      vhVBCLTkVRA69sCp1Qi2qebJvPcGzsPHsDe03OgqyPf3g67jPHasrKxNIQS5K1eRHHacBw+u
      yjDzeTJnzuA6fhxbTWXTxtWJCfSFBdwPPmg5ZiORIHvhAp6HHtrV2kKbBsJMPc93/sdf463r
      wheq5wtPPXHHp0NXqfJxNk2Hlm1Ofvf3/jmmBNdHFrfk5DL0HKPD4/jrmmiq28GGiipVbiGb
      Jn/Pz07QPx6lqbkWU1CyNhBAcmmGvOKjI1hsM0yuTPBS/4t01/bwmQOfKykjl9f4/vMfYFdk
      /sUzD2ErozS70NNkpr6FZA/gbv269RLh4lVIZeCBk+Cq4GyVTMHlPggG4NjBkl0NTWXy23+L
      MEw6/tVfYXOVMe1HY4WthHU1cLB3rb1/GCIrhe2JNcHtywUSv3wBfW6OwFeewVZfX5aMjZ5z
      LJXj71++TH3Iy1efPFqe3B2yoQJk48vYnD7cnjRIzi3FALzhZmpFlL6+IU4cO7haF2gxMU/Y
      HWY+MVtUJ2YjMpkcmmGS13TyeRWwb/uGTDWBKSTIRzB03TIjVE6mEYoCmQyigmchSMkUOOxI
      iaRlHSI9l8XM5pBkBTWTBtv271tKJBFuF3Ks+HpyPIFwOSGRRPi925YLoC0sgNeLGolCmbbB
      Rs95JZHBaZNZiqUt343dYkMbIJ9JsBhZYWUlgTdYQ09Hm6USJKKLTMzMY3MHOdzbuWoDOBwO
      pmITNPqbcdpKf2GFECxHkiiKTE3IW962PCEw8vNIihvZFrROic7nIadCwFf5AruxRKHArr30
      Cy2EILe8gDBN3A3NZd83K/HCfdjWfdd0HRKpwte/zPszM1mMaBRba0v5WyU3eM5CCGaXkwR9
      Lnxuh4WAyrOpEZxPLfPcC7+lJuTHsAf5/JOfrEaCq9x1bBoJXprop+PIAxw4eBhJi2NUQ8FV
      7lI2VIBw6wH02AxTU1OE6lp3tCVydj7Kf/vuK7z+7vXyhURj8O65wt7iCpN48VdEv/1dzArv
      WV7JRPnOB9/ktaGXy5YxF0nytz8/x1uXS2/r2y6abvC931zix69exdjRhu+bGZhc5r8/d5Yr
      W0hPNtNpot/+Dslf/8ayrxCCn7x+nW+9eIG8Zm0vZM6dI/p330Kdnl5tMwyTH716hR+8dBlN
      L9iom54S+fjjj/P444/zyP0ndqQAY1PLdLfXMTyxVL6QpQg01MJytHwZm6DPzqL4feiR5YrK
      nY1P0+hvZnJlvGwZY3MxuptrGJmxzovfDqmsimGYJDJ5VK2ylfL6J5c51t2wpQi/vrSEEgyi
      zVh/2ExTsBRLY1NkYinrdAp1ZBRHby/q8Fo0P6fppDIqqm6QyRWq0W2aDbpTPrIBFMXGpesT
      7OtoIBQqM63CMGBuEeprby6itEP0xUX0SBTnoYPlG3gbYAqT6/NXaAm2EfbUliXDMEwujy7Q
      01xD0Fe5M9CEEIzMrmBXZDoagxW977ymc2V0kaNd9bid1sZ/vr8fW20dtobS7lUhBDPLSdJZ
      lQPttdbR5FQKdXgE17GjSDecAkIIJhbiGIZJT0sNcqkTYnZK1QiucrtTMh16txGmgZHL3bSd
      ztBUTL38YrCbXk8IzPzNJ5cYG5xcIoQgr2noH8u2FMIkl9tAhmGgfcyPLYRA1QzMj5XUEEKg
      6jfL0A0T3djaelzTddSP+81XT2bZ4preMG8qYFu4b33D011U/ebfSqga4hb674WuIz5WSFcI
      ganmEObNv1Vez978nE0d3Vgb856VSpt59keoczPUf/5L+A8VooBaOsHk3/2/oCh0/ev/gOKo
      3OyRPX+e3NVrOPfvx/voJ1fbn734Q5L5BP/85B+vJtrNr8T51q8/IOh18m+f+dRq35ffvMiV
      64M88uAJHn2gcASoaZp8+xevk9MM/uyLj+L3FoJN00tJXnhvkNqAmz9cF+X87dBLTMUmeajj
      ExxpOgaAqhl899cXMYXg6587WXLpkFNV/us/vYRpCv7t7z+F70aymJ4eJL/8KoqrGVfT75d+
      GJoGZy+BLMODJ+HGISaXRxc5c32arqYQn31wbYfVz87+DSvpCF889ae0hAvtRjxO/LvfR3I6
      Cf3VX+56uUlhmsT+7tuIfJ7gn38dJVBIaNSmx0i88DNs4TChr64Vx32l76dMRYd5pOdpjrQ8
      AIBqqPzo/Pcwhckf3/cvgRL7AXYbM53C7gtgZNb2A5i6jowMunGTRu/4eskUSiCAmU4Xtef0
      LHbZjmasbazPqRpuh4Psx847S2Zy1AS8JNNrRpgA8lqhfuf6WSCnaridNtK54i9WWk3hd/pJ
      q6m1sQmBbgqEAMOiCFPh9J3CyeXrZyhhZJBsXoSR3vyP14Ss/XvdFzKVyRPwOElni4sMZNQM
      LoeP/Lr9w0LVQFEKBQluRbU3IQrXUpSicuoim0V2ezEzxftK0vkUflcN6XV7RUzTxDB1hDAx
      ROHZ7ZkNoOdz5CNLeJrbir4euZUlJFnBGQxv+HflIoTAWFxEqa9HkotPLslqWULumtVxCCFY
      iMXxuV34XGvGp67rzM8v09LSgLxORjqbQdV0agKBoustxzMEvS4c9rUUC93UiaYj1Psaiu47
      mckjBAS81rPeSjKJKQS1666HEBjqIrI9fKP6swW5HEhykVNBCMHiSpraoAebsnZ/eTVNMrdC
      rb+1aMxGJILkdCL7bs0ZEmYyhVBVlNq1d0MIgb40hxKsQXau5VDphko0NUd9oKNozKl8EiEE
      flegdF2gnVI1gqvc7twaI1gIjNwMwiy/do8QgqnJOTS1eDmRy+eYX47cZOhE4hlSH5vGhRBM
      LyVuCvxkshkWo9GK17YRQqDNTWLmiqdmYWoY2enKLxuEwFyZQHzspBQ1rzIzs7y1+xMCIzuN
      2GIh3Y2fs8lsfBpjC0tYIQRLiSmy+eKTagzTYDY+fdOYU/kU0Uxlt+juuhGsxc+jpfoBA0/b
      n5Ul4833rzM7v4As2/naM4+vtn//V+9gszl49EQPBzpagcKP8uzr1zFNwb/5ygPIN6a/l86O
      kMqqOOw2vvzJtZNLvvPC2yiKgy8/dpSWclN9NyA/cJXM2fcQWp7ab/y71fbc3E8AUNxtOMKP
      b/bn20afeAdj7hKYBs5H//1q+w+fP4PNbuNob4rTx7tKjzn6BmZ+HpBwt3ytZN/NnvNvh14m
      nU/h2MJJPLOxEV7p+wWGmecbj/2fq+2/6X8B3dDwuwI8uf9poKAUP/7we8iSzO+f+GrRzsCd
      sOszgGQPIfQVZHv5W+zCQQ/Ly3Fqgp6i9qDXRTqTwbeuPo7TYcMwBR6XvWgjT23Aw1IsQ9hf
      nGvv9zjJqzncFV6qyX4/ZjKGEizOwZcdYUwtgmSvrI0jucOITATJW1wMNhRwE4slCfitA2my
      vRZTXUbewtg2e85hTy3L6aUtvaBuu4+clsLnLD42tcYTZjm9VBRAlCQJt92DQOCwyCreDrtv
      AzgcCExg+yd4fIQQAtMwkZViGUIITFMgy1JRu2mKwglAW+krBEIIZEmqqCtPCAGmAbJ80yks
      YCIhVzz9WggDPna6S+G+TWR5C89fiG39Vps+5y2e2LLW9+aTajaSYQoTBEUOiJ1QNYKr3NPs
      aSTYVCOoK+9v2eDaKkIIZkf6iM4XG1F5TePC+ASZLdSlEUKgj7+DuVJ+FqZpmswPTJOJpYra
      o8kMr18aQ91CRmMlyCYyzPVNYa6PMguBMXsBY+F6kTFu6Aaz1ybJp4vrky6spDg3MFsU1RZC
      kIueR02OFD3nnKpyfmyMTK74Oc8sJbg4NL8lYzyRyfPbi2Nk8+ucHkKgZ8bQEpe35ECIxtO8
      eX6o+DkLgTF/FWP24qqMiinAR1PtVieU3PxPEXoCLXamUkMAIBlZZG64j753Xi16UG8PD2Pq
      Bm8ODVnKMJf6MBb7UD/8XtnjiIwukF1JM/xWcRr4P75xjayq89L5W1NzaOTt62iZPPP9a2nB
      ZnoZbeQ1tOvPI7Q1L9XUhyMI02T03b4iGc+/NcB8NMX18bWMXi09RT52gdT0T2Fd7cC3hobQ
      8xqvDxQXIPv5OwMMTUeYWIhbjvmnb13HME1+/t6aDIFBfvEFtMQFDNU61fqnr14gl8/zypl1
      MtQUWv8LaMOvYmYLmcUVU4DE4jQfXrpM//DklvrbfIfRMyMo3soWtvUEazB0jUB9Y9Eau7eu
      nsGlRfbVWXt65GAHIhNBrrc457YE/sYQqeUEobbiTNBjXQ1cHV/kWHdD2bK3Q017HbG5KKHW
      NaNUcoeQFHvBYLatGce1XQ1ExhYIdxaPbV9rDfORFO0Na4E3m6sB08hj87TDOjO4t76eoaUl
      ej/mUetsCpHI5Gmssd6XfKKnkQvDc5zct/40GQXZ2QzC2JKRfrSniWuj8xztWSfD7incu92F
      5CzcS8VsgImBQRoPHGBycJADBw9UbYAqtz0lj0ndLn6/ndGhYcTe5ddVqbJtKjYDCCFIpZJ4
      vH4UWarOAFVue4pmgHS6MrVZUslCWFtVVSSpoAjrEUJs6B/eqH07fe8mGbfz2O42Gbc8DmAY
      BopycwGqjdoNw9gwgLNdGVvt+5Ena6cyhBA3BWu2I8O8ka+0FRnb6btZ+736nPckDvDRIIx8
      mkQyxcjYJEKIDQetKB9FNQWJRJzp8VHS+Y1vcL3sRCJBdGmepWjcsm8ukyQRjzExMw+StOk4
      1mNoKqqmb9hXkqQbP4ogkUiwMDtFLJW1HEcykSCxEmF2MYIkyxtGOz/qG1leRgDLS8uWfT9C
      zWbRK/yco9EoAkE0Gq3oczYNjWQqydjIKKpxs6JAuc+5uC/s4Y6w2NwsY7E0si6T6WzHWzJq
      nmfwynWCjQESE0scOVD6sOXJ8VEkmwthRKgPl66HuTg1yXzOxCdJ6K1NWyrGKITYwrlpBhOj
      o8h2GeIaocOlD6qemZxARUYSguaGzTfRG1qWC2fP0dTRDoqL2i0eQC62VP5k/XNe5siBxpK9
      Z6cmsTvsTM/MEw6Xdk1u5znn0zEGrw7iqKljaSVDa12p/Qbbec7FfWEPFSBQV0uNEsAtabgs
      007sNHd2UFfrJ2tYJ3X5PB7qWjuRhXVKbl1zK25DQjH1rT8MYSIsQygyLpeLtu5u2EJ9bb/f
      i6emEaet9JFzit3NkSMHWIwlcTu3XsvUNE3roI+w0dDWRl2Nm6RRukBvLpulpbmBwf5BOnpL
      F/8FaOnuJj85h8vltnzOTm8Qd6iGgM9NwGP1Sdr6c07Gk7jdThwePx5f8MZf7xGZeAxDklhZ
      WsZqC/zK0gRXr44wOjLEcjRl0Rvy6Tj9/QNE41bbA3UuvH+WuYU5BofGsVIXPZ/iww8vcPV6
      H+oWdmwmoksMDg2TTFkX3RJahr7+AeaXY5ZnsiVSWWQgm97Cs8gkGBwYZHh82uL1EOiGQE1H
      uTwwTY1F9qgsyzjcXrq6u3AqkmUGwNzYGA5fAI/HU7IfFGYAXdjJJVf44L1zWCWvrD3n0kfM
      SpLJcjSJy2Yyv1DYV7BnM0CwtRt9cQGpZx9Oi6zBYG0bHS0Z6psacPmtS3y3dHaTViVcTqvb
      Uzh84ghLGZ22g42WD8M0DJBkbLKJrhuUrl4t032gF0M4cLqsaxnVNXcgPFn8XpflfLFvfy+p
      ZAJdclj2NdQcC8sROju7LRVgYXaajCbwu2QSGY26wOYzjMPppO/qZQLhWqYnL9HUeZj9Xc2b
      9vf4PYzPz5P3+akJh0qOxekOIBlzZJBo72ix+F1k2rs6icQzuCyOmPUFwjTULrK8kiAYbrnx
      13uArmWJLC6TyORYWVrGsPh6yLJJYiVKMhFjYgsV5ianJ4ksRJiatDpkTSIVjxOLJ1mYmraY
      iXSyKtSG/Lj9NfjcVlOzzuzcFAszS0xOzFmOeXx8klhkmamJKcsZYHx4kKHxOZbmZy37Or0h
      2htr6L8+YDHDybR2NCNJHg71NrG4mCjZG8Dv85DN5ahtaMJmUT7QEwhTHw5ibnGnmE1RsNkc
      tHW0UXqhpzO/lOTAvlYmxqdL9gRBJqfTs28/zfWFQ1z2RAFsdidzwwPEcyqLs3Nolo5YF22d
      zawk8vRsIYemvbUNVU3T2Gp9vldzZyduSccZqrUwgBXcLgd1jS10dbbjsFk9Ohs1wRpyaoqG
      Zusxt7W3YOgqvhrrKnKhcA1qOgZb2BiSXJ5D8jfy9NNP4LDM8XcRDtkYnIixr8vauHY4Hah5
      DacrQHdHaceE0+OjubkZLZOyXmqqGQzZTVtbKw7LMxtsNDcEGByZoau71XLMQZ+LiclJ4snC
      8niPbACJ1n29dHe0c/8nHtyCEayxsBDD5VDI5UqvCBPxOJpmUFNbA1soErUwOYZhczA1OsSV
      /uGSY5YlnYsXLjI3v4CqW8nWicZU7jt9iMV561krn8mgKDbL4ljJlSUWI0uYwrGlKLvL72O0
      7yp9fUNoJWdak3g8hhAFRVdV6+JkiXQOSUAqWTrDU5gm6VSSqclxAg3NFksaEyE7saMyMzOL
      avE8tHySiakIjfXBLc20mWyClcUIsWQhC3ZPbADT0Ehmc5jZHCsotHW2WQ4knUnj8nut/Smm
      RjJTUJKt7LdyeTxIag63x49i8W0yDZPm1jb8Pi+KZcVgG031Aa71j9O5r3TGayq2zEI0QTKV
      xBsqPQP4a+o5WuPi+tUV9nVaf/GcngDtzS2EGsKWa+lgMEh0cZ6sZhKyePFMw6C7pxc1l0Fy
      lDZsY7NjZP1NrERjyEqa1paGEmMxyKuCuvp6DN2wrHRnGCZOt4OcKujpaSvZFwRCdoGZIntj
      z8OezACy4qA+5GFyYh7NVLfgU5do79rH4cOHLYvE+kO1uO0S6XSaTLa0VwDA5QvgdTmoqQnQ
      0lr6ASp2O9PjI8zMzKHqVhO5weTUKJH5CBOTpc/G9YXq8LvsyLJCMlF67Z2KLXP9+gSaEWN0
      YsbSBohOjrEYSzE/PU3GcqmpksoIenp68HlKzy6j/Zf47Wtv0D88TipV+rBztz/AVP9V6tr3
      4XVbGfkKC7PjrMRizC4uYVNKq63L40doGVYiS8wtWlfRNjSTUw8/sro3fM/coIamk80kmJ7d
      Wtn06OIM1673EbN0dUksRVcQpkwyZl1CIzI3T7i5jXw6xcjoaMm+suKgrbUZu92OZDkDyDS2
      7KO+3ovfZ+36y2kmHqdC1mKJ5wvVceTIMU6ePEFPZ6vlLBdu7yKzNMZKXsJTsrNA08DrsTEz
      M0U0XtrF2nvkNJ976ndwiDxLK6WV1hWs56GHHqKzKcz+QwctXjoTWbYxOjyCXbGtnjVXatzZ
      bBZJhrEBq/fDRAiZ6bFBZhcKG2L2ZAlkaHlUu5/Pfv4popGohZUPoODze9EMHcniiwBQV1uH
      AJxe60oUjW0tXOu/hsMToKO+dP9sMsL85Dx1PS3Ekiru8OZjWZiZJB5L0n7wFAG39Zj3HywE
      kyLLpZU2FY+jmRrxeAqH20dzY11JJViZHqf3kc+QnRohD5SaP+cmJ9AE5JIZGltLK+1o3yUG
      pxZp6+ikrtb6WNxUPEoyq5FNZ+nq7S7xm9voPXSY3kOHLWUWkGlpbSQWz3PkxAlCJVYIat6k
      q6cd3TBpce3hDKDnU8wvrgASy7OzqFuYmrOqQnd7mPl56y11wWCQxMoy41Ozln0lm5P29nbU
      TIpwXSnPh8DhDnH0/mOYeZNwoPRSbDma5ODBViZHZm+qEP1xsukEU1NTTE1NMTQyXrKvLxgk
      n0qRz+ct9xUbeo75lSTLU2OkdWHxoREgScxNTCBsdnSttBHceeAYT/7Op9jf00Vtjb9kXyhU
      A5+fnUGXZMtZS5g6QwN99PUPoFmez2UQT6YRpkk0EivZc352mnQ2jykEH8Xb92QGcPrCBJ0x
      rl27hi/cgKuke05gGDbaWmqYiaoc6LJ2E65El7F7aznZaWUUgaFrZDIZHA6rFAuTqYkJ8qbA
      NHQ03cBZwhUaCngYGZ0HBJF4kvqawKZ97XYnwRv1g8K11u7HeCKB0x/CZXFYiGJzsf9AL8MT
      88iyzeLFk+no2U9Hz9a2qCo2G5lUjNmFCI2tHYR8m79KuVQKU7FTV1+PJNst7ZZcKopwhKi3
      Z1iKZWip3XwbpTAlWlq70XNJhKO0Ira0tTE1Mcbs/BJNnYUZd48iwRKtHT00GsaNfeuFascb
      I5idHGdsZJxQWyuJTL7kNAegqXlWYjF0w+TAvs7N++UyRFYSyLJMTbjGMlKqqhqyw4HLH8Rp
      L/09be3sQVPzaLqBzV76RbU5nLgAYWhkNWuXgGmC3+fH7rCOMGdiERyhepoCri3kAmlMTi1i
      l1TsgQbqgqX3745PzHDk2FGuXusndOLYpv2cHg82QyOdSGJKpXOdAFy+WlyRMVZUO90tpZdi
      fVev4PE4mV5McvhY6Y/H2MBVFlKCQ0eOUxPa41yg+PwU14ZGGBubtHA+SgRrwvi9Xurq63E5
      rHU2k9dRMMmkS+cCKXY7wWCAVHyF5Wjp6RMUauvC2BWJhdkZ0nmrzUM6Vy6d4fz7HzI4Yn0G
      1vDgEMOjE0yMlzbEAcLhIIuLC0QtjE8olDpJxKMsLkYsvG2C+Zk5InOjXBtbwGm3fs4tzfUM
      Dg7R3FY64CjJMrOjw8i+EDWhgKUCLEwOsRTXMDMrLMVKe5hUNY9q6qhZHWGU/k16j55mX0sN
      1y5/yNBEwTO3Z7lANjskExnsfq/llGgYOk1dnUiaZpl0lYjH6T1wGGGoxBKlH14uucL7Zy/T
      2t5Jnd9qHWuwEo1hyAq9Bw7hd1mlQig0t/USW5rHG7QuH97WXMtsTCPssf6qG4ZBKpXCFNbu
      A08ohLE8R9Y0LZ9zuD5MKmtwqK3p/y/ubHYSBqIo/PXHtrS0tkUKGCIQCSptfAAAASNJREFU
      gwkLExM3yPu/gXHhAkRiRYgWSqAELdSFuvCv487zBie5Z87NuXNn2NPy+UXTey6vrgkqAeFd
      SOD/3uIB2K7DYDikaNm0T/LvJRVsF48XilZAyc13gNOzc3ZZRqsF8i+7AB94CEdIhku3d4T2
      zu/fHMD0qlQ8E92yBCqU8EplVHYYusZOsMMTjm5BltE0nck4fzJo2D69iy6Neg3P2xecTCrt
      TofjZgPHsT49B/gzMlbzGZlq/Mm1xuNHVouYKBJHt8vVBl2VSZJ8gafPa9apwoHvYJoFAT8J
      TTeIpiH9wQ3LJD+O9YNDqmUf07JQFHEZbdMtyWaLKqVCIRq6znw2YxHPhfMWRVWJnyb0+4Nv
      H5p8Ra3exHcKLOI5yfqN3ysSy8I4uOar6gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Shot chart per player and game' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Shots per team' width='192'>
      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
      Nej/A2WlYdjdiIQVAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Steph Curry 3point shot chart' width='192'>
      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
      uG8Al7bm/0hLxCVJ/airAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      a5r/CwL5hwArlLPKAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Top 10 Assists Leaders' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2993Md55nv+elwcj4IBzlnggSjGEWKEhUsW7bH4/Ed37k1M3dmp3z/DNfW
      1m7V/rC1VVtbW5o7Htsz44ke25KVxUyCJEASAEmQIHLOBzg5d9gfQIqkRJGUTBIHQn9+YPEc
      dPf79Nvn22963ucRdF3XMTDYpIjrbYCBwXpiCMBgU2MIwGBTYwjAYFNjCMBgU2MIwGBTYwjA
      YFNjCMBgU2MIwGBTYwjAYFNjCMBgU2MIwGBTYwjAYFNjCMBgU2MIwGBTYwjAYFNjCMBgU2MI
      IE/QdR1N09bbjGdKPt6jIYA8IpfLrbcJzxRN0/LuHuX1NsDgHiuJNLOLkfU245mhaRqqqmIy
      mdbblM8wBJBHdE8t8b+furHeZmwqHtsF+vTn/yv/9//7Nn/7t3/Lz3/1O24vxHiWvbiJno85
      PRAEkvS8+zEDq/F7f0yO885vLhC9E8ciNdHF3/7PXzKwcsei9ATv/rqT6FcoT1dzrKwEySh3
      rpGNc7nrPPORp9tUq9kM3ac+YiXzVC9r8AfyWAGYvQG+8+Of8Dd/81f84KVK+k53E36G3ThN
      yZJTNEAnl82h3B+1xR6gQJ1kMQ6gMD+XorLBx+r8KjqQXpgjWViE6yuUp2ZiXO7uZCWh3vlG
      J5fLoT31aDE6Si77TF8eBl+dJ+4CCYKMp2wL5ZYPSKsw1n+KBVMz+9rLEJnlw38YZu+fv0R2
      sJOT528R12SKmvfw7YOtZOf6effEFWJZjaLabRw9vBenFuJWdye9I/NoJj97XjlGe7nnMVbY
      KK2yMTcbpqFeZE410VRRx+zCDBnNx/xcjIryRgRUFgZ7OH/lBqGUSMWWvRze3YSwMsLHJy+y
      HM/hKmng2Ks7GHzv93QNjDE4Oo+3qpW3XuxATQTp+uS3rIRDWAoaeO21IxSZ0vT2XMLuKuD6
      lWHa3niNemmVs2cvMr2SxOav5sixI1R6zQTHezl74TrBpIqvso1Xj+7DffdVo+vEFobo7Fnk
      hVcP48+f7vCm5IkFoGs5lgYvsupoYpcZZpUcOeHu+0wlk8qhAzPjIzS9+mfsLJMIhhJIQpbR
      3lEaXv0he0qdRMNBZGB1doiYcwt/9pffIrc6xKfnrlHxvcOPsULAXVzG2NQCqVI/mijg8xUx
      PT9IOplgJipS3mSD5Bw3pjSO/uDP8Yhxuk5cYGKlGNPtcQp2vsr3mkpIRpfR8LLvO28Rd51j
      24E3KfOYIBtDx0zj/pf4frmVyb6TdF+Z4LX9AcLTI0z4nBz54+8TsOlcPnMd35ZXeL25mOBY
      F52dfbhfbuXGtVFajv6Q1hKZie5PONczy+u7iwDIRSe53DVJ0/79xo8/D3isABJLk7zzq/8P
      LR6lZMfLfP9oK7ZHdJzKq2o4ce5dolX1lFVX48dC7bZq3j/9AcHSaupqqql26SwN93H+tsrN
      KxKgY3FWkXmCrpXDVYyWnSQYUhEFP06vA5MmEAuFSMsCHpuV9NI01/uvMDbWB4CaldjZJtDe
      VEn/2TN8MFNFdWUFtbUaKA+pFIcbv8uGKJopqW9j+OwEKTWA2VfGnj27KXWbUFJRYukcWypK
      EEUBf0U7nsFPCMcKSaZLqSxzIQpQsW0LA+9PkdpdyPJYD5dvTbDtjf9GTdFX6agZPCseKwBH
      cTXfO/LXiGOn6ZqJo4kCwiOOL207zI8bUizOjNB9rgvHD16nsmYXPyprY3V5jut93aTEV7C7
      itn72iGObCl6YCAy9hh7rHYXupZjdX4KseAAJtlGuUVlfCWILDqxWWUkk4mixkP86Xd2Yn7g
      bD/f/2EDoeU5Bq/30IuH/ZWPLk9NRciIDkwimCwWLHem8ARBQBBFsooCmNC0FNmMCVm2IkpJ
      FEUHk4CWSpA2WZAQKKrbya72LVzp6mIucJQqn/Uxd2vwrHnCLpBM7Y4jOJ2X+OijTg4f2YPd
      aSc8OsqwNcLKzA3mlLX+++2uEyQdlThEFcFsQRbSjPZeJyw7cFtBECVkk0RxdQ29585yTWjH
      IeaIhqFpX/tjLRFtDsoklf7RIHu3uhEQKKt0cPzMbRpaXsIqgljSSFX695w4L1FfbCW+FMG/
      rQlpdpyFlAmvS0YXRMwmCVESsasZBocGSJcUU+63I2TjTE6MkjAnGLgxRu2Lb2EVHmyeRLON
      2oCXnq6LZOqKWR7vR6rZR8BTRElBgq4LV6kPmBnvv0XN3u9ju3OexV/Lix1hzl7own3sRbwW
      Yy1yPZF++tOf/vRRB8gmC96CADazhKOwCr8cIyM4KCsJIKSXmQ9lKKxvoSEQoDDgxWEWWJ6d
      ZSWuUtfRQZXPjcMmsjw7zeJqnEDjTlorvdhdRZR5ZWZn5ogkNcoamwk4zEiSCafHj8duRjZZ
      8BT4sZukewYJEjabDvZK6qsLMAGS1Y6kilQ21OGxSSBaKa0qIx2cYXE1hqW4ktpAIU67ifDy
      HAvLUVwVW9neUIQsyRQWuFldmCOqmCguKsRh0lkJLhGKqVR37GNLxZrQTGYrbo8XswSCIOIt
      LsGaDTM1F8RW2s6+bVWYJYmikhKUyAJzwRQlW/bSUe1BAGSzBY/Pj9tfhE9IkrEW4r5PAIOL
      q5ybWHo2T9rgoQhGdOj8QNd1zgxN84+9j+sEbmR0dH2t+5gvGALIE3RdJ5vNYrFY1tuUZ4aq
      qiiKklf3aHRADTY1hgAMNjWGM1wekTpznuDbf7feZjw7dNDR82oMsAEFkGV6eAZneQU+uxk1
      HePW4DiVTW14bV+8nVwqyujENFUNW7A/ZuU1Nj/ItFJEW6X/Gdn+aLR0GnXRmAV6nmzALpDC
      wtQMsXQOdJWZgS4mQyKW+6dK70PNJBgbHyX9kBXfz5NcnmB04av4khpsdDZgC3CP9PJtLk9o
      vPhaG2J6hdszEWob67FIkIouMD2vUlp8v8ZVFoZ6uXJrGtlXyd69u/BZH90ca0qG8RuX6J8M
      4ShpZO+OFhyZJa7OKexpqUTNpbh28SK+LS9QW+AktTDAqFpFszvEyIqdgDZJz7xOW6mZVWsd
      7WV2QGd1tIewfwd1vg34DvoGsTFrX02zMDnEyfMjtOzdS7FDRBYFpsaGWIqlAZ3gSA/TWTPS
      Z79vjfBYH9eWJHYdOEidO8GFC30klEfNAmss3jxDz6KNHXv3EsiNcfzSEJpZY77nFssa5JIz
      DPaOcHs2CKjM3uonJVtREnNcPn+eiyNJWlsb8HgkRrv6iCo6em6Fq1cWsTrypy+8WdmYAlDi
      TAwPMRfXcDusCIBk89DslxhZiIIeY2JCoaH+Pj8jPcv46ARLk4Nc6uzkxtAsU7NjxFLqIwqK
      M3wjys6XXqCqtJStL+xCmpwkZC2m3hdiKqiSnJ0gsH8P6cUwajbI8GoBjcUS6Bo5ycOBQ3sp
      97uxeeooci6zGEyRXJgjXlpOmdkQwHqzMbtAlkL27t2OI9jP6Yu9eI7uwWORqWhv5MapEYIO
      G6vFrRywQy575xxNI6OYqN+2nYbAmiemaLLhdTx87LCGQi4nI8s6IIBswqprKJioaCzhzPAo
      ekyg+eUm5j4+y8iMQK60FI8AaVGiuKIWr32tikXJRG1pgIH5WXQtQk1Z8zOtIoMnY2O2AIAg
      SBQ272GLY5ELV0fJqjqSs5om7xwfdM7TUFfEAz9tyUxZgZnJuVXsvkL8biupRBRFfdRb2E11
      nUp/7xRpRWFp6BZBXxF+wBKoxzxxjiGplBKzg9pqlQtXg5QHvJ95ywrCfZ6zgkigtpz46CiT
      kQTFgfWZaTJ4kA0oABG704lJEgETjXtexJuYYjKUBEQC9fXoOYUSjxMAQTLhdrmRRInyjv20
      2Rb491/8Hb/8tw+ZjYF4n0pkq4ulnvd4++23eftnv+TicJTq3UfwBS/xTz//OceHVF481I4F
      MFsKcFoF/AEfEuCqbkCORynyedeslO24HQ/Ou4r2MrYVh1igjiLnxmx8v2l8w3yBNOZvdzMY
      K+Tg7gZMedbF1nMxrp04hfTCt9nqf7Drpes6od9/QPz//L/WybrNyTdHAGqKmxdOcH3Zykuv
      v0SJQ37kxp3njZoLceLff0Oq6gDfPtSK/DnjdF0nHQojx2LrY+BzIB/jAn1zBLDBMbxB14cN
      OAYwMHh6GCOxPGI+FmV4anW9zXhm3A2OK0mPmnp+vqyfAHSVeCyFxWG/M6PzCHIpllYjKKqG
      IIiYrA68Hiey+PR7+Wo2STwt4HLbnnvzOB+Lcnx06DmXurlZvy5QLsL5T8+xkMw+/tjlG/zr
      +6e4cuUKly9f4uTHH3B1/Nm8KWPTV3jvk+uknsnVDfKNvOsCqbkUkXCUnC7hcHtwWEwIQOmW
      Q3x3byW6rpEcOce/jMyzt76AbDKKZnKQi4dRTQ7cDjPpWJhYMototuP1ujCJArlUlIwmkUnE
      UQQTXp8Xi/wI/es6SjZFJBojp4LZ7sLntoOmkUrGyOUUUhkFq9ODRU8RS2aQrS48LjuSCNlk
      jHA0iS5b8Pm8mEVQsknCkTiKLmJzefDYzV9evsFzIc8EkGG46xzD4TRqNovmrubVwzsfiPWp
      pCKMToUpLa4DYLr3A8ZpIrE4TVnbCzT6opw93YtisaJlswS2HuZQawmTXb/l7HKAgDVLPByh
      eOcxjm4p/XJTdIX5kWv0DS+iCqDkBHYd+w4V5gSnf/cPpN21iNkIK0kzFSVusskEYcXKy8de
      oVhcofvKNULxHDklTUH1PvZ1lDLc/Sm3FnQsJhFTSQtv7jPcIdabvBKAtjrCzaib3Tu2YibF
      zc5exsMtbAPGL77D230mBNFMaV0be+qLAcgl4swqKt969Q2KnCZunTxNwc432VfvQomP89G7
      fSw1vYFkslC37QAHG5wwf5XfTSYebYwgUVjVwguFtei6zurtc9yejVNRK2L3ldPx4muUOUK8
      //Zpag68RKMVLnedJ5NMMxucQLGXsbstgJoK03uth6Xa1wjFkjTuPEZTqRPdmIDLC/JKAOng
      ApMz80jZhbUvzA5qJBkUqN3/Pf5kbyVqNsl0/3k6L4/x3VdakR1u2mt2UuySgAShFYHAXg+S
      CJK7nBL7FSJJMIsSLrcbkwSYTPBl2/IEAclkQlCzjN3sYmgujSBCOrSEYI0BHkxWOzarGUES
      MUk2HE4LopZFkmUEXSW0NM3YjEZ4YXztNrxl2M0yTU0t9A5dYWXEhKm4nkM76sif+ZDNSV4J
      wOLxUVBg5eib+3CbBHLpDFgssHDvGNFkpbS6FGUsQo41h7N702pWPD6N4FKMOrsDLbnAUsJN
      tQ3SjypY01ABEZVYOIaloAIhk2EpnGXvq9+mxKYx1/sRnY/ynL6LIOJy+ihvreGVPY1IaGSy
      WWSTCaWsmZertpCOztH54S2Wd9RR8nUry+CpsL4CyCxx4eSnuM0yNncp2/e0sMXxHh/9/n3c
      dhNoTrYdfYFyYHHgEh+u9oOukojGCGw9iv0LF5So3bqD42c+5IMBB2oqgW/niwRkmHyUHYkl
      Lly5QSweI5wyc+iNKsxyGgtJuk9+gs1qIr0yB3W7nuCmJCoam7h96hLvLY9gkQRs/nK2t7cy
      ceU4cwkz6DnS/hLcX7PaDJ4e6+cKoSlEVoNE7kyDSiY7hcWFSEqC1ZUQaRUsDg+FXieSkmR2
      aRVVW/PLl61Oigo8mCSRTDyEavF9tuFd11QSkRVCsQyS1UlhgQezJJJJhFDNd47LJQllJHzO
      O0vySprl5RVSOR2HrxC/y4qg62QSYVZCcXSTHY9DJCc68NokEvE4VqcHWVSILsexFnkx6xqJ
      ZALZbMciC2QSEZZDMTRBxu0rwG03k42HWI0kUJFx+wsemAXSdZ1LE2P8bvDW830OmxzDFyhP
      0HWdieAyA6vB9TblmaHrOrqmIz5u4fM5YgggTzCc4daH/JGigcE6kFezQJsdPZNBiX5z4xLd
      3Q+g5NF+AEMAeUSy+zLxv/vZepuxqfhGCEDXciyOXef8peuE0gLlW/ZydEcVAwPD1Na34nM/
      us8ZmeyjL+zlSEfNowsKjfGrd08QT2sIkpmyhg4OvLAV/+NiLj5oLUtDvYyrRextfUx+JoNn
      zjdAABrh8cuc7Ilx6Ds/ptwJi8thRE0hFouRUx+fmddTvZ0j1U9QlJIk7tvKT767D01Jc/PM
      e5y+5uIH+xu/gr062USMiGIkycsHNrwAdCXJzVvLtB04QpV3LelcWWkJKDFQs0xeP8fx8Sly
      1gAvvfEGVfYM1weG8Hnd9F/spmj/t6jPDTKQq+Zga4DQeC8fnu4hoVlo3HWY/VtrsDzEX0GU
      rbS0NjAwnIVclP6uTroGptBNHnYeeZWOGi8z164S8dSyrbYIJbvK5bO3aD184DnXkMGj2PAC
      0NIpVkQTTe4vrguTWCFcsI3v/9krRMbO0Xd9ivIXCgnN3GZ4vJBtR9+iodjF8vUwoWwpkKD/
      wgjb/+gvaHYoLK1E0DV4mMOOpmQYG5/FZmsBRcNevZP/tv8NiC9w+mwny8VvkopGiJnXFvp0
      LUt4ZZWcMemcV2x4AQiigKDrqPpDujruUjpaqrGbJLIFhdjnVHRAkxy07dhPU+Dz3RAbJVUW
      Oj98n3DrFlrqKzHfjQp3h+TYRd5++xqCaKKoqpX9ByrQ5BzZ2W7+5eMJMjmFuOik+UmSHhus
      OxteAKLFTomQZTwYp9TzZHl3TU4PfufDjpVpPPQ9qpMRJkf7+fiTMY4ee5kSzz2XBXvdfn7y
      3X33naOxeOMqo7ki/st/P4ZFTXP6xPtomvGq3whs/IUwyUr7znqmLp3l+sQSoZVFbg+Nkcw8
      fvD7RSLcutLPYlKnIFCBy6bf8T96NKq+5iaajoYYu9XN7ekkIGC1iURWV1hdWeT2lS6mkl/D
      JINnyoZvAUDEXrqN77zm4ELnGQZyMhUtO6k1WSgrK8NmWbtFi7WAsnIJUTJTVlqO3XxP+/bC
      KmpUF+CkuBAunfuUJDbadh2ixHvfFKq1gPZa5xfKL23tIHjpIp8en6CkfgtHDnhwW034tnSw
      eOEix0+NU97UxIEOBZskIBeVUal6n33VGDwWwxcoT9B1nfDZcyR+9c/rbcoz5sEx1XpjCCBP
      MJzh1oeNPwYwMPgDMARgsKn5BgyCvzno44Pkrp5dbzOeGbqug66TE/PnvbthBBCbu03vyIM5
      dE2+cna01GI1/aEVqhKcHCbra6DMvVYluXSYufkUpTWlPK9UXnoihj45/HwKWycE1obB+UL+
      SPExyDY3RUVF2KUU4xOLuPxFFHqcSE8lPqiAkpjncvdtUqoOusbCrQsMhzdQBRl8LTZMC2Dz
      ldHqKyMyD8vRFZpaWnHIoGWTzC9HcNlMjA1OE2hvxZleYWhkknhWoKCigeaaIiR0MpElbg+N
      EVfN1DS3Ue6z3bm6SFH9LjzjJ5kK1lBrnuPajI/Db5UioxFbmmZwbIas5KKhpZlil4VsaJrp
      rJ/6gAOUGKMTUSobyhEjM0xERXLBGVbSErUtrZT77OiaytLkAGNzYQSzFXdxDW3Vhetapwbf
      gBecmo4yeOsqF85cIKhZMKOwODdPVnLg99qY6TvN4LKCkorS19tDWnbikuN0n7pE8D7PNMns
      ZFtDgFu3h7k9OE9VRxNuATKJBc6fvkRadmJTljh5vIuoqpOav0X3aGjt5MwqV7oGSAGZ2ev8
      9qNLhHULDmWZk90DgE5s8jInuicxuX2YkvNc7B9fl/oyeJANLwCA6PwShbuO8vK+Nnx2B2VV
      VThIEwrHUZU404tREpEJJicTpBMRomkJMTnAwHTm3kUEEX9TB5Ur1+mL2KgrW8viGB3vI1d3
      hAO7O9ix/yg7PZP0Tn15RGtBNtO2/xX27+xgx642rJoOxLhxeZ593/02u7duobW+Akv+7Arc
      1GyYLtCjcFXWU1ew5qKgpiJcvnQBzV1Noc+JHjERymRQUjGyshOvz4cM+AuPEQh87vYFO9X1
      hYynynDcybCXSSaxuGx31i5F3G4nY+kMX40cKcGH78l89QyeI9+IFkAUBO4ur+fSGdJY2dqx
      jcbqks8yRVrdAaxCGn9FPW2tzVQUOZGEL+pfFMUH8vt6SquIjA0QSStk40vcGEtQHXAiSNLa
      JnY1R3BxnkjqUXkO7AQsQW5OhVA0lWgoRPprOesZPG02XAsgCAKSLN2XgHotNujdz2aHgwI5
      zm//8e8xe0sJ2AQkUcDmqWRrwxgnf/2PZDSJwsomDh8p+2IBoows3ZtZspe20Tx6nN/+09+j
      iDbqOg7S4BPRxEbMnR/wsxELxcVudNGFAAiidN/MlIgsiYCNhgM7+PD9/+BnWRGf00rO8VW2
      URo8KwxfoOdEYnURxebHZRVZutnJ2aCXH7207bO/67pOuucC0sf/vo5Wbj4MATwnQqOX+eBc
      H4mMjtVbxgsvHqal7F54XF3XyawsYw4vr6OVz5a1uEAaJlP+dDwMAeQJhjfo+pA/UjRA1zTU
      zFedYdo4qJqGpig8SZqF54UhgDxi7OOP6P4//rf1NmNTkd/ToCtDvH/m5qOzu3xFwuNXuTRy
      L8VqJr7I1a5rJJQvO0NjcbCP65NrYcsTUz2c7J3h84dn07P0XZnCiAWxscjvFiAdYnwm+4Uf
      2x9CJrrIQu5edkg1m2BpYZmGLx0J6SRDSwQdBQA4qnbyctUXj9LUBMuLOYzZ/Y1FfgvgPlbH
      e1m01JC9fZY5WzN76kxMzYhs3VWLiRQ3z13Bv/tFSswZxq93cr5nHLmoidde2Uuh40ny8ero
      WoaR7jOcuzGJpaiR114/TOHnVm8T0730Jqs41ORHy0W5ceEs3YMLiE4Rn3cf6BorE9c4c6GP
      YFKksuMgr+1pIDF+iVu0sbfWjYDGYv8ZVkqO0FaU343wN50NU/uplQkunDpDtGgHr+xtQciE
      WVyM3BlQKazMzJJQYXWih9FkBX/yF3/Bqy06J8/c4oE1WjXH3Gg/3d3ddHd303PtNpEcoKtM
      XD1HfzLAj//qr3ljq4MTH50h/LkV21xsiZnVFLqW5dr548zb2vjvf/PX/Mnru7EB6Bo50cWB
      t37M//KXP6RkoZOeJR1boJTlnm5Wczp6ZoGumwolBRum+r+xbIgWQAB0XcBX18G+tkoetf9l
      frCXq8MSY/2ngDTxWAXhN7dTfN8xoighy2u3rt1dVVbSTIQUtnbUY5MkLBWtFI2eIRp/+KyM
      ms0RUy3saK9FFkXMNhsyORBEbCaFcx/+G7PhNNnoEo2NSeTCEor8NwgGE5izSwhVpfiN3/+6
      k9cCUFQVs9eFFRDNVgL+IkzSozfACGY7h7/3p+yvsT48+IZkoqS2lZ0719wgkqtjhFbH1s5F
      5/5VkUctkOjo6JqG+LkNOWomSlfnNZqP/QnfKbCz0P3vXFYUBMlOY0UJ3dOTqEKY2rJtX3Jl
      g+dJ3r2DNFUhmUyRy0To6RmlvLLkocmkRUkil0uQy2ZYGLzOUHAt83tBWRlD3V1EUgq55Cq3
      b46TepKCZSs1PhM3bo6QVBRWp28RTNhxux6+aCPJMrKaYHBsCVVNM3vzNiuApmdRdAtOq4nY
      0iiX+6fvnCHgqypHHx9nPJKmoMjzNWrH4GmTdy2Ano1z/exH3JhNU7X1IK9uCQBg9ZRQYLtn
      rqeogWrPcf7jH/+FoqYtdLQ34ZQh0HyEI9kL/P6ff0HO4mPXi0e5/yds8ZRSpto++yyZHZSU
      BTCJMjW7D6NePsO//uLvsRY18fq3XsJngZw/QLF17RyTO0ClbEM0Wdn74hHOnTzJ33frNO1q
      obXUjcVawLY2Pyf/7R8wlbSwdccukp4153/RWsqO2gSncwcodhg54vMBwxXiOaJlQ3R9dA7/
      0e/Q7Hqw8dV1nYF3fmcshD1nDAE8J9RciJO/fheh7WVe2VaJ8LkByl1fILP5SaZsNybaHV8g
      cx75AhkCyBMMZ7j1Ie8GwQYGz5O8GwRvZlYml5jr/eZGi9B1HV3XEY3IcPfQskmmJ0cJJdbW
      dM0OH5WVFTit0tcMoq2Tja8yMTVHMqdjdxdSWVmKTVBYWFjEXhDAbc3PkAzJUJzZ6xPrbcam
      Yt2lqMSDXLs5QDSZIZNJMz/cw6muW2TVrzc0UZJhLp49zcRShHQqxsTtPgZnIoCOqqgYmYsM
      7mfdWwAAR1E1u/bsxWHSSa9M8v7FQdLZNiwWhfmpSZajaVwFFVSW+RGVNKuRKGoqznIojsVb
      Rm1lIfKd5iIRnSGcLeLlVw/ilO8EZEUAXUG2WrFIIigJZpYSiJkQwbiCv6QCe26V2WAMq7+C
      +go/ei7F6tIKiXScaEKjsLISc2KR+dUUruJKKgJeZFQiizNMLYURrV5q66qwyzqxcIhcTmEl
      uERKNVPZ0IDPIpKOBZmaXiCtyfjLKqko+Hy2GYPnjfTTn/70p+tpgJqKMBWMU1FejqQlGb7W
      Q8RUSkttEcsDPdyYjSDqWaaGBkg7yygQoxz/8HfMxGRMksL4zT6EQDNFdxaWRE1l9PpF5nMu
      Sov9WOS1MCdkY5y52IWrqAoP8/zmP0+Tkk2oyVV6Ll5iNSchk2CodxhfUwvm9Cwf/foDYmYn
      RKa5cPkGSV1CzyYYGpmgqKIGPTjIiQv9YDETnx9hdFmkosLHVM9JTnePI9tspFdHGJozU13l
      5tbFT5iMra0gz0U16ssfDI0Ymg2yPDi3Ho9h05IXLUDw9gV+eb0PUZAormthW3slUiZM/9QS
      rsJK7FYRzR1lYmCI+j3leCvb2L7nEF6rwIL9Y0YiGSha69ebXKV86wd/RN+l8/zq52corNvK
      i/t3U/i5O3VUbuXY4Q60VIh4MsnWXfsp95pwx35NLAt+ZErqOth5eB/O5AQz74yy9/AhPGqS
      7q6LpNMppoamqdt9mG3VfrRsglMnPmZ+pRwsfnYcaKK9vgglXcP54yNk9GrS2SzuQAkNNaV4
      XA/Ja2zw3MkLARS2HOA7L+zFLqmEZwY43nsd/+46orEwoqMAVBHBVkBzaRWyoAgFb9wAABQV
      SURBVCKIIpIoIghrcYLu79YLgoDJUciel7/H9v1h+rtP0903xWu7/Q8WKoqIooAmrOUaFkVh
      raV44Frine/v+78qgCCAppFQFbwWy1qsIknGZrOj5hRA+CzAFoKAgI4gmWjb9gJDk/P0dd4k
      6W7g24fb8+MBbGLyqv4FUcRqs6GpOUSzDbfFgb+6hW3VftRUgqQiIOrRR14jmwkTDKoUBnyY
      rE78Piezy5mnH5NekgnYzczML1ITsKNGg6xEstQ4LDzUQh2weNi2uxZJCXL615dZop2HhOYy
      eI7khQBWhrv5l8EBZBEQTVRs2Yfd7WNXRy3Hz73HtdNgtvvZsmcfzf5HX0vNxOjvPMdCKosu
      SNg8AV44VIvpqe4sBgSZ2tZW5k538k83ziGKFpp3H6XYZXqoAHRdZar/HP1TcXK6iKd8K4+5
      FYPnwLq7Qui6hpLL3UlILSCIIrIsr/nZ6zqqcudvgohJlhEEHU3TEUVprSeiKujCvXCEuq6j
      qQqKuraTS5RkZElCQEdRVURJQkRHUXVkWULXddS73wsCmqKAJCOgoak6oiwh6BqKoiGZZARd
      R9VUBFFCBNS7ZQkiJpOMKIB257MoCuj6netIIrqmoCgaOsKaO7Uk3lcPOqPdt7n57uV1eAqb
      l3UXgMEauq4TWlghNhtab1OeGbquo2oaspQ/ruCGAPIEwxlufVj3lWADg/UkLwbBBmuo4TCp
      xaXHH7hB0TUNVVXRTPnji2UIII9I3+gn/nc/W28zNhXr2wWau8z//M8uks+73MQ4v/nPTuL3
      fXXr+C/omf/6l1zseYeu2T/YMoPnzPq2AJpCJqs9/8TJukY2qzxQrprLoPwBhmhqFsWIi7jh
      yJsuUGxxiNMnLjAfzyE7i3np9deoK7DR+/4vGde9hOfm0d3ltJVbGRueIC15OfTmd2n0wdRA
      Nxd7hompEo0dRzi4o4bETA8fH79KVBHx1W3njUPbcVkfP/2mKxkGr56kq3+GjC4SqN/L60fa
      yS1e5eKIlYLsEMPZYl4/spfE5GUuXL5FOCMg51Zofgt0Lcfk9Qtcuj5CPGemevtBju6qI9Tz
      W04uFSIHR1hOirQdepXDbcY68HqTNwIw2QvY9+aPKHBbiN0+yfHREHUFNpScQsnWQ7z1hpmu
      X79DxNXOD//8FRYHTjI6F6ZCSjO1aubNP/0LHFqYS8dPM1pTiTB6i9IXf8yP6iyEwjEsn/vt
      Jxb6+c9/nuXuFvTI0iq7OkAXJIrqdvInO17DKiTp+v2HTKXaKVFSjNwawX1gPz/YUgnJOS72
      B9nznR9T47UwfenfmQayqTlGlmx860d/iV1d5fzHp5lorsOlZNHtZRz7432YV/p5Z3AJDAGs
      O+suAEFaW1FNRefpOt/LfCSJllwlWVsMlGGyuikIFGCSk1jMXtzlBVhkEZPdjhyDxMooVzt7
      uXW7b20HmWxlXzpLdW0rPeff5ZPpGipranB4vA+Uayts4uhb+7jrkT9w6p/W/qNlWBzu4erg
      LMmsSjK8zIF9UCLIlDftZPeWSmRRIB6bg5KtVPvsCAKfpf1R5oe4cOUmo+O9wNr8fmES3KJI
      eU09HhtgcyDJ39xEGBuJdRVANpvB7C7CAgzd7Cew/3u8WelCnOvm7RtPtloomp007nyZY6/t
      wPrAkH4n/6W8jdWFaa50XUVyHaGl6F5OLlE243S5cN35bDOJpIBUYp7JJSff/vFf4rfK9H/0
      NnEdEEQsNhvy3VCIgoCSSqMKD84kCFYHTR3H+KM327Hc51y6NPWVq8fgOfDcBaBmEsxMT5HM
      JBnunWXnS7sRAUHSWZ2ZYCimMzfQQ8q0/4mu5/ZXI0Q/5dIViTKPiXh0laLGgyjjZ1gWA7jN
      OZBNmJ5wI7YoiqjpEFNjo0zHF+gbXqV56xePs3rqsMY+4tJVhSJrjuFbc/hLwFzYgjvyLp3d
      ChVeM7FgiJLtB8mfmW+D+3n+O8LUHMvzk8yvZihv30N7pQ9REPAUFJFcniGcNdHY2k5pSTEB
      rx3JZMHl82OVQDZb8RT4sZskREnG7nDj9XqoLC8ksjRPMJLCVdJATYkTm83E6vwsK9Es5a1b
      qQ947yTUBgQJs81JYYH7s7ijktmK21eMx+HEbcsxv7CC7K9ha3MV/sIALquM1e7G61wbNYiy
      heIiD6GFeaKanaaWRgoLivDYrZRXFBMLLhCMpHGW1lMbcCGZLNhdflwWQBSx2Jz43Q9uikmP
      j5Pt6X1+z8LA8AXKF3RdJ3rlCun3PlhvU54ZOnfCogj544FjCCBPMJzh1of8kaKBwTpgCMBg
      U7Pu6wAG9xjvG+PqN3lHmH7nn8+Hxl5H8kQAES69d5rpVBbR5KCqtYMdjWX35twfgp6Jc314
      krr6Zlw2GZQUAz2dLNnbONL+vFZY4/Sf7mRg+c4uYLOfF17cR7Xf8bWupmYVkuHEU7TP4HHk
      iQBiLEzqbP/xK3jSEW73nOXT8D5e2VOL+Us6acnYMtNTC9Q2tAKQigWZWlpgNaQTbCn7Qhyg
      Z0OKmdsx2n70CqUAgozDZX3cSQZ5RJ4IAETZisfvpxg/RcU+Tv/uI0YbKmn1C4RnhrjUe5us
      qZDdh/ZS5jKTii7gr9iK487yb3xlGsG3l23Oa4zOpyistAEqC8N9XL05SUaw0bJzH80VPpSV
      cSayPvzpCa6PKux5dTfm8DQXO68SVsw07zxAc4UXKTFP71wGa2iMwbkoJc172NlS/oAoBcGM
      x+9/MMKDmma8/yp9IwtYi+p48cAO7KQYujlAoGk7PqvC1I0BLE1bCViNYdh6kpe1L8heqmtc
      LCyESaxMc3VwiS17DrKrzszFk5cIK+Cr3MGutsI7C1k5ZkemCTTUUlJXS3R0nLX0vknCMQtb
      9x7i4I5ahq5fJhjLkovM0Nd7lZ6RMPVbG7Gl5jj96WVcTXvYv6uJ0e6TDC/GIBnk0tkLxFw1
      7Nu7g+WRKyysPphyT1MTzE1MMDExwcTMIqlslskbF7m2APtePEy9PcgnJ3pI6SbkbJi+2xOs
      Tt1iMGHCZ86fvvBmJW9agM8jmc0ImkZ4YYDh4WXCkSCgE1qcZyZ8mPZC673skfEpRmNlvFYs
      Y46UoqT6SaSbsdidFBfqdF/pJJHOMLOi0p7O4gCyORN7jr2I3yIQGeojUbaVNxrLAY2dS+P0
      z4dpKYfClt280FYHapriIi8o6gN2amqcicFBQgD2QlxOG1NLEdo6XqW02EGx9wCzn37Acnwb
      de3bmDt+nrNBH3v27MP8iDGOwfMhPwWgZVmeXcHd4UZd0Ai07uRQewkCIIgyzgcyjGosDI8w
      OTvAP//tLdBVwjGJsu0J3IlpTvQts3PXQdxSmsudvSja2q6VotpG/He81RRFWYsRBAgImEwi
      Wu7J1gdlc4ADr79OxV1rcik0XfssCYQgiEiyhKZpIFtxW3TGY0mQ8rLx3XTk3VNQs3GGr55i
      RmymqcSKs6CU1PwUus2N3+skFw2RUu47QUkwPKfy7f/61/zkJz/hJ//jf/BXr9czMbNKNraK
      7imjqqQAsxpneTXK3U1b98cB9ZRVkZsaYCqcJpcKc3NslWLf15vJESWZIpeV0dEJsqpGePYW
      i0kPPofE7O0+Vgq2cqzZzbX+kee/E87gC+RJC2BGV8f59dtvYzY7qG7dwdHDzThF0Mpb2dcc
      4eN/+yVp3Up9xz72V947M5tKgcdNyWfRlkUK6huxda6idWyjeugTfvHzTgrL6ymprMBmkhDN
      TlzqvVuXPXW8tCvOiXf+iahipnHXYbZU+iAawue868cpYHc4MZvud9OWcRd6HvT0FGWatr9A
      4sI5fvmzc1j91Rw99hIuIcrQisC2F2opMAcInjnLwHIDbUWGn+h6YvgC5Qm6rnPrfD8X/vX8
      epuyqTAEkCfouk4imkDNKI8/eIOi3YkLZMqjuECGAPIEwxt0fci7QbCBwfMkTwbBBgBjE1Nc
      7rm+3mY8M3RdR9M0pDyKDv0UBKCRjoZZjaXQETBZHXg9LkyyiABoSoZoMovb6VyLl6/mCIdW
      EO2FeOxPU386mXgMxWTHYXn8dTOxFYLRtaQZomzF6/NiMz+7B6PlksRSIi63BTWVJK3LuOwP
      dgUmJmf411+/+8xsMPgiT6ELlGP49O95//xlenuucv70p5y4fJvcnTy/8cURTpzvJXNnATUV
      nOLUO7/k3a5pnm4gNYXJy2fpmXqy+PrTV97lPz+9RG9vD13nT/LJ2RuknuFoKLtyk49OD5ND
      Z/H2FS7eNMJE5ANP6RVsZftL32JPsZlMcoVrp05yeaqCg7VuwqEg5VVNWO4k8l0JzlLQ/gr2
      ydssZmootQigZogkFEQ1RTytYHF68DqtiIKAkkkQDsfIaSCbbXi8LsySQCYRIRxNgcmK1+vl
      8y99Tc0SDYVI5XSsTg+eO9e7i2iysWX/a7zS5ETJxrn80W8YCm5nqz9LIpHF7nIiCZCOr6JZ
      /NgklURklVhaQTLb8XpdmEWdeDhELJVFNNnwF3gxCaBkk2s2I+P2ep+oRTJYH57ukxEELI5C
      du2q5lc9U7xQ247LV0ajv4Q1t5ccS1OLFO7+HpL6AdMzMUrq3QiJUf7jX69TXulCSScJ6QW8
      9a3D+MxJek59ykRCxiZrLCyrHPvhm1TJIS5euE48q5DL5fBX72D/9or7DFGZuX6Wi0MRrFaR
      jGJlz9Ej1PofkppUEJAtdnxOMykdMrE5zp8eZv+br+I1w8j5/yC+9Sdst43z6ceXERwORBxs
      ObiXktwMJy/cAMkCspm2PS9R59e51X2GqYiKls2guOt589iOp1rNBk+PZ/JqkgqL8CRXyAG+
      8sbPvtfi40ylKzlWYCYVrWBqZpJcbTtmwFFSz6GXOnCY01z45AqJbA55po9peytvvdyClSjH
      3+9E11Xmbg6jFlayo6QANb7IxYEhok0l9wxIzXJ1CI5897sUWwSW+89w9tYMtYeaPjtE11Wi
      q4vMz8dIBSe4rdRxzA8PhIy+j1w8iOJu5MjBJpwmE5LFRHR4Ffw1HNzegs0iIUomsvFBxlbd
      7NhVh6ynGeg8w9DKDpoeflmDdeaZCEANLhOx2T8XDEpjeaCfkcUUpg+CKIkQYwknL+xtxQzI
      NhcumxnIYZLWzIqupimvLcNmFiG3lkAPsiwvLjKdXCYxszaItHnKsd5/J9EVgq5CSmxrFgTK
      iknMPLjTSleyTI30EusbJ+TcyZ/98Us4ZXjQ2fketpIW6ka66Om+iCg6aN6xg8qaZsqXe7jc
      dRFRNNG46wDFwRkGZ5YQhVUABFcAjwzk/rA6NXg2PGUB6ORSYfr7Zmhof+0BAei5KLdmZF45
      doBiqwnI4L7Yx1Q0g/dLNlHZXSLBhQi5Mg+ikiWbywEmfH4bgYoOjm2vQkYlnVEw3z+D4/JT
      EBtmMZWjyCKysrCM3VXxwLVFk432A29wqCTG+VMXGZxYwNNSDgjouoqmayiZNMn02uhdxELL
      gaO061lmbnQyMBWkvC3AlheOIOhZlqaucqNvisL2IqqLHRx+Yx8ek0AunQIzaF+mLIN15SkJ
      IM21Mx+z7JTRNAVTQRtHK50PHJFcXSJs87C3uhq7SQR03NvG+WhomfZtD7+qr74D2/sneGeu
      H4esMLEcpxmZqvYO+j/t5N2ZfmyygLmgmgM7Gu6daK9gV+MQp997D4dNIpWW2X204qFlWDxl
      vHTsIOdOX+SiqrG7zo1NWOLURx9gM4kE52I0AZmlEY73TWISBLIZhaqdDqKLY/TcHCOri6i5
      NIEt27D5yqiyvcun7y3jsJqRZCcdLx7G+9DSDdabp+AKoZGKrLISXVsHMNtd+LwuTNLaOsBd
      lGyKREbD5XRwdx+InksSSgn4HAKRJHhdVkAjEUtistsxoxCOhEkkM6CluXplmO0vH6XKayUd
      D7MaTqCJMi6PD5fdTC4RJWdy4LTIaEqG8MoKyZyOze3D57I9MAuUSYTISu7PcgbkUlGiGRGv
      204mHiIUTSFZndilHJKzCJuQJRJaIZFRMdlc+L1uJD1LNBwinlKQrU4KC7zIgo6SSbAaipBV
      wer04vc4QEkSSQp4PFaUVIKMbnpgHUDXdT769DT/z9u/+MMeh8FXIr99gaLTHL/QT0bT0XIZ
      NHcVrx7cgf3LdspvYHRd5/bgCF1X+9bblGdGPq4E57cANIXI6grRVAZBsuD1+3FYTPkUVuap
      cdcZLp88JZ82hjeowZei6zrpdDqv3o5PG12/Exz3CUPVPw+MJco8QhRFzGbz4w/coORjC5A/
      UjQwWAcMAeQRwjdxcJPnGGMAg02N0QIYbGoMARhsagwBGGxqjGnQfERXCE0P0zc8h9lfzZ7t
      DWz4OLq6wuLYECGpiIaaorz54RktQL6h64Snb/FJ9wgllRVIi1f49MoMygaeqlDSYXpOvMcH
      5y5xc2CWfIp8ZAggz9DRmJiYpH77AVqbmtn76rcwTVxiIfF0d1A/T7K5JJ7ag7x5dBv2PBOy
      IYB8Q9dJZ9K4Pa61z6ILr08nnti4O2rsrjLq64uQ87AbZwggDxFFAfk+nyCz2YKxXPNsMASQ
      dwiASCq9FrMIXSMeT2Ay5cuw8ZuFIYA8QxAEiv1ehm8PkVNVwlNXmM9UU+wxBPAsMFwh8g4d
      JblKX+cZesaDyI4AR998nRqflTzsQj8Ry7dO8ZtzQ+QyMWIJAW9RMR0HX2Vvawnr7fxtCMBg
      U2N0gQw2NYYADDY1hgAMNjWGAAw2NYYADDY1hgAMNjWGAAw2NYYADDY1hgAMNjWGAAw2NYYA
      DDY1hgAMNjWGAAw2NYYADDY1hgAMNjWGAAw2NYYADDY1hgAMNjWGAAw2NYYADDY1hgAMNjWG
      AAw2NYYADDY1/z//U/cTm3jISQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top 10 Blocks Leaders' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 Points Leaders' width='192'>
      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
      IwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top 10 Rebounders' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top Steals per game' width='192'>
      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
      +5m8UGehOgAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
  <external>
    <shapes>
      <shape name=':custom/hex.png'>
        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
        RU5ErkJggg==
      </shape>
      <shape name='KPI/01.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAABJ0AAASdAHeZh94
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAh1pVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1T0W6bMBT9Fct92aQFY8CG
        oLIKbND6kK1KI3WvBNwGJWBkOwvNr+1hn7RfmMlCVk1VbD/42ufcc6997+3d0JfVVhiwFi9N
        l8DfP39B0NQJfCILd9EzsWm+HJV4PH5dVcdtNa/h3WdwO8RD27fClGBod52OhwSWtVyL2O7H
        YwTBCWK2CUzHC/B98QCYVAIQx59VLsaAUgcHhFL8CXgu9pBrF53hICY09kJwHtCqqfo5XvLi
        rGWtBG6M6WOEDoeDc/AdqV4Qns/now/Pm1nETL92phxmnb6ZPHChK9X0ppEdGO1yLfcmgXBK
        oe0Xi4vjTjunhJxKtmgoe4QdF7UtmtDaLMXzdbRevfYCLYWWe1UJC795I3WdOgJtNPE31dhP
        KXdcVvtWdOaeJ9DeOHVTx0FKOeaEpnZyjnGUZZR5uCAkz33ippOP97hF5qeMUN/SCca5H0Vh
        lBd5nnHGipBduPedNmVXiYnb/ON6V7kxU6I0Uq2k3E0V8LCRRuqN7AF7pODDU9PV8qA/jt9z
        jlSo5oeoCyVbcHrfuHlHP2Mpi1KS04CT3Mc49SI3wn7AgnAeuNTq/+XWb/Le78fAA1aQgLmY
        hxHPMc5CgvMi5VGKvZzhACIbCfqvUqYjW37j9lL31rh0juhsuyjbF38A6YkGSkr/HRQAAAIU
        SURBVFiF7dhNqA1RHADw3/UoIilKilBI+U6SjWwoio1EFha+yuplQWIlFhYWYmWrbJWs3oIs
        ZSdZWPgo5dVb+Oh5Pc+77ljMvXW7ZuacuR/mLpw6u/P/n9/M/PufmaklSWKYx5yqAaHxH9jz
        SJJEhXW4DLewpuXonFUDHyPBOHYOG/B8E9eakzg0LMAN+NEBTDCLs1UD5+FlBq59XqsSeDOA
        S/C0KuBe1AO4KWysArgEHwO4BBeqqsGHEbgnqFUBPBmBG8fyKtrManwN4Bo4WEWjHsHzAC7B
        vbJH3Qhu4DJqPQCvRuDeYEFZ4O22BHe7xO3CrwBuBtvzcHnAExmJrpfELcTbAC7BJeTisoDb
        pI0yK9nFEsD7Ebhnmu+jscDFeF+QsIHTEbgjEbgvWNUKiAXui0hcx9EC3ApMROQ53h4UC1wk
        rm5mcCADV8NYRPyDzsAyNbgS7yI2mcKejn1GI+I+SEupayCsxaeIzb5hazNmM6YD6+sZF9UV
        ENZLz8YQcgKb8CpibW6r6gbYuisxBT8bseYF5vYbCDukjzIEKJqTWJe3Qa9A2I3vPQDPFCXv
        B5D0VT3vhCmaj0KJ+wWE/fhZAvcZS/8lEA5LG3UI15DdzAcOhGPCX2Z3yiTsNxBO4XcO7jXm
        Vw2Ec9JH2Y6bxpayiQYF5O/zd7SbJIMEwpUmbkyX3y9FwFqPuIGPof8FPPTAP7paeKi9UDuN
        AAAAAElFTkSuQmCC
      </shape>
      <shape name='KPI/02.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAABJ0AAASdAHeZh94
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAhxpVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1T0W6bMBT9Fct92aQFY8CG
        oLIKbKP1IVuVRupeCbgNSsDIOAvNr+1hn7RfmMlCVk1VbD/42ufcc6997+3d0BXlVhqwli91
        m8DfP39BUFcJfCILd9Exuam/HLV8PH5dlcdtOa/g3WdwO8RD0zXSFGBodm0fDwksKrWWsd2P
        xwiCE8RsE5iOF+D74gEwpSUgjj8rXYwBpQ4OCKX4E/Bc7CHXLjrDQUxo7IXgPKBV09VzvOT5
        WctaCdwY08UIHQ4H5+A7Sr8gPJ/PRx+eN7OIWf/ammKYtf3N5IHLvtR1Z2rVgtEu1mpvEgin
        FJpusbg4bnvnlJBTqgYNRYew46KmQRO6N0v5fB3dr147iZayV3tdSgu/eSN1nToCbTTxN13b
        Tyl2XJX7RrbmnifQ3jhVXcVBSjnmhKZ2co5xlGWUeTgnRAifuOnk4z1unhFMuZdbOsFY+FEU
        RiIXIuOM5SG7cO/b3hRtKSdu/Y8rrnJjpmVhlF4ptZsq4GGjjOo3qgPskYIPT3VbqUP/cfye
        c6RS1z9klWvVgNP7xvU7+hlLWZQSQQNOhI9x6kVuhP2ABeE8cKnV/8ut3uS934+BBywnAXMx
        DyMuMM5CgkWe8ijFnmA4gMhGgv6rlOnIlt+4vdS9NS6dI1vbLtr2xR/wLwZQllJg0QAAASdJ
        REFUWIXtWEtKA1EQrHKhS71HPI5MziOeKHdJsvESxv/ESLkwy2mk6Xr4yKSgGagHRTH9eR9K
        Qs+4+G8Df+H0DZJckdRErBwGWa1Bkk8ArieWdpJuSuLwpPgr4A8GbYvB94B/M2hbDH4G/GjQ
        thiMjETGU3AYfA34blL8HfDdNMku4J8N2k3/YMSn0LIGXwzaFoP7JJ+Cw+BHkk+h5U7SjcFo
        L+4mxVEzRM2TwiwGdTSQuxnU5/NgFefzYBVRKqPUp1C+1bXG6V/cW2MeBkkOJNckx+N3cOgC
        ACSVAsAdAE3EUNWWZHmbWQNYTCxtJN2WxOF5PBoBXE4s7SVdlcThqcHHJJ+Cw+B9wD8YtOtN
        ciyRJYAtfo/5WwBLh66lSVpjHoO6JX4AZswqmojMTWIAAAAASUVORK5CYII=
      </shape>
      <shape name='KPI/03.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAABJ0AAASdAHeZh94
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAhxpVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1TwY6bMBD9Fct7aaUGGMCG
        oKUrsEHdQ9pVNtL2SsC7QQkYGadh82s99JP6CzVpSFfVKrYPHvu9eTP2zO3d0BXlVmi0Fi91
        G+PfP39hVFcxfiILZ9Exsam/HJV4PH5dlcdtOa/w3Wd0O0RD0zVCF2hodm0fDTEuKrkWkdmP
        xzZGJ4jexjgZL9D3xQNiUglELG9WOgCIUgt8Qil8Qq4Dru2YRWfgR4RGboDOAxs1VT1HS56f
        tYwV443WXWTbh8PBOniWVC82zOfz0Yfrzgxi1r+2uhhmbX8zeeCiL1Xd6Vq2aLSLtdzrGOMp
        haZbLC6O2946JWSVsrGHorPBcuymsSd0r5fi+Tq6X712wl6KXu5VKQz85o3UdeoINNFE31Rt
        PqXYcVnuG9Hqex5jc2NVdRX5CeXACU3M5BwgTFPKXMgJyTKPOMnk4z1unhKg3AsMnQBkXhgG
        YZZnWcoZywN24d63vS7aUkzc+h+XXuVGTIlCS7WScjdVwMNGatlvZIfYI0Ufnuq2kof+4/g9
        50iFqn+IKleyQaf3jep39FOWsDAhGfU5yTyAxA2dEDyf+cHcd6jR/8ut3uS934+B+ywnPnOA
        ByHPANKAQJYnPEzAzRj42DaR2P9VynRkym/cXureGJfOEa1pF2X64g/OuQY0x2QNAgAAAVlJ
        REFUWIXN2D1uwzAMBeDnDlk6BD1A7pcxSzPmRC1yjiQ9U9glLlxFEv+eEBPgZksfYJEUPIkI
        1hxvrwZosXogROQvizgAuAH4GLj9FsAFwH7p+GdqAA8A7gAEwM8g5BbA9bHHvYWsAZe4OdnI
        JW7OKrIE1nBsZA3XRJbAS+NFFrKHm/OrB7QsEEVa1v4GsNHO4AhkCNerYiYyjOsB54WzZzKF
        04BZZBpnAUaRZhyAJs4K9CJdOBbQg3ThmEAr0oVjAzPIKm4EMIJs4kYBPchzD6cBszfqyfDM
        DsB7eIfEJ9aq1dLMnwysIvHgVCS7zURwXSSzUWu4MwKzmzXqrBPCPbsZlwXv+HIhM8AIzo2M
        AjM4GrIFZOAoyBqQiUsjS+AIXApZAkfhXMge8DQQZ0UetTNYQ7JwGvLTWsVLJBvXQj7htD54
        GogrkVWciGByXLNeEqv/R7164C96sSVWO4KjCgAAAABJRU5ErkJggg==
      </shape>
      <shape name='KPI/04.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAABJ0AAASdAHeZh94
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAhxpVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1TwY6bMBD9Fct7aaUGGMCG
        oKUrsEHdQ9pVNtL2SsC7QQkYGadh82s99JP6CzVpSFfVKrYPHvu9eTP2zO3d0BXlVmi0Fi91
        G+PfP39hVFcxfiILZ9Exsam/HJV4PH5dlcdtOa/w3Wd0O0RD0zVCF2hodm0fDTEuKrkWkdmP
        xzZGJ4jexjgZL9D3xQNiUglELG9WOgCIUgt8Qil8Qq4Dru2YRWfgR4RGboDOAxs1VT1HS56f
        tYwV443WXWTbh8PBOniWVC82zOfz0Yfrzgxi1r+2uhhmbX8zeeCiL1Xd6Vq2aLSLtdzrGOMp
        haZbLC6O2946JWSVsrGHorPBcuymsSd0r5fi+Tq6X712wl6KXu5VKQz85o3UdeoINNFE31Rt
        PqXYcVnuG9Hqex5jc2NVdRX5CeXACU3M5BwgTFPKXMgJyTKPOMnk4z1ungYeJOlIJwCZF4ZB
        mOVZlnLG8oBduPdtr4u2FBO3/sd1rnIjpkShpVpJuZsq4GEjtew3skPskaIPT3VbyUP/cfye
        c6RC1T9ElSvZoNP7RvU7+ilLWJiQjPqcZB5A4oZOCJ7P/GDuO9To/+VWb/Le78fAfZYTnznA
        g5BnAGlAIMsTHibgZgx8bJtI7P8qZToy5TduL3VvjEvniNa0izJ98QfaxQY+qMi/ygAAAbRJ
        REFUWIXN2LFSwjAcx/FvPVZ1g1HAUR7BgjM+ATyKp7yTCiej+Aw4i5M6AiN4cWiqaY7UpoSk
        v7v/kOs1/dyV8k8SCSGoco5CA/5L5YG1sjdGUVQH+kAP6ABN4EReXgELYA7MgCnwaZor92cm
        hLAqIAYegQ0gCtZW3hPbGmxgbWBsgTLVWM7lDggMgKUDXFpLYOgECIwcwvQa7QUEbg6IS+u2
        FFC+1kPj0hpYAYEWyV+FL+AKaNkAXXyttjUuBAQuA+DSiosAHwIC73OBQB27DuG6NkBdNemL
        hT579GcHqUnDb3Rgz5/FmCt1oAM7/hzGXKgDHdj05zCmpQ504LFHiCkZgw6MPEIKRQeugyiy
        yRh04JtHiCkLdaADX/05jJmrAx347M9hzCwz0lpdg/CtrmFsdUKIL5ItYqhMpeEvO1YzMVVe
        bgVcsE5sVtRt/C/527abpqFH4LDstvPOA25UatupIKu7cdde99ohbI2row8FeY6br3si58Ip
        UIF2SY7Sthaob3lPlx3Je14kH2odeYB5zd8B5hlwKi8vgXeSxv8CPAEfprnyDKWBvlL5M+rK
        A38AJRJHiz0chcgAAAAASUVORK5CYII=
      </shape>
      <shape name='KPI/05.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAABJ0AAASdAHeZh94
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAh1pVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1T3W6bMBR+Fcu92aQFY8Dm
        R2UV2KD1gq1KI3W3BNwGJWBknIXm1XaxR9orzGQhq6Yqti987O873zn2Obd3Y19WW6HBWrw0
        XQx///wFQVPH8IkUdtEzsWm+HJV4PH5dVcdtFdbw7jO4HaOx7VuhSzC2u26IxhiWtVyLyOyn
        YwTBCaK3MUymC/C9eABMKgGI5S4qG2NAqYU9Qin+BBwbO8g2iy6wFxEaOT44D2jUVP0cLXl+
        1jJWDDda9xFCh8PBOriWVC8Ih2E4+XCchUEshtdOl+OiG25mD1wMlWp63cgOTHa5lnsdQzin
        0PZFcXHcDdYpIauSLRrLHmHLRm2LZvSgl+L5OnpYvfYCLcUg96oSBn7zRuo6dQKaaKJvqjGf
        Uu64rPat6PQ9j6G5seqmjryEcswJTczkHOMgTSlzcE5IlrnETmYf73HzNPQDxkJDJxhnbhD4
        QZZnWcoZy3124d53gy67Sszc5h83uMqNmBKllmol5W6ugIeN1HLYyB6wRwo+PDVdLQ/Dx+l7
        zpEK1fwQda5kC07vGzXv6KcsYUFCMupxkrkYJ05gB9j1mOeHnk2N/l9u/Sbv/X4K3GM58ZiN
        uR/wDOPUJzjLEx4k2MkY9iAykaD/KmU+MuU3bS91b4xL54jOtIsyffEHFJwGbpDfEecAAAGy
        SURBVFiFzdi/SwJhHMfx9yMiCIKChUMtLjU51ebm6OZWU20FQUKQ/Tk11VZTbW6OTrbU4lJb
        gYNgiOjT0D1y2Hnej+d57r7wAU/vzhcfzsN7hJSSNE8macCmST0w694QQsQ5Vx54dV7XgJ+g
        B/peZlLKZWLOJSCdtMMc6DasRhcwB3y4gJ/Oe6kBnrlwKudpAWaBoQdwyMo1nhTwxAOncpo0
        MAO8+QDfCXArMwk88sGpHCcFFMAgAHDg7Gsd2AqAU2klAeyHAPZtA5shcCpNm8BeBGDPFrAR
        AafSsAHsxgB2TQPrMXAqdZPAZw3AF1PAAw04lUMTwEeNwCfdwBqw0AhcOOfUBrzXiFN50AXc
        A+YGgHNgXwfw1gBO5S4usArMDAJnQNUPuOnfboeAzxURJwvc+O7h0+AOMMVceypTYDdKgx1C
        PNvGmBxwvfbTNQ1WgAnm21OZAJUwDV7xt9Zia/LOd/4fjwbLwBh77amMgXKQBttAIWITcaaA
        16LTSoNFYIT99lRGQNGvwQugFLuL6FNyDMsR7l+vEOIL2LKMWp1vKeW22hAeN+hUTerXqFMP
        /AVLJss8zee8nAAAAABJRU5ErkJggg==
      </shape>
      <shape name='KPI/06.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAABJ0AAASdAHeZh94
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAiBpVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1T3W6bMBR+Fcu92aQFY8Dm
        R2UV2KD1gq1KI3W3BNwGJWBknIXm1XqxR9orzGQhqqYqti987O873zn2Obd3Y19WW6HBWrw0
        XQz/vP2GoKlj+EQKu+iZ2DTfjko8Hr+vquO2Cmt49xXcjtHY9q3QJRjbXTdEYwzLWq5FZPbT
        MYLgBNHbGCbTBfhZPAAmlQDEcheVjTGg1MIeoRR/AY6NHWSbRRfYiwiNHB+cBzRqqn6Oljw/
        axkrhhut+wihw+FgHVxLqheEwzCcfDjOwiAWw2uny3HRDTezBy6GSjW9bmQHJrtcy72OIZxT
        aPuiuDjuBuuUkFXJFo1lj7Blo7ZFM3rQS/F8HT2sXnuBlmKQe1UJA795J3WdOgFNNNEP1ZhP
        KXdcVvtWdPqex9DcWHVTR15COeaEJmZyjnGQppQ5OCcky1xiJ7OPj7h5mtqcucTQCcaZGwR+
        kOVZlnLGcp9duPfdoMuuEjO3OXFDP2DcvsqNmBKllmol5W6ugIeN1HLYyB6wRwo+PTVdLQ/D
        5+l7zpEK1fwSda5kC07vGzUf6KcsYUFCMupxkrkYJ05gB9j1mOeHnk2N/j9u/S7v/X4K3GM5
        8ZiNuR/wDOPUJzjLEx4k2MkY9iAykaD/KmU+MuU3bS91b4xL54jOtIsyffEXBVYGYV78fTkA
        AAEUSURBVFiFzdi7DsMgDAVQU/WXk6GdO/WP24EuNMoDsMHX4CshkSHWkUlIRIgxkufcZgO4
        uAfeEUVCCP/pg4gCEb1a7q8+ZjFG9djhYhrPVmCxNgi4xzUjTYEFXBPSDMjgxEgToBAnQsKB
        jTgWCQV24qpIGFCJKyIhQBAui1QDwbgLUgVMhdC4A7IbaIzbkF3AQTgW6QFXRXrBFZGecFnk
        +Y/6Q/PzPVxllnihed1bpS/JDOQFx20zI5FZnGSjHoEs4qSfOkvkSsQ0iQMaIldKUQMNkBsO
        BgQiDzgoEIC84OBABTKLMwF2IIs4M2ADsoozBQqQC4czB1aQItwo4BkpxnFAyAFmyrswVyXs
        OuAy7s+o3QN/HTxebpAd/IAAAAAASUVORK5CYII=
      </shape>
      <shape name='KPI/07.png'>
        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
        AElFTkSuQmCC
      </shape>
      <shape name='KPI/08.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAABJ0AAASdAHeZh94
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAhxpVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1T0W6bMBT9Fct92aQFY8CG
        oLIKbND6kK1KI3WvBNwGJWBkOwvNr+1hn7RfmMlCVk1VbD/42ufcc6997+3d0JfVVhiwFi9N
        l8DfP39B0NQJfCILd9EzsWm+HJV4PH5dVcdtNa/h3WdwO8RD27fClGBod52OhwSWtVyL2O7H
        YwTBCWK2CUzHC/B98QCYVAIQx59VLsaAUgcHhFL8CXgu9pBrF53hICY09kJwHtCqqfo5XvLi
        rGWtBG6M6WOEDoeDc/AdqV4Qns/now/Pm1nETL92phxmnb6ZPHChK9X0ppEdGO1yLfcmgXBK
        oe0Xi4vjTjunhJxKtmgoe4QdF7UtmtDaLMXzdbRevfYCLYWWe1UJC795I3WdOgJtNPE31dhP
        KXdcVvtWdOaeJ9DeOHVTx0FKOeaEpnZyjnGUZZR5uCAkz33ippOP97hFxv2IcmrpBOPcj6Iw
        yos8zzhjRcgu3PtOm7KrxMRt/nHJVW7MlCiNVCspd1MFPGykkXoje8AeKfjw1HS1POiP4/ec
        IxWq+SHqQskWnN43bt7Rz1jKopTkNOAk9zFOvciNsB+wIJwHLrX6f7n1m7z3+zHwgBUkYC7m
        YcRzjLOQ4LxIeZRiL2c4gMhGgv6rlOnIlt+4vdS9NS6dIzrbLsr2xR8BmAZedgi/9AAAAdlJ
        REFUWIXtmD0vBFEUht8VFvsDVDpZySYUOioFWtqZbKUQ4hcIUSnwBwS90FLbfssVRFilhs4u
        M3PnzodibiT32kRxX3GLPd05k7x5cs49H7ulPM/hsg38N8Bv5jzgoK2A59cvASz3+HR1cX62
        YqtvDQhg/mh3DKMjpe9AGOXY3HubJ2hTSizTTG805ScEbQpgIGIdUPmfBG0KYCSNXCUpAEAQ
        tCmAIkn1DMokB4CIoE0B/IiE2yVOzWWUZQAcapL3IMq0QFj4HYI2J4OZzgc1dVKCNucNmmNG
        vckuQZsCGJtdrPyYoE0BDKXUA8oPCdqkTSL1DMbFHHQGUKZmiRO3StyNeu/iD4L234yZ1LFB
        3QmFMaiFW4NapsZIdm3VBbF0+1iI1Hn1baqLHboHjWKqA5ZyDzJ+NH3ePAqs7rya8YCgjVL/
        nwVL6wPaGqNJ4Pn1dQBbAMYBvAA4uDg/O2FoWzeJ59fXahPl06W5CqaqZdy1YzSaAe6f4w0G
        JKPE24uzFczUhjE0WMJMbRgLsxWgyKi1MQDHpyfLWmCqWgaKclsbA/Dl9km/Te/bMVC8RWtj
        AO43mgFaDwJJArQeBK6bAQAcErQ5m8Tz6xv42cXH1sLorzp7cx7wCztR4jstIoJvAAAAAElF
        TkSuQmCC
      </shape>
      <shape name='KPI/09.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAABJ0AAASdAHeZh94
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAh1pVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1T0W6bMBT9Fct92aQFY8CG
        oLIKbKP1IVuVRupeCbgNSsDIOAvNr+1hn7RfmMlCVk1VbD/42ufcc6997+3d0BXlVhqwli91
        m8DfP39BUFcJfCILd9Exuam/HLV8PH5dlcdtOa/g3WdwO8RD0zXSFGBodm0fDwksKrWWsd2P
        xwiCE8RsE5iOF+D74gEwpSUgjj8rXYwBpQ4OCKX4E/Bc7CHXLjrDQUxo7IXgPKBV09VzvOT5
        WctaCdwY08UIHQ4H5+A7Sr8gPJ/PRx+eN7OIWf/ammKYtf3N5IHLvtR1Z2rVgtEu1mpvEgin
        FJpusbg4bnvnlJBTqgYNRYew46KmQRO6N0v5fB3dr147iZayV3tdSgu/eSN1nToCbTTxN13b
        Tyl2XJX7RrbmnifQ3jhVXcVBSjnmhKZ2co5xlGWUeTgnRAifuOnk4z1unuWRlwtq6QRj4UdR
        GIlciIwzlofswr1ve1O0pZy49T8uucqNmZaFUXql1G6qgIeNMqrfqA6wRwo+PNVtpQ79x/F7
        zpFKXf+QVa5VA07vG9fv6GcsZVFKBA04ET7GqRe5EfYDFoTzwKVW/y+3epP3fj8GHrCcBMzF
        PIy4wDgLCRZ5yqMUe4LhACIbCfqvUqYjW37j9lL31rh0jmxtu2jbF38ALPoGgtAaSM0AAAJT
        SURBVFiF7dixi9NgGMfxb2pOPGgOEyyeaA9cahfFoc53CILWVaSlm4ubNyp0LA6u/g2WdlMH
        BxHuijfqdEfxHC0qSMOBvd5dOIc4pfRyedM3ed9gB58t8JB8eJO8zy8xfN9nniv3rwGzau6B
        5vRBrd6YPmwBD4HbwI+Mrr8MbAKvup3286gG0Qq2gOat0bAEbACXM8L1KqNhGWjV6o2mLLAF
        NB9//2JU3QEZIQPctfvugEc/dw0RMgyc4JaPDwHIAHkCB1D0DoTIMPBBZTSc4ILSiDyFC6ro
        HXBjf88A7sQB1z4vFb6+u7By6swakEIcwOvCVbYt5yNQjQP+AlYzQMri7nU77RO3L+ol0Y1M
        jRMBp5G7ikglXBwwQK4pIJVxs4AqSGkcIMTJANMgteFkgUmR2nAQCguSyB5QDgOq7oDr472S
        j8GKt68FB8njVuxKFr2xVlwa4EykThykD6wT5LdzlrBpx3LYtpyttDhQS9QGYBgxDef/HANc
        BOy0F0kLnGwlUc9cUEVvrJyC0gBj97lwqaagpMBY3I7lEPVMqiCT7IMyE2ILKFRGw8h9Eih9
        WipskOBDTHYFZcfXXdQCRipg0tmqmoISAdMOfm3IOKBqKpFG1uoNIVIE1BWZlJFRQK15ThUZ
        BurGKSPDwCxwiZFxwPdHOZPf5lnduJlId2GRw5wJ8CYOuN7P2y8/OFcmSI04IdJdWKRnX6Kf
        t190O+2n081Ro269n7cBnpzxfd24MLIHlI9yZoB7Fm4UzeIAeTMDXBTybRQOwPj/E12x5h74
        F8U8DkvlrA52AAAAAElFTkSuQmCC
      </shape>
      <shape name='KPI/11.png'>
        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
        AAAAAElFTkSuQmCC
      </shape>
      <shape name='KPI/12.png'>
        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
        Xc5rPfBWb+cAAAAASUVORK5CYII=
      </shape>
      <shape name='KPI/13.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAABJ0AAASdAHeZh94
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAh1pVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1T0W6bMBT9Fct92aQFY8CG
        oLKK2EbrA1uVRupeCbgNSsDIOAvNr/Vhn7RfmMlCVE1VbD/42ufcc6997+3d0BXlVhqwli91
        m8A/b78hqKsEPpHczTsmN/W3o5aPx++r8rgt5xW8+wpuh3houkaaAgzNru3jIYFFpdYytvvx
        GEFwgphtAtPxAvzMHwBTWgLi+LPSxRhQ6uCAUIq/AM/FHnLtojMcxITGXgjOA1o1XT3HS56d
        tayVwI0xXYzQ4XBwDr6j9AvC8/l89OF5M4uY9a+tKYZZ299MHrjsS113plYtGO1irfYmgXBK
        oeny/OK47Z1TQk6pGjQUHcKOi5oGTejeLOXzdXS/eu0kWspe7XUpLfzmndR16gi00cQ/dG0/
        pdhxVe4b2Zp7nkB741R1FQcp5ZgTmtrJOcbRYkGZhzNChPCJm04+PuJmzBMuI66lE4yFH0Vh
        JDIhFpyxLGQX7n3bm6It5cStL9wgu8qNmZaFUXql1G6qgIeNMqrfqA6wRwo+PdVtpQ795/F7
        zpFKXf+SVaZVA07vG9cf6C9YyqKUCBpwInyMUy9yI+wHLAjngUut/j9u9S7v/X4MPGAZCZiL
        eRhxgfEiJFhkKY9S7AmGA4hsJOi/SpmObPmN20vdW+PSObK17aJtX/wF9TIGVo7wNFAAAAGM
        SURBVFiF7di9boMwFAXgQ4WaKSgLSh8kazORqTwAiOdD8ABNhzBn4z1SKQvK1oaIDoU2UAy2
        7+Vn6JksWb76dCRLlo2iKDDnPEwN6MvsgSbHEM8PquUBgAFgp3I+jkLhHmeDh83lvNtczg6A
        hGsoS4Mocc/ZOwwUAOCklp1Ascm2kBv0/OAHZ+WfWOZXbLMTuJokAZu4KpxIbaAIx43UAvbh
        OJHKQFkcF1IJqIrjQEoDdXFUpBSQiqMge4GeHyQcOF1kJ7DEOdvsxILTQQqB97hlfmXDtSE9
        PxAiW4FD41SQf4Bj4WSRNeDYOBlks8EPALhN8NC+waiWtdtYk8RR6KaWvT+u1sjMxVg2ZOYj
        jqsnpJb9FkfhixA4BbIL1wocE9mHEwLHQMrgOoFDIu9xAIS4XuAQSBWcFJATqYqTBnIgdXBK
        QApSF6cM1EFScFpAFSQVpw2UQWbmgowjAbuQ37g1UsveU3BkYBuygXOp87l+t9zUsl9RtsWF
        A/iAwC8SYMIBgPH/iU7M7IFfIdyNLuJOcwcAAAAASUVORK5CYII=
      </shape>
    </shapes>
  </external>
</workbook>
